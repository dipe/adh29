[
    {
        "id": "37daec28.284ee4",
        "type": "tab",
        "label": "WoZi",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2ba29887.9266e8",
        "type": "tab",
        "label": "EsZi",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3a471104.edfbae",
        "type": "tab",
        "label": "Treppenhaus",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4d90b497.b5b2ac",
        "type": "tab",
        "label": "Waschküche",
        "disabled": false,
        "info": ""
    },
    {
        "id": "293bb437.fa00bc",
        "type": "tab",
        "label": "Außen",
        "disabled": false,
        "info": ""
    },
    {
        "id": "fc81a32b.bb6db",
        "type": "tab",
        "label": "Store sensor data global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "2f328ad8.26ca86",
        "type": "tab",
        "label": "Verbrauch",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dac2cb3b.559138",
        "type": "tab",
        "label": "Warmwasser",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4fa3b184.bc7fb",
        "type": "tab",
        "label": "Luftgütemesser1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "59d7b954e676768e",
        "type": "tab",
        "label": "Luftguetemesser2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2788b93b.8a2f56",
        "type": "tab",
        "label": "Lüftungsempfehlungen",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d0173d54.941d7",
        "type": "tab",
        "label": "InfluxDB",
        "disabled": false,
        "info": ""
    },
    {
        "id": "559aac41a5cf74c4",
        "type": "tab",
        "label": "IR Heizungen",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "062848eb6508a3a6",
        "type": "tab",
        "label": "Haustür",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "caf02dc9a5b73890",
        "type": "tab",
        "label": "Kellertür",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "55309aa5255fcdbf",
        "type": "tab",
        "label": "Pins verwalten",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cd1e0b0c87b3c825",
        "type": "tab",
        "label": "Low Battery Detection",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7518cde088588ebe",
        "type": "tab",
        "label": "Solar-Start",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "937c538bb5079218",
        "type": "tab",
        "label": "Bad",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "039a8ad4ab697fb3",
        "type": "tab",
        "label": "Alexa",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "68fa2cc37e97fc23",
        "type": "tab",
        "label": "Büro DG",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "186ee9b7.78e426",
        "type": "tab",
        "label": "Web Push",
        "disabled": true,
        "info": ""
    },
    {
        "id": "fc93ef5a2502b341",
        "type": "tab",
        "label": "Kamera",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c2a5330f97fa7c16",
        "type": "tab",
        "label": "Fernbedienung",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f5d8e11fee9a1e7c",
        "type": "subflow",
        "name": "reolink-kamera",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 880,
                "y": 360,
                "wires": [
                    {
                        "id": "575bd07550518820",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1240,
                "y": 360,
                "wires": [
                    {
                        "id": "36171ea14a65a252",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "username",
                "type": "str",
                "value": ""
            },
            {
                "name": "password",
                "type": "cred"
            },
            {
                "name": "hostname",
                "type": "str",
                "value": ""
            }
        ],
        "meta": {},
        "color": "#C0DEED",
        "outputLabels": [
            "person detected",
            "snapshot"
        ],
        "icon": "font-awesome/fa-video-camera"
    },
    {
        "id": "5212abebc2a62f0b",
        "type": "junction",
        "z": "2ba29887.9266e8",
        "x": 1120,
        "y": 820,
        "wires": [
            [
                "13b7ccd6.d98e83"
            ]
        ]
    },
    {
        "id": "071a4bf6c5fc364a",
        "type": "junction",
        "z": "37daec28.284ee4",
        "x": 940,
        "y": 680,
        "wires": [
            [
                "40e09b5.33b3964"
            ]
        ]
    },
    {
        "id": "5c7662f3482de838",
        "type": "junction",
        "z": "37daec28.284ee4",
        "x": 940,
        "y": 900,
        "wires": [
            [
                "3915a3f2.641aac"
            ]
        ]
    },
    {
        "id": "6861c771c8a292af",
        "type": "junction",
        "z": "37daec28.284ee4",
        "x": 940,
        "y": 1100,
        "wires": [
            [
                "5d0fee20.ccd4d"
            ]
        ]
    },
    {
        "id": "3e8265b731ace8dc",
        "type": "junction",
        "z": "37daec28.284ee4",
        "x": 940,
        "y": 1300,
        "wires": [
            [
                "82751974.3c5238"
            ]
        ]
    },
    {
        "id": "4cf435ec8d6914ea",
        "type": "junction",
        "z": "2ba29887.9266e8",
        "x": 580,
        "y": 780,
        "wires": [
            [
                "58e6b312940c0def"
            ]
        ]
    },
    {
        "id": "032018a08a1fdd54",
        "type": "junction",
        "z": "2ba29887.9266e8",
        "x": 860,
        "y": 780,
        "wires": [
            [
                "58e6b312940c0def"
            ]
        ]
    },
    {
        "id": "fc981677cf6642bf",
        "type": "junction",
        "z": "cd1e0b0c87b3c825",
        "x": 500,
        "y": 340,
        "wires": [
            [
                "6fbe191dd2093f9d",
                "090e6e925f835a4e"
            ]
        ]
    },
    {
        "id": "7925a6a710f06185",
        "type": "junction",
        "z": "37daec28.284ee4",
        "x": 940,
        "y": 1880,
        "wires": [
            [
                "c5c764bba2c5634b"
            ]
        ]
    },
    {
        "id": "3faa223976b105a1",
        "type": "junction",
        "z": "37daec28.284ee4",
        "x": 280,
        "y": 1680,
        "wires": [
            [
                "18e24a3aa31ea2fc"
            ]
        ]
    },
    {
        "id": "8f66933c6d3d372d",
        "type": "junction",
        "z": "37daec28.284ee4",
        "x": 940,
        "y": 1680,
        "wires": [
            [
                "9aa43a713a9b1028"
            ]
        ]
    },
    {
        "id": "ab80bfbe92fac945",
        "type": "junction",
        "z": "68fa2cc37e97fc23",
        "x": 860,
        "y": 880,
        "wires": [
            [
                "e51fc2733ce2d3f1"
            ]
        ]
    },
    {
        "id": "4df1b9f51433920e",
        "type": "junction",
        "z": "68fa2cc37e97fc23",
        "x": 440,
        "y": 260,
        "wires": [
            [
                "60a8d3a1dcdf72cc",
                "6f9b259b00b18baa"
            ]
        ]
    },
    {
        "id": "12ebe76fae3f9cf7",
        "type": "junction",
        "z": "dac2cb3b.559138",
        "x": 700,
        "y": 280,
        "wires": [
            [
                "df2bfb8e940b1768",
                "53936a862e9e6c08"
            ]
        ]
    },
    {
        "id": "01754ad54aa8234a",
        "type": "junction",
        "z": "062848eb6508a3a6",
        "x": 540,
        "y": 600,
        "wires": [
            [
                "cb816aa78cf4b284"
            ]
        ]
    },
    {
        "id": "50056ddfb9a03fd5",
        "type": "junction",
        "z": "062848eb6508a3a6",
        "x": 540,
        "y": 480,
        "wires": [
            [
                "cb816aa78cf4b284"
            ]
        ]
    },
    {
        "id": "c349b9ff.9dc4c8",
        "type": "mqtt-broker",
        "name": "dipe-pi",
        "broker": "dipe-pi",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "compatmode": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "dc07af4f.71ca1",
        "type": "ui_tab",
        "name": "Wohnzimmer",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e4ade7a.0cef418",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "light-blue",
                "warn": "red",
                "background": "grey",
                "palette": "dark"
            }
        },
        "site": {
            "name": "[DIPE] Home",
            "hideToolbar": "false",
            "allowSwipe": "true",
            "lockMenu": "false",
            "allowTempTheme": "none",
            "dateFormat": "YYYY-MM-DD",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "1b9713a7.a3a26c",
        "type": "ui_group",
        "name": "Tiffany",
        "tab": "dc07af4f.71ca1",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3f0994e3.62d76c",
        "type": "ui_group",
        "name": "Szenen",
        "tab": "dc07af4f.71ca1",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b4675dbc.146e1",
        "type": "ui_group",
        "name": "Leuchter",
        "tab": "dc07af4f.71ca1",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4a760c5.5eef1f4",
        "type": "ui_tab",
        "name": "Esszimmer/Küche",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "740db3e2.8916ac",
        "type": "ui_group",
        "name": "Fensterbank",
        "tab": "dc07af4f.71ca1",
        "order": 8,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "33913a78.8716a6",
        "type": "ui_group",
        "name": "Klavierlampe",
        "tab": "dc07af4f.71ca1",
        "order": 7,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "12ecf9a1.9cb126",
        "type": "ui_group",
        "name": "Tisch",
        "tab": "4a760c5.5eef1f4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "643154e.6b44bac",
        "type": "ui_group",
        "name": "Eckschrank",
        "tab": "4a760c5.5eef1f4",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "aca2d944.6c15c8",
        "type": "ui_group",
        "name": "Szenen",
        "tab": "4a760c5.5eef1f4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "1c76ef79.75b781",
        "type": "ui_tab",
        "name": "Waschküche",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "e822c4d8.ce3a88",
        "type": "ui_tab",
        "name": "Verbrauch",
        "icon": "dashboard",
        "order": 10,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "48b52eb1.50063",
        "type": "fritzbox-config",
        "name": "",
        "host": "fritz.box",
        "port": "49443",
        "ssl": true,
        "user": "nodered"
    },
    {
        "id": "7e092ea0.4f2d9",
        "type": "ui_group",
        "name": "Aktuell",
        "tab": "1c76ef79.75b781",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "10925253.f46f4e",
        "type": "hangoutsCertificate",
        "clientEmail": "haus-bot@home-hangout.iam.gserviceaccount.com",
        "privateKey": "-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCYNybJAubXeD6C\\nZQlSnhfZcVDgZWo4Yb3xAEz4/T0b5GpjaiO3oVYcdliFhVc+IfjmPPCeVDQvk3g7\\ns5YqG6NdRtvfqMrckUFzKA4DWmGBM+cdteoloTwn37FDxVZCk2ADXw/A++6bhKcl\\nh9hPtbL6UJvj0Vye5yeVjB9v5/l0pbJ3W+OXDEEZsGtYq3RMeKF7ghY00Z7uweiH\\nxoPO0tOZ5kp9Inmwy7Wd0D+OsjGjyEAu0zsvTOAatdeeErsQmfCrz5U13GYGoUbt\\nQfEChBIA1I17D/Pq9YuJXD+hAM7ZrC48zZwwM2HMoRSSRfiux2kfFhNW/d1zglzS\\nazqAs0lZAgMBAAECggEAD7mx6HYj6FqINbMvvIDv9JNKAFbF26OQapWl/hq2fZtS\\nWOkyHbJdqbTZxhiNl/INS2b8ElVfa1NcSmmuH7VJgjVT+ZYv+AvLI9UdZoAHvwAA\\nVl/Q+/h9dR6dawOX+uqMEqkXYO/+GYPBu2U+hhSe1BCwHEAIxjNaEe9/H3HrIf9k\\nBDSc8mRk1MwOiu5BvKxISWdWbgAgZKzlQaD9/knH430b9YtmF/jseoa1oG+p3cpu\\nfCyFma7yabR9Quugnx8IqSAm4rxVrDfAgH3gRsjwx5QUsl9wVz/egF0XRS6ScR7t\\nvxjd1oUr9Jt1G3QyPk2zLAD+IgAHNah6Sp/Jrp6pgQKBgQDK5Rl6jNlxUQHHSk26\\nQPV4fUMA3aQeERNqRKvSIPNB7upTbdh1ZoU5UeIzIIP4vI4y/B7V+fMQDXjjXuv2\\nft/R6SQ2DgoA3LOH6c+H6c5M5EtPNe/CSkUeKOlIO7IEQVbMyeroV49hfbslHl9G\\nnXxzmmb6pv6lKZTSy75SLZPCgQKBgQDADkqg2Qg26zFxSC5aeiUTQSzyBbVZxwlU\\nnibZpzB9oeQTWuCiS5HWug4T35/YYmzmnQDsM+EQ+JyLdWY9js4Was4eeI/2BxDN\\nYH5TKRB0rIJZ8brUjhVPYSxnBBC+nH9fxlHCQtJA8agEeB6lwqFjy0d6Av+1TUMm\\nBe9j5upq2QKBgD398eL31hhBYAG8OjOGVXoTC73f+p0VKpF1meoCF1E15nLHRTPZ\\ntyrkUfC9JpWBRxFc5y8Jx7JH63/NKNuPuGMykNXTREsvI8uLLNWiIl5sAnaZTEBY\\n4PVuGpjvZFzYeeTobNXAqxZmjB+zP/kbdUL9EinTjEp6gfZGOkhxlIwBAoGATOhs\\nMiU3COb+EaMaDNlE54T9/p0SljUCI4SBgj9VR7oAn0+RDOy+JgKziHnQhNJFUcQl\\njnDn++fSqHYGzzfUh12V1NXqsFb7/4JYk+ypzk8Wk/YdHukW14bORSJ3oh0BVNUS\\nAHzJvYAIDGIdw7tA7bmFkfKJe4zJCvztdFAQJ2ECgYEAwmUMJ8lxdckV2RhxSs8G\\n1iG5f+lfU/e28EHDkV5w20ggaHiybaR/Ye72dLFLXhszMgaVWrP52Voc5aQ3oPaM\\nobJnbdft7IEcLpjLyM94jIN+gGhMvEaulLM3Do/odUvcGpQj8mSqcJqLA/j/j9a7\\n9dAIlJJsy5l3DfBFNn3fNFQ=\\n-----END PRIVATE KEY-----\\n"
    },
    {
        "id": "96087061.c7ebf",
        "type": "ui_tab",
        "name": "Außen",
        "icon": "dashboard",
        "order": 9,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d32aa509.f54168",
        "type": "ui_group",
        "name": "Licht",
        "tab": "96087061.c7ebf",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    },
    {
        "id": "c824e9e5.f339c8",
        "type": "ui_tab",
        "name": "Treppenhaus",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "64b01bd0.e1d1b4",
        "type": "ui_group",
        "name": "Licht",
        "tab": "c824e9e5.f339c8",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "da0dc882.b12038",
        "type": "ui_tab",
        "name": "Lüftungsempfehlungen",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "245ec0f9.12765",
        "type": "ui_group",
        "name": "Keller",
        "tab": "da0dc882.b12038",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c2e6322e.33404",
        "type": "fritz-api",
        "name": "fritzBox",
        "host": "http://fritz.box",
        "strictSSL": true
    },
    {
        "id": "a8a6836d.1b1cf",
        "type": "ui_group",
        "name": "Gas",
        "tab": "e822c4d8.ce3a88",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "e2d75124.92d37",
        "type": "ui_tab",
        "name": "Warmwasser",
        "icon": "dashboard",
        "order": 12,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "dab59e38.c408e",
        "type": "ui_group",
        "name": "Strom",
        "tab": "e822c4d8.ce3a88",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "eedc289c.0c0738",
        "type": "ui_tab",
        "name": "Werkstatt",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d796a540.50d378",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "eedc289c.0c0738",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "10c3f1d2.4cdbde",
        "type": "ui_group",
        "name": "Manuell",
        "tab": "e2d75124.92d37",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "82403ec68b4e0d16",
        "type": "ui_group",
        "d": true,
        "name": "Wasser",
        "tab": "e822c4d8.ce3a88",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "03f79ee82b15785f",
        "type": "ui_tab",
        "name": "Fahrradkeller",
        "icon": "dashboard",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6e590cb07ba9a85d",
        "type": "ui_group",
        "name": "Äußentür",
        "tab": "03f79ee82b15785f",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9092750be0b451a2",
        "type": "ui_tab",
        "name": "IR-Heizungen",
        "icon": "dashboard",
        "order": 13,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f4c6c5353740e204",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "9092750be0b451a2",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8929498a4f6d4a2d",
        "type": "config-log",
        "logname": "node-red",
        "logdir": "node-red-logs",
        "stamp": "utc",
        "logstyle": "plain",
        "logrotate": true,
        "logcompress": true,
        "logrotatecount": "5",
        "logsize": "1000"
    },
    {
        "id": "bf6b9b61f49db1aa",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "influxdb",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "f35232155f174921",
        "type": "ui_tab",
        "name": "Batterie Status",
        "icon": "dashboard",
        "order": 14,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "fb88c1d7fb2d5bc7",
        "type": "ui_group",
        "name": "Schwache Batterie",
        "tab": "f35232155f174921",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b6281cf3b645a6ba",
        "type": "ui_group",
        "name": "Long time no see",
        "tab": "f35232155f174921",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0c36d213a586e544",
        "type": "ui_tab",
        "name": "Solar-Start",
        "icon": "dashboard",
        "order": 11,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "59ad78e6b49c46bb",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "0c36d213a586e544",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ff6f06b14f53b220",
        "type": "ui_tab",
        "name": "Bad",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "905a9d51a059b04d",
        "type": "ui_group",
        "name": "Licht",
        "tab": "ff6f06b14f53b220",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4cb7d08eef74e7ad",
        "type": "ui_group",
        "name": "Tizio",
        "tab": "dc07af4f.71ca1",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "224aeff292ec06d7",
        "type": "ui_spacer",
        "z": "4fa3b184.bc7fb",
        "name": "spacer",
        "group": "33913a78.8716a6",
        "order": 6,
        "width": "0",
        "height": "0"
    },
    {
        "id": "c5e8c040d3ec3e46",
        "type": "ui_spacer",
        "z": "4fa3b184.bc7fb",
        "name": "spacer",
        "group": "4cb7d08eef74e7ad",
        "order": 2,
        "width": "6",
        "height": "1"
    },
    {
        "id": "b425927fca74a6a7",
        "type": "vsh-connection",
        "name": "pe@dipe.de",
        "port": "8883",
        "accessTokenExpiry": "1703615032458",
        "debug": false,
        "backendUrl": "https://kfd5m4a21f.execute-api.eu-west-1.amazonaws.com/dev",
        "lwaClientId": "amzn1.application-oa2-client.3f1bb07133854b078261ad43f2484c18"
    },
    {
        "id": "b8fb397bd580054b",
        "type": "ui_tab",
        "name": "Luftgütemesser 2",
        "icon": "dashboard",
        "order": 15,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "69570255a88564b2",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "b8fb397bd580054b",
        "order": 1,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ec1c4f819cdc25fd",
        "type": "ui_group",
        "name": "Tolomeo",
        "tab": "dc07af4f.71ca1",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7fd2dc4a9ee46617",
        "type": "ui_group",
        "name": "Tizio Standsäule",
        "tab": "dc07af4f.71ca1",
        "order": 6,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2cd53579c72761c2",
        "type": "ui_spacer",
        "z": "37daec28.284ee4",
        "name": "spacer",
        "group": "7fd2dc4a9ee46617",
        "order": 8,
        "width": "6",
        "height": "1"
    },
    {
        "id": "482f6aac9d63d29c",
        "type": "ui_tab",
        "name": "Büro DG",
        "icon": "dashboard",
        "order": 16,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "2a035fef893e8cd2",
        "type": "ui_group",
        "name": "Heizung",
        "tab": "482f6aac9d63d29c",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8dc58e15e89f6392",
        "type": "vapid-configuration",
        "subject": "mailto:pe@dipe.de",
        "publicKey": "BH5bZgGKEunQfA6NozNO0i6SxfXnDuFNeBnQZsmI7fBZu-QULSYw6CrRve1LqqJWBN_lghsb8xyz11tFR2v1S4M",
        "privateKey": "ntbnnYlqZSlCTRK59b3rzUmLB1MqLIL1oCkzgAzhxJ4",
        "gcmApiKey": "",
        "timeout": "0",
        "name": ""
    },
    {
        "id": "0c6a4630d4ea781b",
        "type": "ui_group",
        "name": "IR-Heizung",
        "tab": "482f6aac9d63d29c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "67d83082d4b43190",
        "type": "ui_group",
        "name": "Schreibtischlampe",
        "tab": "482f6aac9d63d29c",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "62f7389128d01483",
        "type": "ui_group",
        "name": "Erdgeschoss",
        "tab": "da0dc882.b12038",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "0136f8969e2acd16",
        "type": "ui_group",
        "name": "Obergeschoss",
        "tab": "da0dc882.b12038",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f3afb1654d596966",
        "type": "ui_group",
        "name": "Dachgeschoss",
        "tab": "da0dc882.b12038",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c64d3ecd133a32df",
        "type": "ui_group",
        "name": "Draußen",
        "tab": "da0dc882.b12038",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bebc2a08.8975f8",
        "type": "ui_group",
        "name": "Kellertür",
        "tab": "f1b5e757.dd28e8",
        "order": 2,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f1b5e757.dd28e8",
        "type": "ui_tab",
        "name": "Kameras",
        "icon": "dashboard",
        "order": 19,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3dbea5f7117423db",
        "type": "button-events-config",
        "name": "STD Button Timings",
        "clickedInterval": "200",
        "pressedInterval": "300",
        "debounceInterval": "30"
    },
    {
        "id": "6ed7382c947a98d9",
        "type": "ui_group",
        "name": "Haustür",
        "tab": "f1b5e757.dd28e8",
        "order": 1,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "09752717148dff64",
        "type": "ui_group",
        "name": "Balkon",
        "tab": "f1b5e757.dd28e8",
        "order": 3,
        "disp": false,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "b714005ba4818fc0",
        "type": "ui_group",
        "name": "Push-Benachrichtigungen",
        "tab": "f1b5e757.dd28e8",
        "order": 4,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "d172b67019921586",
        "type": "ui_tab",
        "name": "Fernbedienung",
        "icon": "dashboard",
        "order": 18,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f52f860f97388f73",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "d172b67019921586",
        "order": 1,
        "disp": false,
        "width": 2,
        "collapse": false,
        "className": ""
    },
    {
        "id": "deb41d0cb1067945",
        "type": "ui_group",
        "name": "Group 2",
        "tab": "d172b67019921586",
        "order": 2,
        "disp": false,
        "width": 2,
        "collapse": false,
        "className": ""
    },
    {
        "id": "293408e2cb7bb9c0",
        "type": "ui_group",
        "name": "Group 3",
        "tab": "d172b67019921586",
        "order": 3,
        "disp": false,
        "width": 2,
        "collapse": false,
        "className": ""
    },
    {
        "id": "2359d0317a8e5efd",
        "type": "ui_group",
        "name": "Group 4",
        "tab": "d172b67019921586",
        "order": 4,
        "disp": false,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "40197d5f58592aee",
        "type": "ui_group",
        "name": "Haustür",
        "tab": "c824e9e5.f339c8",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "873ef7e7ca01f456",
        "type": "ui_group",
        "name": "PINs verwalten",
        "tab": "d7b56cc89e974aec",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d7b56cc89e974aec",
        "type": "ui_tab",
        "name": "Pins verwalten",
        "icon": "dashboard",
        "order": 17,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "afcbed3b3929b5c2",
        "type": "ui_group",
        "name": "Log",
        "tab": "c824e9e5.f339c8",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9f1d2493f3ac9b3c",
        "type": "ui_group",
        "name": "Log",
        "tab": "03f79ee82b15785f",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6dc87f2a036e6f15",
        "type": "ui_group",
        "name": "Log",
        "tab": "d7b56cc89e974aec",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a27c201f88d5372d",
        "type": "http request",
        "z": "f5d8e11fee9a1e7c",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 300,
        "wires": [
            [
                "8406ac3401f66db6"
            ]
        ]
    },
    {
        "id": "e9c24f7de0b9dc42",
        "type": "inject",
        "z": "f5d8e11fee9a1e7c",
        "name": "",
        "props": [
            {
                "p": "url",
                "v": "\"http://\" & $env('hostname') & \"/cgi-bin/api.cgi?cmd=GetAiState&token=\" & $flowContext(\"token\")",
                "vt": "jsonata"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "a27c201f88d5372d"
            ]
        ]
    },
    {
        "id": "8406ac3401f66db6",
        "type": "switch",
        "z": "f5d8e11fee9a1e7c",
        "name": "Mensch",
        "property": "payload[0].value.people.alarm_state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 480,
        "y": 300,
        "wires": [
            [
                "575bd07550518820"
            ]
        ]
    },
    {
        "id": "bc2389e7080a4308",
        "type": "change",
        "z": "f5d8e11fee9a1e7c",
        "name": "Prep Login Post",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "\"http://\" & $env('hostname') & \"/cgi-bin/api.cgi?cmd=Login\"",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[{\"cmd\":\"Login\",\"action\":0,\"param\":{\"User\":{\"userName\":$env('username'),\"password\":$env('password')}}}]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 200,
        "wires": [
            [
                "741722e4a7ad9cdb"
            ]
        ]
    },
    {
        "id": "741722e4a7ad9cdb",
        "type": "http request",
        "z": "f5d8e11fee9a1e7c",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 510,
        "y": 200,
        "wires": [
            [
                "79f15d4a0714d7d8"
            ]
        ]
    },
    {
        "id": "ded95475e69af2fe",
        "type": "inject",
        "z": "f5d8e11fee9a1e7c",
        "name": "",
        "props": [],
        "repeat": "3000",
        "crontab": "",
        "once": true,
        "onceDelay": "11",
        "topic": "",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "bc2389e7080a4308"
            ]
        ]
    },
    {
        "id": "79f15d4a0714d7d8",
        "type": "change",
        "z": "f5d8e11fee9a1e7c",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "token",
                "pt": "flow",
                "to": "payload[0].value.Token.name",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 200,
        "wires": [
            []
        ],
        "icon": "font-awesome/fa-lock"
    },
    {
        "id": "6dfc591e4b556f70",
        "type": "change",
        "z": "f5d8e11fee9a1e7c",
        "name": "Prep Snap Get",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "\"http://\" & $env('hostname') & \"/cgi-bin/api.cgi?cmd=Snap&channel=0&token=\" & $flowContext(\"token\")",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 300,
        "wires": [
            [
                "36171ea14a65a252"
            ]
        ]
    },
    {
        "id": "36171ea14a65a252",
        "type": "http request",
        "z": "f5d8e11fee9a1e7c",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "575bd07550518820",
        "type": "delay",
        "z": "f5d8e11fee9a1e7c",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "minute",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "allowrate": false,
        "outputs": 1,
        "x": 660,
        "y": 300,
        "wires": [
            [
                "6dfc591e4b556f70"
            ]
        ]
    },
    {
        "id": "930e92a7.3f378",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Wandtaster rechts",
        "topic": "wandschalter-wozi1/binary_sensor/switch_1/state",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 180,
        "wires": [
            [
                "5bd1bdfd.b90a34"
            ]
        ]
    },
    {
        "id": "84c90245.9e44f",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Wandtaster links",
        "topic": "wandschalter-wozi1/binary_sensor/switch_2/state",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 220,
        "wires": [
            [
                "c018a260.a19a4"
            ]
        ]
    },
    {
        "id": "dd76d72f.e06798",
        "type": "switch",
        "z": "37daec28.284ee4",
        "name": "",
        "property": "payload.device_idx",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "6",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "7",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 430,
        "y": 360,
        "wires": [
            [],
            [
                "292571624198d1e5"
            ],
            [
                "f83c6c95491b4f1e"
            ],
            [
                "22c55f0a1a6d03e2"
            ],
            [
                "ae5368759a4d9b49"
            ],
            [
                "8bdbacff7bbffaf0"
            ],
            [
                "5e9c71249a120fe4"
            ],
            [
                "77255d6964b0c838"
            ]
        ]
    },
    {
        "id": "ed1e9ea1.c5e59",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "save scene idx",
        "func": "msg.payload = Number(msg.payload)\nflow.set(\"current_scene_idx\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 280,
        "wires": [
            [
                "a7dbd651.4467b8"
            ]
        ]
    },
    {
        "id": "a7dbd651.4467b8",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "current scene",
        "func": "var scenes = flow.get(\"scenes\");\nvar current_scene_idx = flow.get(\"current_scene_idx\");\nvar scene = scenes[current_scene_idx];\nmsg.payload = scene.devices;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 320,
        "wires": [
            [
                "9cfaf9a.449b908"
            ]
        ]
    },
    {
        "id": "9cfaf9a.449b908",
        "type": "split",
        "z": "37daec28.284ee4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "dd76d72f.e06798"
            ]
        ]
    },
    {
        "id": "3a3f3f29.1be49",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "",
        "mode": "link",
        "links": [
            "6637cc7f.54ff74"
        ],
        "x": 745,
        "y": 280,
        "wires": []
    },
    {
        "id": "bd4f1b1d.c1d598",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "",
        "links": [
            "a14232cb.a4256",
            "e30a134d.f410a"
        ],
        "x": 745,
        "y": 320,
        "wires": []
    },
    {
        "id": "773f6fe1.26d11",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "",
        "mode": "link",
        "links": [
            "4bbc2b23.ee06a4"
        ],
        "x": 745,
        "y": 360,
        "wires": []
    },
    {
        "id": "d0971035.fd6cc",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "",
        "links": [
            "cd111146.3d5c4",
            "e5d97c3.d1d738"
        ],
        "x": 745,
        "y": 400,
        "wires": []
    },
    {
        "id": "c5a30ac4.50aad8",
        "type": "inject",
        "z": "37daec28.284ee4",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "6b9f314660665039"
            ]
        ]
    },
    {
        "id": "4d73c0b1.422e1",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "2",
        "func": "msg.payload = 2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 220,
        "wires": [
            [
                "5e79d51e.9213dc"
            ]
        ]
    },
    {
        "id": "79fb43e2.dda08c",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "4",
        "func": "msg.payload = 4;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 180,
        "wires": [
            [
                "5e79d51e.9213dc"
            ]
        ]
    },
    {
        "id": "5e79d51e.9213dc",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "toggle szene",
        "func": "var new_scene_idx = msg.payload;\nvar current_scene_idx = flow.get(\"current_scene_idx\");\n\nif (current_scene_idx != new_scene_idx) {\n    current_scene_idx = new_scene_idx\n} else {\n    current_scene_idx = 0\n}\n\nmsg.payload = current_scene_idx;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 200,
        "wires": [
            [
                "ed1e9ea1.c5e59"
            ]
        ]
    },
    {
        "id": "5d0fee20.ccd4d",
        "type": "mqtt out",
        "z": "37daec28.284ee4",
        "name": "Klavierlampe",
        "topic": "zigbee2mqtt/klavierlampe/set",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1070,
        "y": 1140,
        "wires": []
    },
    {
        "id": "f0382b17.121318",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Klavierlampe",
        "topic": "zigbee2mqtt/klavierlampe",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 1140,
        "wires": [
            [
                "c47da63c.598c78",
                "7eb17679.660788",
                "cff872e789db0734"
            ]
        ]
    },
    {
        "id": "c47da63c.598c78",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "save Klavierlampe state",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload.state = 'ON' ? 'on' : 'off'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brightness",
                "pt": "msg",
                "to": "payload.brightness",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "klavierlampe",
                "pt": "flow",
                "to": "{'state': state, 'brightness': brightness}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb17679.660788",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "return { payload: { state: msg.payload.state }};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1100,
        "wires": [
            [
                "a491d10d.02174"
            ]
        ]
    },
    {
        "id": "a491d10d.02174",
        "type": "ui_switch",
        "z": "37daec28.284ee4",
        "name": "An/Aus Klavierlampe Fernsehzimmer",
        "label": "An/Aus",
        "tooltip": "",
        "group": "33913a78.8716a6",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 610,
        "y": 1100,
        "wires": [
            [
                "6861c771c8a292af"
            ]
        ]
    },
    {
        "id": "4bbc2b23.ee06a4",
        "type": "link in",
        "z": "37daec28.284ee4",
        "name": "Set Klavierlampe",
        "links": [
            "f854ab23be90c932",
            "773f6fe1.26d11"
        ],
        "x": 925,
        "y": 1180,
        "wires": [
            [
                "5d0fee20.ccd4d"
            ]
        ]
    },
    {
        "id": "e5d97c3.d1d738",
        "type": "link in",
        "z": "37daec28.284ee4",
        "name": "Set Leuchter",
        "links": [
            "f7443f20a538ebdd",
            "d0971035.fd6cc"
        ],
        "x": 925,
        "y": 1380,
        "wires": [
            [
                "82751974.3c5238"
            ]
        ]
    },
    {
        "id": "e30a134d.f410a",
        "type": "link in",
        "z": "37daec28.284ee4",
        "name": "Set Fensterbank",
        "links": [
            "73ac73c881c9adfd",
            "bd4f1b1d.c1d598"
        ],
        "x": 925,
        "y": 980,
        "wires": [
            [
                "3915a3f2.641aac"
            ]
        ]
    },
    {
        "id": "6637cc7f.54ff74",
        "type": "link in",
        "z": "37daec28.284ee4",
        "name": "Tiffany MQTT",
        "links": [
            "19bb7ceb9cdb5b49",
            "3a3f3f29.1be49"
        ],
        "x": 925,
        "y": 760,
        "wires": [
            [
                "40e09b5.33b3964"
            ]
        ]
    },
    {
        "id": "3915a3f2.641aac",
        "type": "mqtt out",
        "z": "37daec28.284ee4",
        "name": "Fensterbank",
        "topic": "zigbee2mqtt/fensterbank/set",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1070,
        "y": 940,
        "wires": []
    },
    {
        "id": "f53bfe8.c90b9",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Fensterbank",
        "topic": "zigbee2mqtt/fensterbank",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 940,
        "wires": [
            [
                "bcc690db.8cb87",
                "63507385.c44d5c",
                "922ccac0c7046219",
                "b07f212d.4c75a"
            ]
        ]
    },
    {
        "id": "63507385.c44d5c",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "save fensterbank state",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload.state = 'ON' ? 'on' : 'off'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brightness",
                "pt": "msg",
                "to": "payload.brightness",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "fensterbank",
                "pt": "flow",
                "to": "{'state': state, 'brightness': brightness}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "8e0a2075.97183",
        "type": "ui_switch",
        "z": "37daec28.284ee4",
        "name": "An/Aus Fensterbank Fernsehzimmer",
        "label": "An/Aus",
        "tooltip": "",
        "group": "740db3e2.8916ac",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "x": 610,
        "y": 900,
        "wires": [
            [
                "5c7662f3482de838"
            ]
        ]
    },
    {
        "id": "4ba59f70.c989c",
        "type": "ui_slider",
        "z": "37daec28.284ee4",
        "name": "Helligkeit Fensterbank Fernsehzimmer",
        "label": "Helligkeit",
        "tooltip": "",
        "group": "740db3e2.8916ac",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "4",
        "max": "254",
        "step": "10",
        "className": "",
        "x": 610,
        "y": 940,
        "wires": [
            [
                "9ac7d8bf.354318"
            ]
        ]
    },
    {
        "id": "9ac7d8bf.354318",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "brightness",
        "func": "msg.payload = {\"brightness\": msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 940,
        "wires": [
            [
                "3915a3f2.641aac"
            ]
        ]
    },
    {
        "id": "bcc690db.8cb87",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "msg.payload = {\"state\": msg.payload.state};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 900,
        "wires": [
            [
                "8e0a2075.97183"
            ]
        ]
    },
    {
        "id": "b07f212d.4c75a",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "brightness",
        "func": "msg.payload = msg.payload.brightness;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 940,
        "wires": [
            [
                "4ba59f70.c989c"
            ]
        ]
    },
    {
        "id": "c018a260.a19a4",
        "type": "switch",
        "z": "37daec28.284ee4",
        "name": "state ON",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "4d73c0b1.422e1"
            ]
        ]
    },
    {
        "id": "5bd1bdfd.b90a34",
        "type": "switch",
        "z": "37daec28.284ee4",
        "name": "state ON",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 180,
        "wires": [
            [
                "79fb43e2.dda08c"
            ]
        ]
    },
    {
        "id": "40e09b5.33b3964",
        "type": "mqtt out",
        "z": "37daec28.284ee4",
        "name": "Tiffany",
        "topic": "zigbee2mqtt/tiffany/set",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1050,
        "y": 720,
        "wires": []
    },
    {
        "id": "792c807c.de0c7",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Tiffany",
        "topic": "zigbee2mqtt/tiffany",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 720,
        "wires": [
            [
                "7e4ae382.f3381c",
                "52aea2ca.07744c",
                "418f4f02f0ac1e08",
                "9762023d.37de7"
            ]
        ]
    },
    {
        "id": "52aea2ca.07744c",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "save tiffany state",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload.state = 'ON' ? 'on' : 'off'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brightness",
                "pt": "msg",
                "to": "payload.brightness",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tiffany",
                "pt": "flow",
                "to": "{'state': state, 'brightness': brightness}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "30c5bc34.3c3974",
        "type": "ui_switch",
        "z": "37daec28.284ee4",
        "name": "An/Aus Tiffany",
        "label": "An/Aus",
        "tooltip": "",
        "group": "1b9713a7.a3a26c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 540,
        "y": 680,
        "wires": [
            [
                "071a4bf6c5fc364a"
            ]
        ]
    },
    {
        "id": "483d789b.9b7bd8",
        "type": "ui_slider",
        "z": "37daec28.284ee4",
        "name": "Helligkeit Tiffany",
        "label": "Helligkeit",
        "tooltip": "",
        "group": "1b9713a7.a3a26c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "4",
        "max": "254",
        "step": "10",
        "className": "",
        "x": 540,
        "y": 720,
        "wires": [
            [
                "f74f051f.78aca8"
            ]
        ]
    },
    {
        "id": "f74f051f.78aca8",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "brightness",
        "func": "msg.payload = {\"brightness\": msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 720,
        "wires": [
            [
                "40e09b5.33b3964"
            ]
        ]
    },
    {
        "id": "7e4ae382.f3381c",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "msg.payload = {\"state\": msg.payload.state};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 680,
        "wires": [
            [
                "30c5bc34.3c3974"
            ]
        ]
    },
    {
        "id": "9762023d.37de7",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "brightness",
        "func": "msg.payload = msg.payload.brightness;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 720,
        "wires": [
            [
                "483d789b.9b7bd8"
            ]
        ]
    },
    {
        "id": "82751974.3c5238",
        "type": "mqtt out",
        "z": "37daec28.284ee4",
        "name": "Leuchter",
        "topic": "zigbee2mqtt/leuchter/set",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1060,
        "y": 1340,
        "wires": []
    },
    {
        "id": "87c6eea5.de14c",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Leuchter",
        "topic": "zigbee2mqtt/leuchter",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 1340,
        "wires": [
            [
                "d2d0266a.cd3ee8",
                "7411287e.b145a8",
                "11d236e2.b42379",
                "49386ad2cbcb1f8f"
            ]
        ]
    },
    {
        "id": "9aca83f0.327cd",
        "type": "ui_switch",
        "z": "37daec28.284ee4",
        "name": "An/Aus Leuchter Fernsehzimmer",
        "label": "An/Aus",
        "tooltip": "",
        "group": "b4675dbc.146e1",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 600,
        "y": 1300,
        "wires": [
            [
                "3e8265b731ace8dc"
            ]
        ]
    },
    {
        "id": "546088f6.3a4488",
        "type": "ui_slider",
        "z": "37daec28.284ee4",
        "name": "Helligkeit Leuchter Fernsehzimmer",
        "label": "Helligkeit",
        "tooltip": "",
        "group": "b4675dbc.146e1",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "4",
        "max": "254",
        "step": "10",
        "className": "",
        "x": 600,
        "y": 1340,
        "wires": [
            [
                "b3e0dafa.e18c68"
            ]
        ]
    },
    {
        "id": "b3e0dafa.e18c68",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "brightness",
        "func": "msg.payload = {\"brightness\": msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 1340,
        "wires": [
            [
                "82751974.3c5238"
            ]
        ]
    },
    {
        "id": "d2d0266a.cd3ee8",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "msg.payload = {\"state\": msg.payload.state};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1300,
        "wires": [
            [
                "9aca83f0.327cd"
            ]
        ]
    },
    {
        "id": "11d236e2.b42379",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "brightness",
        "func": "msg.payload = msg.payload.brightness;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 1340,
        "wires": [
            [
                "546088f6.3a4488"
            ]
        ]
    },
    {
        "id": "83a9e308596bab08",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "reset",
        "mode": "link",
        "links": [
            "c6ba0a745f4a0cac"
        ],
        "x": 495,
        "y": 120,
        "wires": []
    },
    {
        "id": "6b9f314660665039",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "initialize Scenes",
        "func": "flow.set(\"current_scene_idx\", 0)\nflow.set(\"max_scene_idx\", 5)\nflow.set(\"scenes\", [\n        {   scene_idx: 0,\n            scene_name: \"aus\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tiffany\",\n                    state: \"OFF\"\n                },\n                {   device_idx: 2,\n                    name: \"Fensterbank\",\n                    state: \"OFF\"\n                },\n                {   device_idx: 3,\n                    name: \"Klavierlampe\",\n                    state: \"OFF\"\n                },\n                {   device_idx: 4,\n                    name: \"Leuchter\",\n                    state: \"OFF\"\n                },\n                {\n                    device_idx: 5,\n                    name: \"Tizo\",\n                    state: \"OFF\"\n                },\n                {\n                    device_idx: 6,\n                    name: \"Tizo Standsäule\",\n                    state: \"OFF\"\n                },\n                {\n                    device_idx: 7,\n                    name: \"Tolomeo \",\n                    state: \"OFF\"\n                }\n            ]\n        },\n        {   scene_idx: 1,\n            scene_name: \"ambiente\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tiffany\",\n                    brightness: 70,\n                    state: \"ON\"\n                },\n                {   device_idx: 2,\n                    name: \"Fensterbank\",\n                    brightness: 70,\n                    state: \"ON\"\n                },\n                {   device_idx: 3,\n                    name: \"Klavierlampe\",\n                    state: \"ON\"\n                },\n                {   device_idx: 4,\n                    name: \"Leuchter\",\n                    state: \"OFF\"\n                },\n                {   device_idx: 5,\n                    name: \"Tizio\",\n                    state: \"OFF\"\n                },\n                {\n                    device_idx: 6,\n                    name: \"Tizo Standsäule\",\n                    state: \"OFF\"\n                },\n                {\n                    device_idx: 7,\n                    name: \"Tolomeo \",\n                    brightness: 30,\n                    state: \"ON\"\n                }\n            ]\n        },\n        {   scene_idx: 2,\n            scene_name: \"cosy\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tiffany\",\n                    brightness: 150,\n                    state: \"ON\"\n                },\n                {   device_idx: 2,\n                    name: \"Fensterbank\",\n                    brightness: 150,\n                    state: \"ON\"\n                },\n                {   device_idx: 3,\n                    name: \"Klavierlampe\",\n                    state: \"ON\"\n                },\n                {   device_idx: 4,\n                    name: \"Leuchter\",\n                    state: \"OFF\"\n                },\n                {   device_idx: 5,\n                    name: \"Tizio\",\n                    state: \"ON\"\n                },\n                {\n                    device_idx: 6,\n                    name: \"Tizo Standsäule\",\n                    state: \"ON\"\n                },\n                {\n                    device_idx: 7,\n                    name: \"Tolomeo \",\n                    brightness: 255,\n                    state: \"ON\"\n                }\n            ]\n        },\n        {   scene_idx: 3,\n            scene_name: \"sofa_read\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tiffany\",\n                    brightness: 100,\n                    state: \"ON\"\n                },\n                {   device_idx: 2,\n                    name: \"Fensterbank\",\n                    brightness: 255,\n                    state: \"ON\"\n                },\n                {   device_idx: 3,\n                    name: \"Klavierlampe\",\n                    state: \"ON\"\n                },\n                {   device_idx: 4,\n                    name: \"Leuchter\",\n                    state: \"OFF\"\n                },\n                {\n                    device_idx: 5,\n                    name: \"Tizio\",\n                    state: \"ON\"\n                },\n                {\n                    device_idx: 6,\n                    name: \"Tizo Standsäule\",\n                    state: \"ON\"\n                },\n                {\n                    device_idx: 7,\n                    name: \"Tolomeo \",\n                    brightness: 100,\n                    state: \"ON\"\n                }\n            ]\n        },\n      {   scene_idx: 4,\n            scene_name: \"bright\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tiffany\",\n                    brightness: 255,\n                    state: \"ON\"\n                },\n                {   device_idx: 2,\n                    name: \"Fensterbank\",\n                    brightness: 255,\n                    state: \"ON\"\n                },\n                {   device_idx: 3,\n                    name: \"Klavierlampe\",\n                    state: \"ON\"\n                },\n                {   device_idx: 4,\n                    name: \"Leuchter\",\n                    brightness: 255,\n                    state: \"ON\"\n                },\n                {\n                    device_idx: 5,\n                    name: \"Tizio\",\n                    state: \"ON\"\n                },\n                {\n                    device_idx: 6,\n                    name: \"Tizo Standsäule\",\n                    state: \"ON\"\n                },\n                {\n                    device_idx: 7,\n                    name: \"Tolomeo \",\n                    brightness: 255,\n                    state: \"ON\"\n                }\n            ]\n        }\n    ]\n)\n\nreturn {payload: 0};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "dde36893.70da28",
        "type": "ui_button",
        "z": "37daec28.284ee4",
        "name": "",
        "group": "3f0994e3.62d76c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Gemütlich",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "x": 150,
        "y": 540,
        "wires": [
            [
                "7e2ee98fa66a02ae"
            ]
        ]
    },
    {
        "id": "af71545a.27def8",
        "type": "ui_button",
        "z": "37daec28.284ee4",
        "name": "",
        "group": "3f0994e3.62d76c",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Sofa Lesen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "",
        "x": 150,
        "y": 580,
        "wires": [
            [
                "7e2ee98fa66a02ae"
            ]
        ]
    },
    {
        "id": "2653a92.9545856",
        "type": "ui_button",
        "z": "37daec28.284ee4",
        "name": "",
        "group": "3f0994e3.62d76c",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Hell",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 620,
        "wires": [
            [
                "7e2ee98fa66a02ae"
            ]
        ]
    },
    {
        "id": "e686622f.fbb93",
        "type": "ui_button",
        "z": "37daec28.284ee4",
        "name": "",
        "group": "3f0994e3.62d76c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Aus",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 460,
        "wires": [
            [
                "7e2ee98fa66a02ae"
            ]
        ]
    },
    {
        "id": "5455332d.7b9c3c",
        "type": "ui_button",
        "z": "37daec28.284ee4",
        "name": "",
        "group": "3f0994e3.62d76c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Ambiente",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "7e2ee98fa66a02ae"
            ]
        ]
    },
    {
        "id": "7e2ee98fa66a02ae",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "c6ba0a745f4a0cac"
        ],
        "x": 345,
        "y": 540,
        "wires": []
    },
    {
        "id": "c6ba0a745f4a0cac",
        "type": "link in",
        "z": "37daec28.284ee4",
        "name": "Set Szene",
        "links": [
            "060501f15b873814",
            "7e2ee98fa66a02ae",
            "83a9e308596bab08"
        ],
        "x": 95,
        "y": 280,
        "wires": [
            [
                "ed1e9ea1.c5e59"
            ]
        ]
    },
    {
        "id": "b409621c39553422",
        "type": "mqtt out",
        "z": "37daec28.284ee4",
        "name": "Tizio",
        "topic": "shellies/shellyplusplugs-d4d4dae86590/command/switch:0",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1050,
        "y": 1520,
        "wires": []
    },
    {
        "id": "fd79b6c0400b69fd",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Tizio",
        "topic": "shellies/shellyplusplugs-d4d4dae86590/status/switch:0",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 1520,
        "wires": [
            [
                "f9cf2cdb8da8199b",
                "76caa03df8a96161",
                "5b39c5f2114ceeec"
            ]
        ]
    },
    {
        "id": "76caa03df8a96161",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "save Tizio state",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload.output ? 'on' : 'off'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tizio",
                "pt": "flow",
                "to": "{'state': state, 'brightness': brightness}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "f9cf2cdb8da8199b",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "return { payload: { state: msg.payload.output ? 'ON' : 'OFF'}}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1480,
        "wires": [
            [
                "40611467056ca26d"
            ]
        ]
    },
    {
        "id": "1631c8b0516d3d18",
        "type": "link in",
        "z": "37daec28.284ee4",
        "name": "Set Tizio",
        "links": [
            "2433f38433bac4e5",
            "89b93c352f549ac7"
        ],
        "x": 925,
        "y": 1560,
        "wires": [
            [
                "b409621c39553422"
            ]
        ]
    },
    {
        "id": "89b93c352f549ac7",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Scene",
        "mode": "link",
        "links": [
            "1631c8b0516d3d18"
        ],
        "x": 745,
        "y": 440,
        "wires": []
    },
    {
        "id": "418f4f02f0ac1e08",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Tiffany state & brigthness",
        "mode": "link",
        "links": [
            "af2e9abc6d919f6e"
        ],
        "x": 295,
        "y": 800,
        "wires": []
    },
    {
        "id": "922ccac0c7046219",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Fensterbanklampe state & brigthness",
        "mode": "link",
        "links": [
            "4b040669774e6723"
        ],
        "x": 295,
        "y": 1020,
        "wires": []
    },
    {
        "id": "cff872e789db0734",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Klavierlampe state",
        "mode": "link",
        "links": [
            "4ef1fd39ce73b242"
        ],
        "x": 295,
        "y": 1220,
        "wires": []
    },
    {
        "id": "49386ad2cbcb1f8f",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Leuchter state & brigthness",
        "mode": "link",
        "links": [
            "f29b05b9a7da2ce4"
        ],
        "x": 295,
        "y": 1420,
        "wires": []
    },
    {
        "id": "5b39c5f2114ceeec",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Tizio state",
        "mode": "link",
        "links": [
            "086cba5cef2c1358"
        ],
        "x": 295,
        "y": 1600,
        "wires": []
    },
    {
        "id": "7411287e.b145a8",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "save leuchter state",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload.state = 'ON' ? 'on' : 'off'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brightness",
                "pt": "msg",
                "to": "payload.brightness",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "leuchter",
                "pt": "flow",
                "to": "{'state': state, 'brightness': brightness}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "95c93cd58a79cf5a",
        "type": "ui_switch",
        "z": "37daec28.284ee4",
        "name": "An/Aus Tizio Fernsehzimmer",
        "label": "An/Aus",
        "tooltip": "",
        "group": "4cb7d08eef74e7ad",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 680,
        "y": 1480,
        "wires": [
            [
                "46359d8be7c210a5"
            ]
        ]
    },
    {
        "id": "46359d8be7c210a5",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "return {payload: msg.payload.state == 'ON' ? 'on' : 'off'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 1480,
        "wires": [
            [
                "b409621c39553422"
            ]
        ]
    },
    {
        "id": "8bdbacff7bbffaf0",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "return {payload: msg.payload.state == 'ON' ? 'on' : 'off'};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            [
                "89b93c352f549ac7"
            ]
        ]
    },
    {
        "id": "40611467056ca26d",
        "type": "rbe",
        "z": "37daec28.284ee4",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 470,
        "y": 1480,
        "wires": [
            [
                "95c93cd58a79cf5a"
            ]
        ]
    },
    {
        "id": "3b05e280795bfeac",
        "type": "comment",
        "z": "37daec28.284ee4",
        "name": "filter wg. ShellyPlug...",
        "info": "ShellyPlug sendet Stromverbrauchsdaten. \nDehalb werden viele Nachrichten wiederholt. ",
        "x": 480,
        "y": 1440,
        "wires": []
    },
    {
        "id": "10b5f2f821fb2314",
        "type": "link in",
        "z": "37daec28.284ee4",
        "name": "Tolomeo",
        "links": [
            "b8226efddc3dde41",
            "cf216420654a94ca",
            "8800b9b077e92b5d",
            "01574e0230e0ec9c"
        ],
        "x": 925,
        "y": 1960,
        "wires": [
            [
                "c5c764bba2c5634b"
            ]
        ]
    },
    {
        "id": "c5c764bba2c5634b",
        "type": "mqtt out",
        "z": "37daec28.284ee4",
        "name": "Tolomeo",
        "topic": "zigbee2mqtt/tolomeo/set",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1060,
        "y": 1920,
        "wires": []
    },
    {
        "id": "c069046ed40e0a45",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Tolomeo",
        "topic": "zigbee2mqtt/tolomeo",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 1920,
        "wires": [
            [
                "a4d8693e5e4113ae",
                "60e1c79f97947074",
                "8bbdb296a860acab",
                "fe9452d8b91bd237"
            ]
        ]
    },
    {
        "id": "60e1c79f97947074",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "save tolomeo state",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload.state = 'ON' ? 'on' : 'off'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brightness",
                "pt": "msg",
                "to": "payload.brightness",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tolomeo",
                "pt": "flow",
                "to": "{'state': state, 'brightness': brightness}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 370,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "fe25f29f83b8709d",
        "type": "ui_switch",
        "z": "37daec28.284ee4",
        "name": "An/Aus Tolomeo Basculante Lettura",
        "label": "An/Aus",
        "tooltip": "",
        "group": "ec1c4f819cdc25fd",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 610,
        "y": 1880,
        "wires": [
            [
                "7925a6a710f06185"
            ]
        ]
    },
    {
        "id": "e95452d2b5178b70",
        "type": "ui_slider",
        "z": "37daec28.284ee4",
        "name": "Helligkeit Tolomeo Basculante Lettura",
        "label": "Helligkeit",
        "tooltip": "",
        "group": "ec1c4f819cdc25fd",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "4",
        "max": "254",
        "step": "10",
        "className": "",
        "x": 610,
        "y": 1920,
        "wires": [
            [
                "5582ebe881e2bbef"
            ]
        ]
    },
    {
        "id": "5582ebe881e2bbef",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "brightness",
        "func": "msg.payload = {\"brightness\": msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1920,
        "wires": [
            [
                "c5c764bba2c5634b"
            ]
        ]
    },
    {
        "id": "a4d8693e5e4113ae",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "msg.payload = {\"state\": msg.payload.state};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 1880,
        "wires": [
            [
                "fe25f29f83b8709d"
            ]
        ]
    },
    {
        "id": "fe9452d8b91bd237",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "brightness",
        "func": "msg.payload = msg.payload.brightness;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1920,
        "wires": [
            [
                "e95452d2b5178b70"
            ]
        ]
    },
    {
        "id": "8bbdb296a860acab",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Tolomeo",
        "mode": "link",
        "links": [
            "5f2e9f30beed284b"
        ],
        "x": 295,
        "y": 2040,
        "wires": []
    },
    {
        "id": "9aa43a713a9b1028",
        "type": "mqtt out",
        "z": "37daec28.284ee4",
        "name": "Tizio Standsäule",
        "topic": "shellies/shellyplug-s-2219EE/relay/0/command",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1080,
        "y": 1720,
        "wires": []
    },
    {
        "id": "94da1c782be8aa8d",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Tizio Standsäule",
        "topic": "shellies/shellyplug-s-2219EE/relay/0",
        "qos": "2",
        "datatype": "utf8",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 120,
        "y": 1720,
        "wires": [
            [
                "6315b05410333da7",
                "88a124d82c1bfa92",
                "3faa223976b105a1"
            ]
        ]
    },
    {
        "id": "6315b05410333da7",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "save Tizio Standsäule state",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload.output ? 'on' : 'off'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "tizio-standsäule",
                "pt": "flow",
                "to": "{'state': state, 'brightness': brightness}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "6f44eabb6a272d2b",
        "type": "link in",
        "z": "37daec28.284ee4",
        "name": "Set Tizio Standsäule",
        "links": [
            "2433f38433bac4e5",
            "0ef6939b6651ce92",
            "df9db0f63359f13a"
        ],
        "x": 925,
        "y": 1760,
        "wires": [
            [
                "9aa43a713a9b1028"
            ]
        ]
    },
    {
        "id": "88a124d82c1bfa92",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Tizio Standsäule state",
        "mode": "link",
        "links": [
            "086cba5cef2c1358",
            "d9e6f3ca8e9fc365"
        ],
        "x": 295,
        "y": 1800,
        "wires": []
    },
    {
        "id": "18e24a3aa31ea2fc",
        "type": "ui_switch",
        "z": "37daec28.284ee4",
        "name": "An/Aus Tizio Standsäule",
        "label": "An/Aus",
        "tooltip": "",
        "group": "7fd2dc4a9ee46617",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 570,
        "y": 1680,
        "wires": [
            [
                "8f66933c6d3d372d"
            ]
        ]
    },
    {
        "id": "5e9c71249a120fe4",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "state",
        "func": "return {payload: msg.payload.state == 'ON' ? 'on' : 'off'};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 480,
        "wires": [
            [
                "df9db0f63359f13a"
            ]
        ]
    },
    {
        "id": "df9db0f63359f13a",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Scene",
        "mode": "link",
        "links": [
            "6f44eabb6a272d2b",
            "805d0f02d8ec8802"
        ],
        "x": 745,
        "y": 480,
        "wires": []
    },
    {
        "id": "b8226efddc3dde41",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "Scene",
        "mode": "link",
        "links": [
            "10b5f2f821fb2314",
            "4e9bb1836b5f6237"
        ],
        "x": 745,
        "y": 520,
        "wires": []
    },
    {
        "id": "ab6e02e66da9c8c2",
        "type": "mqtt in",
        "z": "37daec28.284ee4",
        "name": "Fernbedienung Tolomeo",
        "topic": "zigbee2mqtt/fernbedienung_tolomeo",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 2140,
        "wires": [
            [
                "cc0539ec5711d686"
            ]
        ]
    },
    {
        "id": "cc0539ec5711d686",
        "type": "switch",
        "z": "37daec28.284ee4",
        "name": "action",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_move_up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_stop",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_move_down",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 350,
        "y": 2140,
        "wires": [
            [
                "4b3f633a5c0cb54d"
            ],
            [
                "35de5f16f05ae406"
            ],
            [
                "e1b4c77d39876505"
            ],
            [
                "488b88feb2f60930"
            ],
            [
                "a58a4e2a44445a81"
            ]
        ]
    },
    {
        "id": "488b88feb2f60930",
        "type": "template",
        "z": "37daec28.284ee4",
        "name": "STOP",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "STOP",
        "output": "str",
        "x": 550,
        "y": 2180,
        "wires": [
            [
                "e1b4c77d39876505",
                "a58a4e2a44445a81"
            ]
        ]
    },
    {
        "id": "e1b4c77d39876505",
        "type": "looptimer",
        "z": "37daec28.284ee4",
        "duration": "0.25",
        "units": "Second",
        "maxloops": "20",
        "maxtimeout": "10",
        "maxtimeoutunits": "Second",
        "name": "Dim",
        "x": 550,
        "y": 2140,
        "wires": [
            [
                "07c2920e7083e495"
            ],
            []
        ]
    },
    {
        "id": "07c2920e7083e495",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "increment tolomeo brightness",
        "func": "var leuchter = flow.get(\"tolomeo\")\n\nleuchter[\"brightness\"] += 10;\nif (leuchter[\"brightness\"] > 254) {\n    leuchter[\"brightness\"] = 254;\n}\n\nflow.set(\"tolomeo\", leuchter);\n\nmsg.payload = {\"brightness\": leuchter[\"brightness\"]};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2140,
        "wires": [
            [
                "01574e0230e0ec9c"
            ]
        ]
    },
    {
        "id": "2eea301eef904728",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "decrement tolomeo brightness",
        "func": "var leuchter = flow.get(\"tolomeo\")\n\nleuchter[\"brightness\"] -= 10;\nif (leuchter[\"brightness\"] < 4) {\n    leuchter[\"brightness\"] = 4;\n}\nflow.set(\"tolomeo\", leuchter);\n\nmsg.payload = {\"brightness\": leuchter[\"brightness\"]};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2220,
        "wires": [
            [
                "01574e0230e0ec9c"
            ]
        ]
    },
    {
        "id": "a58a4e2a44445a81",
        "type": "looptimer",
        "z": "37daec28.284ee4",
        "duration": "0.25",
        "units": "Second",
        "maxloops": "20",
        "maxtimeout": "10",
        "maxtimeoutunits": "Second",
        "name": "Dim",
        "x": 550,
        "y": 2220,
        "wires": [
            [
                "2eea301eef904728"
            ],
            []
        ]
    },
    {
        "id": "4b3f633a5c0cb54d",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"state\": \"ON\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2060,
        "wires": [
            [
                "8800b9b077e92b5d"
            ]
        ]
    },
    {
        "id": "8800b9b077e92b5d",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "link out 15",
        "mode": "link",
        "links": [
            "10b5f2f821fb2314",
            "4e9bb1836b5f6237"
        ],
        "x": 715,
        "y": 2080,
        "wires": []
    },
    {
        "id": "01574e0230e0ec9c",
        "type": "link out",
        "z": "37daec28.284ee4",
        "name": "link out 16",
        "mode": "link",
        "links": [
            "10b5f2f821fb2314",
            "4e9bb1836b5f6237"
        ],
        "x": 965,
        "y": 2180,
        "wires": []
    },
    {
        "id": "35de5f16f05ae406",
        "type": "change",
        "z": "37daec28.284ee4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{ \"state\": \"OFF\"}",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 2100,
        "wires": [
            [
                "8800b9b077e92b5d"
            ]
        ]
    },
    {
        "id": "292571624198d1e5",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "function 42",
        "func": "delete msg.payload.device_idx;\ndelete msg.payload.name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 280,
        "wires": [
            [
                "3a3f3f29.1be49"
            ]
        ]
    },
    {
        "id": "f83c6c95491b4f1e",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "function 43",
        "func": "delete msg.payload.device_idx;\ndelete msg.payload.name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 320,
        "wires": [
            [
                "bd4f1b1d.c1d598"
            ]
        ]
    },
    {
        "id": "22c55f0a1a6d03e2",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "function 44",
        "func": "delete msg.payload.device_idx;\ndelete msg.payload.name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 360,
        "wires": [
            [
                "773f6fe1.26d11"
            ]
        ]
    },
    {
        "id": "ae5368759a4d9b49",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "function 45",
        "func": "delete msg.payload.device_idx;\ndelete msg.payload.name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 400,
        "wires": [
            [
                "d0971035.fd6cc"
            ]
        ]
    },
    {
        "id": "77255d6964b0c838",
        "type": "function",
        "z": "37daec28.284ee4",
        "name": "function 46",
        "func": "delete msg.payload.device_idx;\ndelete msg.payload.name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 520,
        "wires": [
            [
                "b8226efddc3dde41"
            ]
        ]
    },
    {
        "id": "13b7ccd6.d98e83",
        "type": "mqtt out",
        "z": "2ba29887.9266e8",
        "name": "Esszimmertisch",
        "topic": "zigbee2mqtt/esszimmertisch/set",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1260,
        "y": 860,
        "wires": []
    },
    {
        "id": "de92566e.0d9718",
        "type": "mqtt in",
        "z": "2ba29887.9266e8",
        "name": "Esszimmertisch",
        "topic": "zigbee2mqtt/esszimmertisch",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 860,
        "wires": [
            [
                "811e8564.045d88",
                "6d9790ef.bf03b",
                "af26ea70.e86bc8",
                "4c63a8ea7a44d9d8"
            ]
        ]
    },
    {
        "id": "6d9790ef.bf03b",
        "type": "change",
        "z": "2ba29887.9266e8",
        "name": "save Esszimmertisch state",
        "rules": [
            {
                "t": "set",
                "p": "state",
                "pt": "msg",
                "to": "payload.state = 'ON' ? 'on' : 'off'",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "brightness",
                "pt": "msg",
                "to": "payload.brightness",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "esszimmertisch",
                "pt": "flow",
                "to": "{'state': state, 'brightness': brightness}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "4db81f06.f5ed8",
        "type": "mqtt out",
        "z": "2ba29887.9266e8",
        "name": "Esszimmer Eckschrank",
        "topic": "zigbee2mqtt/esszimmer_eckschrank/set",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 830,
        "y": 1020,
        "wires": []
    },
    {
        "id": "ddf229af.5ef508",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "state",
        "func": "msg.payload = {\"state\": msg.payload.state};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "cc2ba7a4.276d78"
            ]
        ]
    },
    {
        "id": "cc2ba7a4.276d78",
        "type": "ui_switch",
        "z": "2ba29887.9266e8",
        "name": "An/Aus Esszimmer Eckschrank",
        "label": "An/Aus",
        "tooltip": "",
        "group": "643154e.6b44bac",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 550,
        "y": 1000,
        "wires": [
            [
                "4db81f06.f5ed8"
            ]
        ]
    },
    {
        "id": "af26ea70.e86bc8",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "state",
        "func": "msg.payload = { state: msg.payload.state };\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 820,
        "wires": [
            [
                "0fb8f06ac48fa6ee"
            ]
        ]
    },
    {
        "id": "efbb8637.d28188",
        "type": "ui_switch",
        "z": "2ba29887.9266e8",
        "name": "An/Aus Esszimmer Tisch",
        "label": "An/Aus",
        "tooltip": "",
        "group": "12ecf9a1.9cb126",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 690,
        "y": 820,
        "wires": [
            [
                "5212abebc2a62f0b",
                "032018a08a1fdd54"
            ]
        ]
    },
    {
        "id": "811e8564.045d88",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "brightness",
        "func": "msg.payload = msg.payload.brightness;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 860,
        "wires": [
            [
                "b95edb0e.4e93d8"
            ]
        ]
    },
    {
        "id": "b95edb0e.4e93d8",
        "type": "ui_slider",
        "z": "2ba29887.9266e8",
        "name": "Helligkeit Esszimmer Tisch Fernsehzimmer",
        "label": "Helligkeit",
        "tooltip": "",
        "group": "12ecf9a1.9cb126",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "10",
        "max": "100",
        "step": "5",
        "className": "",
        "x": 750,
        "y": 860,
        "wires": [
            [
                "6f2d06af.6b5c88"
            ]
        ]
    },
    {
        "id": "6f2d06af.6b5c88",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "brightness",
        "func": "msg.payload = {\"brightness\": msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 860,
        "wires": [
            [
                "13b7ccd6.d98e83"
            ]
        ]
    },
    {
        "id": "4c63a8ea7a44d9d8",
        "type": "link out",
        "z": "2ba29887.9266e8",
        "name": "Esszimmertisch state & brightnes",
        "mode": "link",
        "links": [
            "4fe8938b4e6886d5"
        ],
        "x": 295,
        "y": 940,
        "wires": []
    },
    {
        "id": "28a49ad78b750429",
        "type": "link out",
        "z": "2ba29887.9266e8",
        "name": "Eckschrank state",
        "mode": "link",
        "links": [
            "18bac2eda68eaa32"
        ],
        "x": 295,
        "y": 1040,
        "wires": []
    },
    {
        "id": "b3906410005a4234",
        "type": "link in",
        "z": "2ba29887.9266e8",
        "name": "Eckschrank MQTT",
        "links": [
            "25f3da8fc4efe2e9",
            "3e2f1b8ef0d2c98f"
        ],
        "x": 665,
        "y": 1040,
        "wires": [
            [
                "4db81f06.f5ed8"
            ]
        ]
    },
    {
        "id": "e2cb5e97.bb6e8",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "increment esszimmertisch brightness",
        "func": "var leuchter = flow.get(\"esszimmertisch\")\n\nleuchter[\"brightness\"] += 5;\nif (leuchter[\"brightness\"] > 100) {\n    leuchter[\"brightness\"] = 100;\n}\n\nflow.set(\"esszimmertisch\", leuchter);\n\nmsg.payload = {\"brightness\": leuchter[\"brightness\"]};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 560,
        "wires": [
            [
                "28f7f8af321dac41"
            ]
        ]
    },
    {
        "id": "f0e908ff.7a1918",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "decrement esszimmertisch brightness",
        "func": "var leuchter = flow.get(\"esszimmertisch\")\n\nleuchter[\"brightness\"] -= 5;\nif (leuchter[\"brightness\"] < 10) {\n    leuchter[\"brightness\"] = 20;\n}\nflow.set(\"esszimmertisch\", leuchter);\n\nmsg.payload = {\"brightness\": leuchter[\"brightness\"]};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 640,
        "wires": [
            [
                "28f7f8af321dac41"
            ]
        ]
    },
    {
        "id": "53bad8f.3633628",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "initialize scenes",
        "func": "flow.set(\"current_scene_idx\", 0)\nflow.set(\"max_scene_idx\", 4)\nflow.set(\"scenes\", [\n        {   scene_idx: 0,\n            scene_name: \"aus\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tisch\",\n                    state: \"OFF\"\n                },\n                {   device_idx: 2,\n                    name: \"Eckschrank\",\n                    state: \"OFF\"\n                }\n            ]\n        },\n        {   scene_idx: 1,\n            scene_name: \"Ambiente\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tisch\",\n                    brightness: 20,\n                    state: \"ON\"\n                },\n                {   device_idx: 2,\n                    name: \"Eckschrank\",\n                    state: \"ON\"\n                }\n            ]\n        },\n        {   scene_idx: 2,\n            scene_name: \"Gemütlich\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tisch\",\n                    brightness: 50,\n                    state: \"ON\"\n                },\n                {   device_idx: 2,\n                    name: \"Eckschrank\",\n                    state: \"ON\"\n                }\n            ]\n        },\n        {   scene_idx: 3,\n            scene_name: \"Normal\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tisch\",\n                    brightness: 80,\n                    state: \"ON\"\n                },\n                {   device_idx: 2,\n                    name: \"Eckschrank\",\n                    state: \"ON\"\n                }\n            ]\n        },\n        {   scene_idx: 4,\n            scene_name: \"Hell\",\n            devices: [\n                {   device_idx: 1,\n                    name: \"Tisch\",\n                    brightness: 100,\n                    state: \"ON\"\n                },\n                {   device_idx: 2,\n                    name: \"Eckschrank\",\n                    state: \"ON\"\n                }\n            ]\n    },\n    {\n        scene_idx: 5,\n        scene_name: \"Toggle\",\n        devices: [\n            {\n                device_idx: 1,\n                name: \"Tisch\",\n                brightness: 100,\n                state: \"ON\"\n            },\n            {\n                device_idx: 2,\n                name: \"Eckschrank\",\n                state: \"ON\"\n            }\n        ]\n    }\n\n    ]\n)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "8e92a889.216c18",
        "type": "switch",
        "z": "2ba29887.9266e8",
        "name": "",
        "property": "payload.device_idx",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 910,
        "y": 440,
        "wires": [
            [],
            [
                "563aec1d50f42bf5"
            ],
            [
                "8899fbf216ae99fb"
            ]
        ]
    },
    {
        "id": "734500d1.9d61f",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "save scene idx",
        "func": "msg.payload = Number(msg.payload)\nflow.set(\"current_scene_idx\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 320,
        "wires": [
            [
                "19f37cfd.d46353"
            ]
        ]
    },
    {
        "id": "19f37cfd.d46353",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "current scene",
        "func": "var scenes = flow.get(\"scenes\");\nvar current_scene_idx = flow.get(\"current_scene_idx\");\nvar scene = scenes[current_scene_idx];\nmsg.payload = scene.devices;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 360,
        "wires": [
            [
                "f47853f2.a021d"
            ]
        ]
    },
    {
        "id": "f47853f2.a021d",
        "type": "split",
        "z": "2ba29887.9266e8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 910,
        "y": 400,
        "wires": [
            [
                "8e92a889.216c18"
            ]
        ]
    },
    {
        "id": "731caccd.2f8924",
        "type": "inject",
        "z": "2ba29887.9266e8",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "53bad8f.3633628"
            ]
        ]
    },
    {
        "id": "2202e11f.f782ee",
        "type": "ui_button",
        "z": "2ba29887.9266e8",
        "name": "",
        "group": "aca2d944.6c15c8",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Hell",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "4",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 110,
        "y": 400,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "f5b99d67.4869b",
        "type": "ui_button",
        "z": "2ba29887.9266e8",
        "name": "",
        "group": "aca2d944.6c15c8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Gemütlich",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "2",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 130,
        "y": 320,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "747c9148.1a912",
        "type": "ui_button",
        "z": "2ba29887.9266e8",
        "name": "",
        "group": "aca2d944.6c15c8",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Ambiente",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "1",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "a0a37e43.2bc1b",
        "type": "ui_button",
        "z": "2ba29887.9266e8",
        "name": "",
        "group": "aca2d944.6c15c8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Aus",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "0",
        "payloadType": "num",
        "topic": "",
        "x": 110,
        "y": 240,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "664aeec7.e753d",
        "type": "switch",
        "z": "2ba29887.9266e8",
        "name": "action",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "toggle",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "arrow_right_click",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "arrow_left_click",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_up_click",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_up_hold",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_down_click",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_down_hold",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_up_release",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_down_release",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "arrow_right_hold",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "arrow_left_hold",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 11,
        "x": 250,
        "y": 580,
        "wires": [
            [
                "9e9ad2ab8e210ec0"
            ],
            [
                "49199ea5.7436c"
            ],
            [
                "f4dedcc1.6edff"
            ],
            [
                "e2cb5e97.bb6e8"
            ],
            [
                "f832ecc933544019"
            ],
            [
                "f0e908ff.7a1918"
            ],
            [
                "f54c6757aecd865b"
            ],
            [
                "e3c094e257957c0c"
            ],
            [
                "e3c094e257957c0c"
            ],
            [],
            []
        ]
    },
    {
        "id": "af3c9414.281838",
        "type": "mqtt in",
        "z": "2ba29887.9266e8",
        "name": "Fernbedienung WoZi",
        "topic": "zigbee2mqtt/fernbedienung_esszimmer",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 150,
        "y": 460,
        "wires": [
            [
                "664aeec7.e753d"
            ]
        ]
    },
    {
        "id": "49199ea5.7436c",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "next scene",
        "func": "var current_scene_idx = flow.get(\"current_scene_idx\");\nvar max_scene_idx = flow.get(\"max_scene_idx\");\n\ncurrent_scene_idx++\nif (current_scene_idx > max_scene_idx) {\n    current_scene_idx = max_scene_idx;\n}\n\nmsg.payload = current_scene_idx;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 480,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "f4dedcc1.6edff",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "previous scene",
        "func": "var current_scene_idx = flow.get(\"current_scene_idx\");\nvar max_scene_idx = flow.get(\"max_scene_idx\");\n\ncurrent_scene_idx--\nif (current_scene_idx < 0 ) {\n    current_scene_idx = 0;\n}\n\nflow.set(\"current_scene_idx\", current_scene_idx);\n\nmsg.payload = current_scene_idx;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 520,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "f832ecc933544019",
        "type": "looptimer",
        "z": "2ba29887.9266e8",
        "duration": "0.25",
        "units": "Second",
        "maxloops": "20",
        "maxtimeout": "10",
        "maxtimeoutunits": "Second",
        "name": "Dim",
        "x": 590,
        "y": 600,
        "wires": [
            [
                "e2cb5e97.bb6e8"
            ],
            []
        ]
    },
    {
        "id": "f54c6757aecd865b",
        "type": "looptimer",
        "z": "2ba29887.9266e8",
        "duration": "0.25",
        "units": "Second",
        "maxloops": "20",
        "maxtimeout": "10",
        "maxtimeoutunits": "Second",
        "name": "Dim",
        "x": 590,
        "y": 680,
        "wires": [
            [
                "f0e908ff.7a1918"
            ],
            []
        ]
    },
    {
        "id": "e3c094e257957c0c",
        "type": "template",
        "z": "2ba29887.9266e8",
        "name": "STOP",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "STOP",
        "output": "str",
        "x": 390,
        "y": 640,
        "wires": [
            [
                "f832ecc933544019",
                "f54c6757aecd865b"
            ]
        ]
    },
    {
        "id": "9e9ad2ab8e210ec0",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "toggle szene",
        "func": "const new_scene_idx = 5;\nvar current_scene_idx = flow.get(\"current_scene_idx\");\n\nif (current_scene_idx == 0) {\n    current_scene_idx = new_scene_idx\n} else {\n    current_scene_idx = 0\n}\n\nmsg.payload = current_scene_idx;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 440,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "c1d8b22f783add57",
        "type": "ui_button",
        "z": "2ba29887.9266e8",
        "name": "",
        "group": "aca2d944.6c15c8",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Normal",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "3",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "444ce93bb8dcb6d7",
        "type": "link in",
        "z": "2ba29887.9266e8",
        "name": "Set Szene",
        "links": [
            "a2783a2ee8d68470",
            "fbde70a871289cb4"
        ],
        "x": 715,
        "y": 260,
        "wires": [
            [
                "734500d1.9d61f"
            ]
        ]
    },
    {
        "id": "3d9defb2050f98fb",
        "type": "link out",
        "z": "2ba29887.9266e8",
        "name": "Scene Esszimmertisch",
        "mode": "link",
        "links": [
            "8ec33d47b67fdc53",
            "b99854b9b9143014",
            "b82b7b7fd49c387a"
        ],
        "x": 1185,
        "y": 440,
        "wires": []
    },
    {
        "id": "3e2f1b8ef0d2c98f",
        "type": "link out",
        "z": "2ba29887.9266e8",
        "name": "Scene Eckschrank",
        "mode": "link",
        "links": [
            "b3906410005a4234"
        ],
        "x": 1185,
        "y": 480,
        "wires": []
    },
    {
        "id": "28f7f8af321dac41",
        "type": "link out",
        "z": "2ba29887.9266e8",
        "name": "Scene Esszimmertisch",
        "mode": "link",
        "links": [
            "8ec33d47b67fdc53",
            "b99854b9b9143014",
            "b82b7b7fd49c387a"
        ],
        "x": 905,
        "y": 600,
        "wires": []
    },
    {
        "id": "b99854b9b9143014",
        "type": "link in",
        "z": "2ba29887.9266e8",
        "name": "Esszimmertisch MQTT",
        "links": [
            "28f7f8af321dac41",
            "3d9defb2050f98fb",
            "9648fe4077632af9"
        ],
        "x": 1105,
        "y": 900,
        "wires": [
            [
                "13b7ccd6.d98e83"
            ]
        ]
    },
    {
        "id": "58e6b312940c0def",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "Change Scene",
        "func": "const scene = msg.payload.state == \"ON\" ? 3 : 0;\nreturn { payload: scene };",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 780,
        "wires": [
            [
                "fbde70a871289cb4"
            ]
        ]
    },
    {
        "id": "fbde70a871289cb4",
        "type": "link out",
        "z": "2ba29887.9266e8",
        "name": "link out 13",
        "mode": "link",
        "links": [
            "444ce93bb8dcb6d7"
        ],
        "x": 1195,
        "y": 780,
        "wires": []
    },
    {
        "id": "dad91b3f6079baf0",
        "type": "mqtt in",
        "z": "2ba29887.9266e8",
        "name": "Eckschrank",
        "topic": "zigbee2mqtt/esszimmer_eckschrank",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 1000,
        "wires": [
            [
                "ddf229af.5ef508",
                "28a49ad78b750429"
            ]
        ]
    },
    {
        "id": "0fb8f06ac48fa6ee",
        "type": "rbe",
        "z": "2ba29887.9266e8",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload.state",
        "topi": "topic",
        "x": 470,
        "y": 820,
        "wires": [
            [
                "4cf435ec8d6914ea",
                "efbb8637.d28188"
            ]
        ]
    },
    {
        "id": "563aec1d50f42bf5",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "function 40",
        "func": "delete msg.payload.device_idx;\ndelete msg.payload.name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 440,
        "wires": [
            [
                "3d9defb2050f98fb"
            ]
        ]
    },
    {
        "id": "8899fbf216ae99fb",
        "type": "function",
        "z": "2ba29887.9266e8",
        "name": "function 41",
        "func": "delete msg.payload.device_idx;\ndelete msg.payload.name;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 480,
        "wires": [
            [
                "3e2f1b8ef0d2c98f"
            ]
        ]
    },
    {
        "id": "4d438841568e87e5",
        "type": "change",
        "z": "2ba29887.9266e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b529a82a.481848",
        "type": "mqtt out",
        "z": "3a471104.edfbae",
        "name": "",
        "topic": "treppenhaus-gaeste-wc/switch/relay1/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1350,
        "y": 360,
        "wires": []
    },
    {
        "id": "e3b87d0f.108a9",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "",
        "topic": "treppenhaus-gaeste-wc/binary_sensor/button1/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 270,
        "y": 180,
        "wires": [
            [
                "dba6f56.3127408"
            ]
        ]
    },
    {
        "id": "c07473f0.eb252",
        "type": "ui_switch",
        "z": "3a471104.edfbae",
        "name": "Treppenhaus  (2 min)",
        "label": "Treppenhaus  (2 min)",
        "tooltip": "",
        "group": "64b01bd0.e1d1b4",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "treppenhaus",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 820,
        "y": 360,
        "wires": [
            [
                "553fc166.0b31c",
                "37836f89.8422b",
                "c9724047.56def"
            ]
        ]
    },
    {
        "id": "153c328e.15de1d",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "Bewegungsmelder Treppenhaus Keller",
        "topic": "zigbee2mqtt/bewegungsmelder_treppenhaus_keller",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 230,
        "y": 580,
        "wires": [
            [
                "38bf3abf.87fe76"
            ]
        ]
    },
    {
        "id": "c473a018.46907",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "map occupancy to ON",
        "func": "if (msg.payload[\"occupancy\"])\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 320,
        "wires": [
            [
                "36a19851.367748"
            ]
        ]
    },
    {
        "id": "dba6f56.3127408",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "toggle state",
        "func": "if (msg.payload != \"ON\") { \n    return undefined;\n}\n\nvar topic = \"treppenhaustaster\";\nvar current_state = flow.get(topic);\n\nif (current_state === \"OFF\")\n    return {payload: \"ON\"}\nelse\n    return {payload: \"OFF\"};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 180,
        "wires": [
            [
                "50e80d17.fa58d4",
                "c07473f0.eb252",
                "b70e105a77f51cd4"
            ]
        ]
    },
    {
        "id": "4907d5.d804982c",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "filter ON",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"ON\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 618,
        "wires": [
            [
                "1bf72870.060278"
            ]
        ]
    },
    {
        "id": "553fc166.0b31c",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "save state",
        "func": "flow.set(\"treppenhaustaster\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1050,
        "y": 360,
        "wires": [
            [
                "b529a82a.481848"
            ]
        ]
    },
    {
        "id": "1c86fb0b.6322c5",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "Bewegungsmelder Treppenhaus DG",
        "topic": "zigbee2mqtt/bewegungsmelder_treppenhaus_dg",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 300,
        "wires": [
            [
                "c473a018.46907"
            ]
        ]
    },
    {
        "id": "c8229850.b97058",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "Bewegungsmelder Treppenhaus EG",
        "topic": "zigbee2mqtt/bewegungsmelder_treppenhaus_eg",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 340,
        "wires": [
            [
                "c473a018.46907"
            ]
        ]
    },
    {
        "id": "cf66c5f7.71d4e8",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "Bewegungsmelder Treppenhaus OG",
        "topic": "zigbee2mqtt/bewegungsmelder_treppenhaus_og",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 380,
        "wires": [
            [
                "c473a018.46907"
            ]
        ]
    },
    {
        "id": "bb3b7629.ab9698",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "",
        "topic": "treppenhaus-eg/binary_sensor/taster/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 240,
        "y": 998,
        "wires": [
            [
                "b26ffbed.c2c898"
            ]
        ]
    },
    {
        "id": "b187a14.548406",
        "type": "mqtt out",
        "z": "3a471104.edfbae",
        "name": "",
        "topic": "treppenhaus-keller/switch/relay1/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1310,
        "y": 738,
        "wires": []
    },
    {
        "id": "3eb024a5.e9f9bc",
        "type": "ui_switch",
        "z": "3a471104.edfbae",
        "name": "Treppenhaus Keller (1 min)",
        "label": "Treppenhaus Keller (2 min)",
        "tooltip": "",
        "group": "64b01bd0.e1d1b4",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "treppenhaus_keller",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 740,
        "y": 678,
        "wires": [
            [
                "4907d5.d804982c",
                "95460152.3f519"
            ]
        ]
    },
    {
        "id": "38bf3abf.87fe76",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "map occupancy to ON",
        "func": "if (msg.payload[\"occupancy\"])\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 620,
        "wires": [
            [
                "d7f061.1e304fa",
                "e18902b0a943f1fe"
            ]
        ]
    },
    {
        "id": "1bf72870.060278",
        "type": "trigger",
        "z": "3a471104.edfbae",
        "name": "Treppenhausautomat 1 min",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1240,
        "y": 618,
        "wires": [
            [
                "3eb024a5.e9f9bc"
            ]
        ]
    },
    {
        "id": "33e8db68.d3a814",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "",
        "topic": "treppenhaus-keller/binary_sensor/button1/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 260,
        "y": 1038,
        "wires": [
            [
                "b26ffbed.c2c898"
            ]
        ]
    },
    {
        "id": "50e80d17.fa58d4",
        "type": "function",
        "z": "3a471104.edfbae",
        "d": true,
        "name": "filter OFF",
        "func": "if (msg.payload != \"ON\")\n    return {payload: \"OFF\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 180,
        "wires": [
            [
                "7c5fc140.d9c58"
            ]
        ]
    },
    {
        "id": "7c5fc140.d9c58",
        "type": "trigger",
        "z": "3a471104.edfbae",
        "d": true,
        "name": "Treppenhausautomat 2 min",
        "op1": "DISABLE",
        "op2": "ENABLE",
        "op1type": "str",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 980,
        "y": 180,
        "wires": [
            [
                "4a9f1a2e29bec69c"
            ]
        ]
    },
    {
        "id": "36a19851.367748",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "Latch1",
        "func": "const latch = flow.get('treppenhaus_latch1');\n\nif (latch != \"DISABLE\")\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 360,
        "wires": [
            [
                "8a7888b.8497878"
            ]
        ]
    },
    {
        "id": "829da71c.1e4898",
        "type": "function",
        "z": "3a471104.edfbae",
        "d": true,
        "name": "filter OFF",
        "func": "if (msg.payload != \"ON\")\n    return {payload: \"OFF\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 758,
        "wires": [
            [
                "24c102d9.3a5e4e"
            ]
        ]
    },
    {
        "id": "24c102d9.3a5e4e",
        "type": "trigger",
        "z": "3a471104.edfbae",
        "d": true,
        "name": "Treppenhausautomat 2 min",
        "op1": "DISABLE",
        "op2": "ENABLE",
        "op1type": "str",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 800,
        "y": 758,
        "wires": [
            [
                "25276f9407468fec"
            ]
        ]
    },
    {
        "id": "d7f061.1e304fa",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "Latch2",
        "func": "const latch = flow.get('treppenhaus_latch2');\n\nif (latch != \"DISABLE\")\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 620,
        "wires": [
            [
                "c53f0279.79555",
                "3eb024a5.e9f9bc"
            ]
        ]
    },
    {
        "id": "37836f89.8422b",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "filter ON",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"ON\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 400,
        "wires": [
            [
                "bb85ebf4.9e01a8"
            ]
        ]
    },
    {
        "id": "bb85ebf4.9e01a8",
        "type": "trigger",
        "z": "3a471104.edfbae",
        "name": "Treppenhausautomat 2min",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1280,
        "y": 400,
        "wires": [
            [
                "c07473f0.eb252"
            ]
        ]
    },
    {
        "id": "5147c0eb.b5ca3",
        "type": "change",
        "z": "3a471104.edfbae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 440,
        "wires": [
            [
                "bb85ebf4.9e01a8"
            ]
        ]
    },
    {
        "id": "c9724047.56def",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "filter OFF",
        "func": "if (msg.payload === \"OFF\")\n    return {payload: \"OFF\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 440,
        "wires": [
            [
                "5147c0eb.b5ca3"
            ]
        ]
    },
    {
        "id": "95460152.3f519",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "store in flow",
        "func": "const topic = \"treppenhaus_kellerlicht\";\nconst last_state = flow.get(topic);\n\nif (last_state === \"ON\")\n    if (msg.payload === \"ON\") {\n        flow.set(topic + \"-exor\", true);\n        flow.set(topic, msg.payload);\n        return [{payload: \"ON\"}, undefined, {payload: \"OFF\"}]\n    } else {\n        if (flow.get(topic + \"-exor\")) {\n            flow.set(topic + \"-exor\", false);\n            return;\n        }\n        flow.set(topic, msg.payload);\n        return [{payload: \"OFF\"}, {reset: \"RESET\"}, undefined];\n    }\nelse {\n    if (msg.payload === \"ON\") {\n        flow.set(topic, msg.payload);\n        return [{payload: \"ON\"}, undefined, undefined];\n    }\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 678,
        "wires": [
            [
                "b187a14.548406"
            ],
            [
                "1bf72870.060278",
                "ca630234.003a1"
            ],
            [
                "ef88d6e2.56a248"
            ]
        ]
    },
    {
        "id": "b26ffbed.c2c898",
        "type": "button-events",
        "z": "3a471104.edfbae",
        "name": "",
        "outputs": 2,
        "inputField": "payload",
        "inputFieldType": "msg",
        "outputField": "payload",
        "outputFieldType": "msg",
        "downValue": "ON",
        "downValueType": "str",
        "upValue": "OFF",
        "upValueType": "str",
        "idleValue": "1",
        "buttonEventsConfig": "3dbea5f7117423db",
        "clickedInterval": null,
        "pressedInterval": null,
        "debounceInterval": null,
        "events": [
            {
                "type": "clicked"
            },
            {
                "type": "pressed"
            }
        ],
        "x": 600,
        "y": 1018,
        "wires": [
            [
                "e5b77373cf1730fb"
            ],
            [
                "166368aac079833e"
            ]
        ]
    },
    {
        "id": "ad25b69b.70f848",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "store in flow",
        "func": "const topic = \"treppenhaus_kellerlicht\";\nconst last_state = flow.get(topic);\n\nif (last_state === \"ON\")\n    if (msg.payload === \"ON\") {\n        flow.set(topic + \"-exor\", true);\n        flow.set(topic, msg.payload);\n        return [{payload: \"ON\"}, undefined, {payload: \"OFF\"}]\n    } else {\n        if (flow.get(topic + \"-exor\")) {\n            flow.set(topic + \"-exor\", false);\n            return;\n        }\n        flow.set(topic, msg.payload);\n        return [{payload: \"OFF\"}, {reset: \"RESET\"}, undefined];\n    }\nelse {\n    if (msg.payload === \"ON\") {\n        flow.set(topic, msg.payload);\n        return [{payload: \"ON\"}, undefined, undefined];\n    }\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 838,
        "wires": [
            [
                "b187a14.548406"
            ],
            [
                "1bf72870.060278",
                "ca630234.003a1"
            ],
            [
                "3eb024a5.e9f9bc"
            ]
        ]
    },
    {
        "id": "c4c2eff3.b70f",
        "type": "link in",
        "z": "3a471104.edfbae",
        "name": "Treppenhaus Keller autom.",
        "links": [
            "86e17b7b.a2f5d8"
        ],
        "x": 455,
        "y": 678,
        "wires": [
            [
                "3eb024a5.e9f9bc",
                "829da71c.1e4898"
            ]
        ]
    },
    {
        "id": "86e17b7b.a2f5d8",
        "type": "link out",
        "z": "3a471104.edfbae",
        "name": "",
        "links": [
            "c4c2eff3.b70f",
            "aa508cc26dbab19a",
            "5d4fc47d69c0afb5",
            "01e739e468ac7641"
        ],
        "x": 1075,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ef88d6e2.56a248",
        "type": "ui_switch",
        "z": "3a471104.edfbae",
        "name": "Treppenhaus Keller (1 h)",
        "label": "Treppenhaus Keller (1 h)",
        "tooltip": "",
        "group": "64b01bd0.e1d1b4",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "treppenhaus_keller",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 730,
        "y": 838,
        "wires": [
            [
                "ad25b69b.70f848",
                "3ebdc5c5.e2b66a"
            ]
        ]
    },
    {
        "id": "d28aedd4.51206",
        "type": "link out",
        "z": "3a471104.edfbae",
        "name": "",
        "links": [
            "2be218d9.cd0108",
            "a2fce519c5527456"
        ],
        "x": 1075,
        "y": 1040,
        "wires": []
    },
    {
        "id": "2be218d9.cd0108",
        "type": "link in",
        "z": "3a471104.edfbae",
        "name": "Treppenhaus Keller dauernd",
        "links": [
            "d28aedd4.51206"
        ],
        "x": 455,
        "y": 838,
        "wires": [
            [
                "ef88d6e2.56a248",
                "829da71c.1e4898"
            ]
        ]
    },
    {
        "id": "3ebdc5c5.e2b66a",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "filter ON",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"ON\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 898,
        "wires": [
            [
                "ca630234.003a1"
            ]
        ]
    },
    {
        "id": "ca630234.003a1",
        "type": "trigger",
        "z": "3a471104.edfbae",
        "name": "Treppenhausautomat 1 h",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1230,
        "y": 898,
        "wires": [
            [
                "ef88d6e2.56a248"
            ]
        ]
    },
    {
        "id": "8a7888b.8497878",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "dunkel?",
        "func": "const umgebung = global.get('umgebungslicht');\n\nif (umgebung == \"dunkel\")\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 360,
        "wires": [
            [
                "c07473f0.eb252"
            ]
        ]
    },
    {
        "id": "c53f0279.79555",
        "type": "function",
        "z": "3a471104.edfbae",
        "d": true,
        "name": "dunkel",
        "func": "const umgebung = global.get('umgebungslicht');\n\nif (umgebung == \"dunkel\")\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 620,
        "wires": [
            [
                "3eb024a5.e9f9bc"
            ]
        ]
    },
    {
        "id": "e2e13ddd.9151f",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "Bewegungsmelder Gäste-WC",
        "topic": "zigbee2mqtt/bewegungsmelder_gaeste_wc",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 200,
        "y": 260,
        "wires": [
            [
                "c473a018.46907"
            ]
        ]
    },
    {
        "id": "e18902b0a943f1fe",
        "type": "trigger",
        "z": "3a471104.edfbae",
        "name": "Treppenhausautomat 2 s",
        "op1": "DISABLE",
        "op2": "ENABLE",
        "op1type": "str",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 730,
        "y": 580,
        "wires": [
            [
                "8e3990f1558de9fb"
            ]
        ]
    },
    {
        "id": "8e3990f1558de9fb",
        "type": "change",
        "z": "3a471104.edfbae",
        "name": "Latch3",
        "rules": [
            {
                "t": "set",
                "p": "treppenhaus_latch3",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 910,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "e5b77373cf1730fb",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "Latch3",
        "func": "const latch = flow.get('treppenhaus_latch3');\n\nif (latch != \"DISABLE\")\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1000,
        "wires": [
            [
                "8a94d4bd.10b228"
            ]
        ]
    },
    {
        "id": "166368aac079833e",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "Latch3",
        "func": "const latch = flow.get('treppenhaus_latch3');\n\nif (latch != \"DISABLE\")\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1040,
        "wires": [
            [
                "d28aedd4.51206"
            ]
        ]
    },
    {
        "id": "4a9f1a2e29bec69c",
        "type": "change",
        "z": "3a471104.edfbae",
        "d": true,
        "name": "Latch1",
        "rules": [
            {
                "t": "set",
                "p": "treppenhaus_latch1",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "25276f9407468fec",
        "type": "change",
        "z": "3a471104.edfbae",
        "d": true,
        "name": "Latch2",
        "rules": [
            {
                "t": "set",
                "p": "treppenhaus_latch2",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1010,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "eccfd4fbd047082e",
        "type": "comment",
        "z": "3a471104.edfbae",
        "name": "",
        "info": "Schalte ich das Licht manuell aus, geht es nicht gleich wieder durch einen Bewegungsmerlder an.",
        "x": 920,
        "y": 140,
        "wires": []
    },
    {
        "id": "b85bf8cf47a30d55",
        "type": "comment",
        "z": "3a471104.edfbae",
        "name": "",
        "info": "Schalte der Bewegungsmelder das Licht ein und ich drücke praktisch gleichzeitig den Taster, schalte ich das Licht nicht unabsichtlich aus.",
        "x": 680,
        "y": 540,
        "wires": []
    },
    {
        "id": "4a4a0a337a679751",
        "type": "comment",
        "z": "3a471104.edfbae",
        "name": "",
        "info": "Kurz drücken: Licht an/aus; Treppenhausautomat 2 min.\nLang Drücken: Licht an; Treppenhaus automat 1 Stunde.",
        "x": 580,
        "y": 980,
        "wires": []
    },
    {
        "id": "dc323f21c8079cd6",
        "type": "mqtt in",
        "z": "3a471104.edfbae",
        "name": "",
        "topic": "treppenhaus-gardrobe/binary_sensor/button2/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 270,
        "y": 1200,
        "wires": [
            [
                "de8d9af857835e7b"
            ]
        ]
    },
    {
        "id": "447669d06017102b",
        "type": "mqtt out",
        "z": "3a471104.edfbae",
        "name": "",
        "topic": "treppenhaus-gardrobe/switch/relay1/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 940,
        "y": 1160,
        "wires": []
    },
    {
        "id": "de8d9af857835e7b",
        "type": "button-events",
        "z": "3a471104.edfbae",
        "name": "",
        "outputs": 2,
        "inputField": "payload",
        "inputFieldType": "msg",
        "outputField": "payload",
        "outputFieldType": "msg",
        "downValue": "ON",
        "downValueType": "str",
        "upValue": "OFF",
        "upValueType": "str",
        "idleValue": "1",
        "buttonEventsConfig": "3dbea5f7117423db",
        "clickedInterval": null,
        "pressedInterval": null,
        "debounceInterval": null,
        "events": [
            {
                "type": "clicked"
            },
            {
                "type": "pressed"
            }
        ],
        "x": 420,
        "y": 1240,
        "wires": [
            [
                "b4daf9ad3a2af382"
            ],
            [
                "b4daf9ad3a2af382"
            ]
        ]
    },
    {
        "id": "b4daf9ad3a2af382",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "toggle state",
        "func": "if (msg.payload != \"clicked\" && msg.payload != \"pressed\") {\n    return undefined;\n}\n\nvar topic = \"treppenhaus_gardrobenlicht\";\nvar current_state = flow.get(topic);\n\nif (current_state === \"OFF\")\n    return {payload: \"ON\"}\nelse\n    return {payload: \"OFF\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 1240,
        "wires": [
            [
                "3d54164a8aad07af"
            ]
        ]
    },
    {
        "id": "3d54164a8aad07af",
        "type": "ui_switch",
        "z": "3a471104.edfbae",
        "name": "Treppenhaus Gardrobe (2 min)",
        "label": "Treppenhaus Gardrobe (2 min)",
        "tooltip": "",
        "group": "64b01bd0.e1d1b4",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "treppenhaus_keller",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 850,
        "y": 1220,
        "wires": [
            [
                "81e18b30bcaf7bb9",
                "a5dc53d97b09619e",
                "c191f33a6502f671"
            ]
        ]
    },
    {
        "id": "81e18b30bcaf7bb9",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "save state",
        "func": "flow.set(\"treppenhaus_gardrobenlicht\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 1220,
        "wires": [
            [
                "447669d06017102b"
            ]
        ]
    },
    {
        "id": "8a94d4bd.10b228",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "toggle state",
        "func": "if (msg.payload != \"ON\") {\n    return undefined;\n}\n\nvar topic = \"treppenhaus_kellerlicht\";\nvar current_state = flow.get(topic);\n\nif (current_state === \"OFF\")\n    return {payload: \"ON\"}\nelse\n    return {payload: \"OFF\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 1000,
        "wires": [
            [
                "86e17b7b.a2f5d8"
            ]
        ]
    },
    {
        "id": "a5dc53d97b09619e",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "filter ON",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"ON\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 1260,
        "wires": [
            [
                "ed9df766a52f2c8c"
            ]
        ]
    },
    {
        "id": "ed9df766a52f2c8c",
        "type": "trigger",
        "z": "3a471104.edfbae",
        "name": "Treppenhausautomat 2min",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1060,
        "y": 1260,
        "wires": [
            [
                "3d54164a8aad07af"
            ]
        ]
    },
    {
        "id": "3cb225532788346d",
        "type": "change",
        "z": "3a471104.edfbae",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1020,
        "y": 1300,
        "wires": [
            [
                "ed9df766a52f2c8c"
            ]
        ]
    },
    {
        "id": "c191f33a6502f671",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "filter OFF",
        "func": "if (msg.payload === \"OFF\")\n    return {payload: \"OFF\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 1300,
        "wires": [
            [
                "3cb225532788346d"
            ]
        ]
    },
    {
        "id": "42042fb5c5b6cd50",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "filter OFF",
        "func": "if (msg.payload === \"OFF\")\n    return {payload: \"OFF\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 400,
        "wires": [
            [
                "c07473f0.eb252"
            ]
        ]
    },
    {
        "id": "5d4fc47d69c0afb5",
        "type": "link in",
        "z": "3a471104.edfbae",
        "name": "Treppenhaus Keller autom.",
        "links": [
            "86e17b7b.a2f5d8"
        ],
        "x": 485,
        "y": 400,
        "wires": [
            [
                "42042fb5c5b6cd50"
            ]
        ]
    },
    {
        "id": "01e739e468ac7641",
        "type": "link in",
        "z": "3a471104.edfbae",
        "name": "Treppenhaus Keller autom.",
        "links": [
            "86e17b7b.a2f5d8",
            "b70e105a77f51cd4"
        ],
        "x": 575,
        "y": 1160,
        "wires": [
            [
                "f266a2cb363f176a"
            ]
        ]
    },
    {
        "id": "b70e105a77f51cd4",
        "type": "link out",
        "z": "3a471104.edfbae",
        "name": "link out 3",
        "mode": "link",
        "links": [
            "01e739e468ac7641"
        ],
        "x": 715,
        "y": 140,
        "wires": []
    },
    {
        "id": "f266a2cb363f176a",
        "type": "function",
        "z": "3a471104.edfbae",
        "name": "filter OFF",
        "func": "if (msg.payload === \"OFF\")\n    return {payload: \"OFF\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1200,
        "wires": [
            [
                "3d54164a8aad07af"
            ]
        ]
    },
    {
        "id": "639e1e682e138ba4",
        "type": "comment",
        "z": "3a471104.edfbae",
        "name": "",
        "info": "Alle Treppenhaus-Taster sind hier aufgeschlatet (nur die für den Keller nicht)",
        "x": 140,
        "y": 140,
        "wires": []
    },
    {
        "id": "9d59762f211b8663",
        "type": "comment",
        "z": "3a471104.edfbae",
        "name": "",
        "info": "Taster an der Kellertreppe im EG und im Keller",
        "x": 140,
        "y": 960,
        "wires": []
    },
    {
        "id": "2f8c3777.ecafb8",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "topic": "waschkueche-luefter/sensor/humidity/state",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 230,
        "y": 180,
        "wires": [
            [
                "b56cd25f.124c9",
                "f24eda7c.102788"
            ]
        ]
    },
    {
        "id": "9c38a690.14f558",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "topic": "waschkueche-wama/sensor/power/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 220,
        "y": 800,
        "wires": [
            [
                "8fd7504b.225ed"
            ]
        ]
    },
    {
        "id": "15f3325a.1a8f0e",
        "type": "hangoutChatBot",
        "z": "4d90b497.b5b2ac",
        "hangoutsCertificate": "10925253.f46f4e",
        "roomid": "spaces/AAAA1mNxo1U",
        "roomname": "spaces/AAAA1mNxo1U",
        "contentproperty": "Waschmaschiene ist fertig!",
        "contenttype": "str",
        "x": 780,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "c4508389.32591",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "topic": "waschkueche-wama/sensor/temperature/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 240,
        "y": 940,
        "wires": [
            [
                "c7cd3c7f.93d75"
            ]
        ]
    },
    {
        "id": "7b089f13.f2142",
        "type": "hangoutChatBot",
        "z": "4d90b497.b5b2ac",
        "hangoutsCertificate": "10925253.f46f4e",
        "roomid": "spaces/-fp3jQAAAAE",
        "roomname": "spaces/-fp3jQAAAAE",
        "contentproperty": "Shelly WaMa ist überhitzt!",
        "contenttype": "str",
        "x": 780,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "8fd7504b.225ed",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "func": "var val = parseFloat(msg.payload);\nconst last_n = 30\n\nvar wama_power_last = flow.get(\"wama_power_last\") || [];\nvar wama_status = flow.get(\"wama_status\") || \"aus\";\n\nwama_power_last.unshift(val);\nwama_power_last = wama_power_last.splice(0, last_n);\nflow.set(\"wama_power_last\", wama_power_last);\n\nconst avg_wama_power = wama_power_last.reduce(function (accumulator, currentValue) {\n  return accumulator + currentValue;\n}, 0) / last_n;\n\n\n// Result array:\n// 0 - Hangout\n// 1 - Status text\n// 2 - debug\nmsg = [undefined, {payload: wama_status}, {payload: avg_wama_power, topic: wama_status}];\nif (wama_status == \"läuft\") {\n    if (avg_wama_power < 4.0) {\n        flow.set(\"wama_status\", \"fertig\")\n        msg = [\n            {payload: \"fertig, \" + (new Date).toLocaleTimeString()},\n            {payload: \"fertig\"},\n            {payload: avg_wama_power, topic: wama_status}\n        ];\n    }\n} else if (wama_status == \"fertig\") {\n    if (avg_wama_power < 2.0) {\n        flow.set(\"wama_status\", \"aus\")\n        msg = [\n            undefined,\n            {payload: \"aus\"},\n            {payload: avg_wama_power, topic: wama_status}\n        ];\n    } else if (avg_wama_power >= 20.0) {\n        flow.set(\"wama_status\", \"läuft\")\n        msg = [\n            undefined,\n            {payload: \"läuft\"},\n            {payload: avg_wama_power, topic: wama_status}\n        ];\n    }\n} else { // status off\n    if (avg_wama_power >= 20.0) {\n        flow.set(\"wama_status\", \"läuft\")\n        msg = [\n            undefined,\n            {payload: \"läuft\"},\n            {payload: avg_wama_power, topic: wama_status}\n        ];\n    } else if (avg_wama_power >= 2.0) {\n        flow.set(\"wama_status\", \"fertig\")\n        msg = [\n            undefined,\n            {payload: \"fertig\"},\n            {payload: avg_wama_power, topic: wama_status}\n        ];\n    }\n}\n\nreturn msg;",
        "outputs": 3,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 800,
        "wires": [
            [
                "15f3325a.1a8f0e",
                "001ee2a7fce02dde"
            ],
            [
                "fd3b965b.3e6fc8"
            ],
            [
                "9fbf87b9.5b6618"
            ]
        ]
    },
    {
        "id": "c7cd3c7f.93d75",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "func": "var val = parseFloat(msg.payload);\n\nvar text, status;\nif (val > 95) {\n    msg = [\n        {payload: \"Überhitzt\"},\n        {payload: \"OFF\"}\n    ];\n} else {\n    msg = [\n        undefined,\n        undefined\n    ];\n}\n\nreturn msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 940,
        "wires": [
            [
                "7b089f13.f2142"
            ],
            [
                "76339dfa.1244c4"
            ]
        ]
    },
    {
        "id": "76339dfa.1244c4",
        "type": "mqtt out",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "topic": "waschkueche-wama/switch/switch15/command",
        "qos": "",
        "retain": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 900,
        "y": 960,
        "wires": []
    },
    {
        "id": "fd3b965b.3e6fc8",
        "type": "ui_text",
        "z": "4d90b497.b5b2ac",
        "group": "7e092ea0.4f2d9",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Waschmaschine/Trockner",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 830,
        "y": 800,
        "wires": []
    },
    {
        "id": "9fbf87b9.5b6618",
        "type": "debug",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 840,
        "wires": []
    },
    {
        "id": "b56cd25f.124c9",
        "type": "ui_gauge",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "group": "7e092ea0.4f2d9",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Luftfeuchtigkeit",
        "label": "% rel.",
        "format": "{{value}}",
        "min": "20",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "45",
        "seg2": "65",
        "diff": false,
        "className": "",
        "x": 580,
        "y": 200,
        "wires": []
    },
    {
        "id": "f24eda7c.102788",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "store global",
        "func": "var val = parseFloat(msg.payload);\nglobal.set(\"waschkueche_luefter-humidity\", val);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "e28bca49.e88d18",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "topic": "waschkueche-luefter/sensor/absolute_humidity/state",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 260,
        "y": 120,
        "wires": [
            [
                "47eed9bd.a41b08"
            ]
        ]
    },
    {
        "id": "47eed9bd.a41b08",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "store global",
        "func": "var val = parseFloat(msg.payload);\nglobal.set(\"waschkueche_luefter-absolute_humidity\", val);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4990ce01.e26cf",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "store global",
        "func": "var val = parseFloat(msg.payload);\nglobal.set(\"waschkueche_luefter-temperature\", val);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "dd9b1b4b.d18598",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "topic": "waschkueche-luefter/sensor/temperature/state",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "4990ce01.e26cf",
                "dea653c362b0f5af"
            ]
        ]
    },
    {
        "id": "74d29041.9a5c4",
        "type": "ui_switch",
        "z": "4d90b497.b5b2ac",
        "name": "Waschküche Lüfter",
        "label": "Lüfter",
        "tooltip": "",
        "group": "7e092ea0.4f2d9",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1070,
        "y": 400,
        "wires": [
            [
                "fcc6366f.aa0998",
                "21f07479.c7da9c",
                "c8ee7404.bf05b8",
                "6afb2001.139fe",
                "abbb2e72f1b22143"
            ]
        ]
    },
    {
        "id": "3226d9b9.c591c6",
        "type": "fritz-thermostat",
        "z": "4d90b497.b5b2ac",
        "connection": "c2e6322e.33404",
        "name": "setTempTarget AVM 301 Waschküche",
        "action": "setTempTarget",
        "x": 1910,
        "y": 340,
        "wires": [
            [
                "2122ea56.ebd5e6"
            ]
        ]
    },
    {
        "id": "a8931b52.026628",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "fan controller",
        "func": "// let kellertuer_sensor = global.get(\"kellertuer_sensor\");\n// let waschkueche_fahradkeller_tuer_sensor_contact = global.get('waschkueche_fahradkeller_tuer_sensor');\n// if (!kellertuer_sensor && !waschkueche_fahradkeller_tuer_sensor_contact) {\n//     msg = [\n//         {topic: \"luefter_sw\", payload: \"OFF\"},\n//         {topic: \"Debug\", payload: {}}\n//     ];\n\n//     return msg;  \n// }\n\n// const outside_abs_humidity = global.get(\"aussen-absolute_humidity\");\nconst outside_abs_humidity = global.get(\"steckdose1-absolute_humidity\");\nconst wk_temperature = global.get(\"waschkueche_luefter-temperature\");\nconst wk_humidity = global.get(\"waschkueche_luefter-humidity\");\nconst wk_abs_humidity = global.get(\"waschkueche_luefter-absolute_humidity\");\n\nconst washroom_fan_control = flow.get(\"washroom_fan_control\");\nconst last_abs_humidity_gt_outside_abs_humidity = global.get(\"washroom-last_abs_humidity_gt_outside_abs_humidity\");\n\nconst room_abs_humidity_gt_outside_abs_humidity = (last_abs_humidity_gt_outside_abs_humidity) ?\n    wk_abs_humidity > outside_abs_humidity * 1.05:\n    wk_abs_humidity > outside_abs_humidity * 1.05;\n\nglobal.set(\"washroom-last_abs_humidity_gt_outside_abs_humidity\", wk_abs_humidity > outside_abs_humidity);\n\nvar washroom_fan_on;\nif (washroom_fan_control == \"ON\") {\n    if (room_abs_humidity_gt_outside_abs_humidity) {\n        if (wk_humidity > 60 && wk_temperature > 14) {\n            washroom_fan_on = \"ON\";\n        } else {\n            washroom_fan_on = \"OFF\";\n        }\n    } else {\n        washroom_fan_on = \"OFF\";\n    }\n} else {\n    washroom_fan_on = undefined;\n}\n\nmsg = [\n    (washroom_fan_on) ? {topic: \"luefter_sw\", payload: washroom_fan_on} : undefined,\n    {topic: \"Debug\", payload: {\n            outside_abs_humidity: outside_abs_humidity,\n            wk_temperature: wk_temperature,\n            wk_humidity: wk_humidity,\n            wk_abs_humidity: wk_abs_humidity,\n            washroom_fan_on: washroom_fan_on,\n            washroom_fan_control: washroom_fan_control,\n            room_abs_humidity_gt_outside_abs_humidity: room_abs_humidity_gt_outside_abs_humidity,\n            last_abs_humidity_gt_outside_abs_humidity: last_abs_humidity_gt_outside_abs_humidity\n    }   }\n];\n\nreturn msg;",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 400,
        "wires": [
            [
                "74d29041.9a5c4"
            ],
            [
                "89a86d6b3ba3dfad"
            ]
        ]
    },
    {
        "id": "fcc6366f.aa0998",
        "type": "mqtt out",
        "z": "4d90b497.b5b2ac",
        "name": "Waschküche Lüfter",
        "topic": "waschkueche-luefter/switch/switch12/command",
        "qos": "",
        "retain": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1370,
        "y": 460,
        "wires": []
    },
    {
        "id": "92c6f73d.d38e98",
        "type": "mqtt out",
        "z": "4d90b497.b5b2ac",
        "name": "waschkueche-lueftungsklappe",
        "topic": "waschkueche-lueftungssteuerung/switch/servo/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1690,
        "y": 420,
        "wires": []
    },
    {
        "id": "21f07479.c7da9c",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "not",
        "func": "return {payload: (msg.payload != 'ON' ? 'ON' : 'OFF')};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 380,
        "wires": [
            [
                "341192ad.5f46be"
            ]
        ]
    },
    {
        "id": "c8ee7404.bf05b8",
        "type": "mqtt out",
        "z": "4d90b497.b5b2ac",
        "name": "waschkueche-lueftungssteuerung green led",
        "topic": "waschkueche-lueftungssteuerung/switch/green/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1450,
        "y": 500,
        "wires": []
    },
    {
        "id": "aea42133.521d6",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "func": "const lueften = msg.payload == \"LUEFTEN\";\nconst nicht_lueften = msg.payload == \"NICHT_LUEFTEN\";\nvar automatik = (msg.payload == \"AUTOMATIK\") || (flow.get(\"washroom_fan_control\") == 'ON');\n\nif (lueften || nicht_lueften) {\n    automatik = false;\n}\n\nreturn [\n    {payload: (lueften) ? 'ON' : 'OFF'},\n    {payload: (automatik) ? 'ON' : 'OFF'}\n];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 540,
        "wires": [
            [
                "74d29041.9a5c4",
                "e141181a.c44548"
            ],
            [
                "d5fef74c.c342e8"
            ]
        ]
    },
    {
        "id": "429ff1e7.d2093",
        "type": "trigger",
        "z": "4d90b497.b5b2ac",
        "name": "Treppenhausautomat",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "65",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1080,
        "y": 460,
        "wires": [
            [
                "74d29041.9a5c4"
            ]
        ]
    },
    {
        "id": "6afb2001.139fe",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "func": "const luefter = msg.payload;\nconst wk_temperature = global.get(\"waschkueche_luefter-temperature\");\nconst wk_rel_humidity = global.get(\"waschkueche_luefter-humidity\");\n\nif (luefter === \"ON\") { \n    return {\n        payload: \"off\"\n    };\n} else if (wk_rel_humidity > 65 && wk_temperature < 18) {\n    return {\n        payload: 18\n    };\n} else if (wk_rel_humidity > 60  && wk_temperature < 16) {\n    return {\n        payload: 16\n    };\n} else if (wk_temperature < 14  && wk_temperature < 14) {\n    return {\n        payload: 14\n    };\n} else {\n    return {\n        payload: \"off\"\n    };\n}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 340,
        "wires": [
            [
                "6efdaf1f.06744"
            ]
        ]
    },
    {
        "id": "1547ac.8baef854",
        "type": "inject",
        "z": "4d90b497.b5b2ac",
        "name": "every 5 minutes",
        "props": [
            {
                "p": "topic",
                "v": "",
                "vt": "date"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 610,
        "y": 400,
        "wires": [
            [
                "a8931b52.026628"
            ]
        ]
    },
    {
        "id": "341192ad.5f46be",
        "type": "mqtt out",
        "z": "4d90b497.b5b2ac",
        "name": "waschkueche-lueftungssteuerung red led",
        "topic": "waschkueche-lueftungssteuerung/switch/red/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1580,
        "y": 380,
        "wires": []
    },
    {
        "id": "e141181a.c44548",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "filter ON",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"ON\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 500,
        "wires": [
            [
                "429ff1e7.d2093"
            ]
        ]
    },
    {
        "id": "d5fef74c.c342e8",
        "type": "ui_switch",
        "z": "4d90b497.b5b2ac",
        "name": "Waschküche Lüfterautomatik",
        "label": "Lüfterautomatik",
        "tooltip": "",
        "group": "7e092ea0.4f2d9",
        "order": 3,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1100,
        "y": 580,
        "wires": [
            [
                "9df23e12.4321d",
                "febc79d8.468048",
                "7e27cddb614f807b"
            ]
        ]
    },
    {
        "id": "10e19129.3947ef",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "filter ON map to LUEFTEN",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"LUEFTEN\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 500,
        "wires": [
            [
                "aea42133.521d6"
            ]
        ]
    },
    {
        "id": "7b34d28e.50768c",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "filter ON map to AUTOMATIK",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"AUTOMATIK\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 540,
        "wires": [
            [
                "aea42133.521d6"
            ]
        ]
    },
    {
        "id": "a77eeea8.ad77b",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "filter ON map to NICHT_LUEFTEN",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"NICHT_LUEFTEN\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 580,
        "wires": [
            [
                "aea42133.521d6"
            ]
        ]
    },
    {
        "id": "9df23e12.4321d",
        "type": "change",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "washroom_fan_control",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1420,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "febc79d8.468048",
        "type": "mqtt out",
        "z": "4d90b497.b5b2ac",
        "name": "waschkueche-lueftungssteuerung yellow led",
        "topic": "waschkueche-lueftungssteuerung/switch/yellow/command",
        "qos": "",
        "retain": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1450,
        "y": 540,
        "wires": []
    },
    {
        "id": "8f0a4f28.6f3c4",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "name": "waschkueche-lueftungssteuerung lueften",
        "topic": "waschkueche-lueftungssteuerung/binary_sensor/lueften/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 500,
        "wires": [
            [
                "10e19129.3947ef"
            ]
        ]
    },
    {
        "id": "8e37f3ae.8c3a1",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "name": "waschkueche-lueftungssteuerung automatik",
        "topic": "waschkueche-lueftungssteuerung/binary_sensor/automatik/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 230,
        "y": 540,
        "wires": [
            [
                "7b34d28e.50768c"
            ]
        ]
    },
    {
        "id": "3389cd6e.2de5b2",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "name": "waschkueche-lueftungssteuerung nicht lueften",
        "topic": "waschkueche-lueftungssteuerung/binary_sensor/nicht_lueften/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 240,
        "y": 580,
        "wires": [
            [
                "a77eeea8.ad77b"
            ]
        ]
    },
    {
        "id": "6efdaf1f.06744",
        "type": "ui_dropdown",
        "z": "4d90b497.b5b2ac",
        "name": "Heizung Waschküche",
        "label": "Heizung",
        "tooltip": "",
        "place": "Select option",
        "group": "7e092ea0.4f2d9",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "aus",
                "value": "off",
                "type": "str"
            },
            {
                "label": "14°",
                "value": 14,
                "type": "num"
            },
            {
                "label": "16°",
                "value": 16,
                "type": "num"
            },
            {
                "label": "18°",
                "value": 18,
                "type": "num"
            },
            {
                "label": "20°",
                "value": 20,
                "type": "num"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1520,
        "y": 340,
        "wires": [
            [
                "6cf66f42.81259"
            ]
        ]
    },
    {
        "id": "2122ea56.ebd5e6",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "func": "const status = (msg.payload === \"off\") ? \"off\" : \"on\";\nconst temp = (msg.payload === \"off\" ? 0 : msg.payload);\n\nreturn {\n    topic: \"fritzbox/waschkueche_heizung\",\n    payload: {\n        status: status,\n        target_temperature: temp\n    }\n};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1960,
        "y": 380,
        "wires": [
            [
                "7b4ce70.b1fd818"
            ]
        ]
    },
    {
        "id": "6cf66f42.81259",
        "type": "change",
        "z": "4d90b497.b5b2ac",
        "name": "set ain",
        "rules": [
            {
                "t": "set",
                "p": "ain",
                "pt": "msg",
                "to": "099950702018",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1690,
        "y": 340,
        "wires": [
            [
                "3226d9b9.c591c6"
            ]
        ]
    },
    {
        "id": "7b4ce70.b1fd818",
        "type": "link out",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "links": [
            "4708a180.a07a"
        ],
        "x": 2055,
        "y": 380,
        "wires": []
    },
    {
        "id": "7a19f383331fe357",
        "type": "inject",
        "z": "4d90b497.b5b2ac",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 650,
        "y": 620,
        "wires": [
            [
                "66173e9252031097"
            ]
        ]
    },
    {
        "id": "66173e9252031097",
        "type": "change",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "washroom_fan_control",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 620,
        "wires": [
            [
                "d5fef74c.c342e8"
            ]
        ]
    },
    {
        "id": "dea653c362b0f5af",
        "type": "ui_gauge",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "group": "7e092ea0.4f2d9",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperatur",
        "label": "° Celsius",
        "format": "{{value}}",
        "min": "5",
        "max": "25",
        "colors": [
            "#0000b5",
            "#00b500",
            "#ca3838"
        ],
        "seg1": "15",
        "seg2": "20",
        "diff": false,
        "className": "",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "4499456238fa52c6",
        "type": "mqtt in",
        "z": "4d90b497.b5b2ac",
        "d": true,
        "name": "Waschküche-Fahradkeller-Tür",
        "topic": "zigbee2mqtt/waschkueche_fahradkeller_tuer_sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 340,
        "wires": [
            [
                "605faa63e383b5da",
                "7a8a17ed0bce2cbf"
            ]
        ]
    },
    {
        "id": "605faa63e383b5da",
        "type": "link out",
        "z": "4d90b497.b5b2ac",
        "name": "link out 17",
        "mode": "link",
        "links": [
            "9b82371bd7bd5085",
            "d8ccba5a509c6755"
        ],
        "x": 515,
        "y": 360,
        "wires": []
    },
    {
        "id": "7a8a17ed0bce2cbf",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "d": true,
        "name": "Status-Text",
        "func": "const contact = msg.payload.contact;\n\nreturn { payload: (contact) ? \"geschlossen\" : \"offen\"};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 320,
        "wires": [
            [
                "ef4abc638bd7a5a4"
            ]
        ]
    },
    {
        "id": "ef4abc638bd7a5a4",
        "type": "ui_text",
        "z": "4d90b497.b5b2ac",
        "d": true,
        "group": "7e092ea0.4f2d9",
        "order": 7,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Tür zum Fahradkeller",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 780,
        "y": 320,
        "wires": []
    },
    {
        "id": "d8ccba5a509c6755",
        "type": "link in",
        "z": "4d90b497.b5b2ac",
        "name": "Fan Controller",
        "links": [
            "21b33795391d4ce8",
            "605faa63e383b5da",
            "f9767b0c8c5a1e17"
        ],
        "x": 685,
        "y": 440,
        "wires": [
            [
                "a8931b52.026628"
            ]
        ]
    },
    {
        "id": "b6e1a30dedd2a905",
        "type": "link out",
        "z": "4d90b497.b5b2ac",
        "name": "link out 18",
        "mode": "link",
        "links": [],
        "x": 955,
        "y": 720,
        "wires": []
    },
    {
        "id": "001ee2a7fce02dde",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "push notification",
        "func": "if (!msg.payload) return;\n\nreturn {\n    payload: {\n        notification: {\n            title:\"Hello Node-RED user !\",\n            body:\"Click me to open your dashboard\"\n        },\n        data:{\n            silent: true,\n            requireInteraction: true,\n            icon: \"https://nodered.org/about/resources/media/node-red-icon-2.png\",\n            image: \"https://user-images.githubusercontent.com/14224149/73395580-19bac700-42e0-11ea-90c2-71cb4f496637.png\"\n        }\n    }\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 720,
        "wires": [
            [
                "b6e1a30dedd2a905"
            ]
        ]
    },
    {
        "id": "462db4ed1142440c",
        "type": "inject",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 440,
        "y": 700,
        "wires": [
            [
                "15f3325a.1a8f0e"
            ]
        ]
    },
    {
        "id": "7e27cddb614f807b",
        "type": "function",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "func": "return {\n    topic: \"fritzbox/waschkueche_luefterautomatik\",\n    payload: {\n        state: msg.payload\n    }\n};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 620,
        "wires": [
            [
                "0a8c64a7ae570888"
            ]
        ]
    },
    {
        "id": "0a8c64a7ae570888",
        "type": "link out",
        "z": "4d90b497.b5b2ac",
        "name": "",
        "links": [
            "4708a180.a07a"
        ],
        "x": 1435,
        "y": 620,
        "wires": []
    },
    {
        "id": "89a86d6b3ba3dfad",
        "type": "debug",
        "z": "4d90b497.b5b2ac",
        "name": "debug 22",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 440,
        "wires": []
    },
    {
        "id": "abbb2e72f1b22143",
        "type": "ui_switch",
        "z": "4d90b497.b5b2ac",
        "name": "Waschküche Lüftungsklappe",
        "label": "Lüftungsklappe offen",
        "tooltip": "",
        "group": "7e092ea0.4f2d9",
        "order": 4,
        "width": "0",
        "height": "0",
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 1400,
        "y": 420,
        "wires": [
            [
                "92c6f73d.d38e98"
            ]
        ]
    },
    {
        "id": "3f614727.989a68",
        "type": "mqtt in",
        "z": "293bb437.fa00bc",
        "name": "Kellertürschalter Außenlicht",
        "topic": "kellertuer/binary_sensor/switch2/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 200,
        "y": 100,
        "wires": [
            [
                "7e1d2b18.0c9484"
            ]
        ]
    },
    {
        "id": "ba941b0f.612f68",
        "type": "mqtt out",
        "z": "293bb437.fa00bc",
        "name": "Gartenlicht",
        "topic": "kellertuer/switch/relay2/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1270,
        "y": 100,
        "wires": []
    },
    {
        "id": "9c8ad592.66e0d8",
        "type": "mqtt out",
        "z": "293bb437.fa00bc",
        "name": "Kellertürlicht",
        "topic": "kellertuer/switch/relay1/command",
        "qos": "",
        "retain": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1450,
        "y": 360,
        "wires": []
    },
    {
        "id": "6c60716b.1a609",
        "type": "ui_switch",
        "z": "293bb437.fa00bc",
        "name": "Gartenlicht (3h)",
        "label": "Gartenlicht",
        "tooltip": "",
        "group": "d32aa509.f54168",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 920,
        "y": 100,
        "wires": [
            [
                "50bd8fbd.0e738"
            ]
        ]
    },
    {
        "id": "3f392e15.5cb7d2",
        "type": "ui_switch",
        "z": "293bb437.fa00bc",
        "name": "Kellertürscheinwerfer  (1 min)",
        "label": "Kellertürscheinwerfer  (1 min)",
        "tooltip": "",
        "group": "d32aa509.f54168",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 960,
        "y": 300,
        "wires": [
            [
                "e35415a4.7f0848",
                "68961b94.429674"
            ]
        ]
    },
    {
        "id": "ee80f561.19c918",
        "type": "mqtt in",
        "z": "293bb437.fa00bc",
        "name": "Kellertürschalter außen",
        "topic": "kellertuer/binary_sensor/switch1/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "8a4014a2.999cd8"
            ]
        ]
    },
    {
        "id": "7e1d2b18.0c9484",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "toggle",
        "func": "if (msg.payload != \"ON\")\n    return undefined;\n\nvar topic = \"gartenlicht\";\nvar current_state = flow.get(topic);\nvar new_state;\n\nif (current_state === \"OFF\") {\n    new_state = \"ON\";\n} else {\n    new_state = \"OFF\";\n}\n\nflow.set(topic, new_state);\n\nreturn {payload: new_state};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 100,
        "wires": [
            [
                "6c60716b.1a609",
                "264e2ae04e4d81f0",
                "2913705d3d5c391f"
            ]
        ]
    },
    {
        "id": "6de264d6.e9f88c",
        "type": "mqtt in",
        "z": "293bb437.fa00bc",
        "name": "Fernbedienung Balkontür",
        "topic": "zigbee2mqtt/fernbedienung_balkontuer",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 190,
        "y": 220,
        "wires": [
            [
                "851693ee.65c15"
            ]
        ]
    },
    {
        "id": "851693ee.65c15",
        "type": "switch",
        "z": "293bb437.fa00bc",
        "name": "action",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_move_up",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_move_down",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "brightness_stop",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 370,
        "y": 220,
        "wires": [
            [
                "89f0fbf4.8c0958"
            ],
            [
                "3191ad6d.ff0602"
            ],
            [],
            [
                "91179e20.4edce"
            ],
            []
        ]
    },
    {
        "id": "89f0fbf4.8c0958",
        "type": "template",
        "z": "293bb437.fa00bc",
        "name": "ON",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "ON",
        "output": "str",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "7e1d2b18.0c9484"
            ]
        ]
    },
    {
        "id": "3191ad6d.ff0602",
        "type": "template",
        "z": "293bb437.fa00bc",
        "name": "ON",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "ON",
        "output": "str",
        "x": 550,
        "y": 280,
        "wires": [
            [
                "eabff51d.1ce108"
            ]
        ]
    },
    {
        "id": "eabff51d.1ce108",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "toggle",
        "func": "if (msg.payload != \"ON\")\n    return undefined;\n\nvar topic = \"kellertürlicht\";\nvar current_state = flow.get(topic);\nvar new_state;\n\nif (current_state === \"OFF\") {\n    new_state = \"ON\";\n} else {\n    new_state = \"OFF\";\n}\n\nreturn {payload: new_state};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 280,
        "wires": [
            [
                "3f392e15.5cb7d2"
            ]
        ]
    },
    {
        "id": "a6b742da.b11dd",
        "type": "openweathermap in",
        "z": "293bb437.fa00bc",
        "name": "Wetter",
        "wtype": "current",
        "lon": "10.01239",
        "lat": "53.50597",
        "city": "",
        "country": "",
        "language": "de",
        "x": 130,
        "y": 740,
        "wires": [
            [
                "f182175dfb323de9"
            ]
        ]
    },
    {
        "id": "19fb59d7.6f23e6",
        "type": "mqtt out",
        "z": "293bb437.fa00bc",
        "name": "",
        "topic": "aussen-licht/switch/relay1/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 730,
        "y": 540,
        "wires": []
    },
    {
        "id": "c06891a3.a77e7",
        "type": "mqtt in",
        "z": "293bb437.fa00bc",
        "name": "Dämmerungssensor",
        "topic": "aussen-licht/binary_sensor/lichtsensor/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 540,
        "wires": [
            [
                "7ced6d2d.29ad64",
                "f52fa99.d8a2b58",
                "6795e265.50a59c",
                "c4e81b24848f57bf"
            ]
        ]
    },
    {
        "id": "7ced6d2d.29ad64",
        "type": "ui_switch",
        "z": "293bb437.fa00bc",
        "name": "Haustürlicht",
        "label": "Haustürlicht",
        "tooltip": "",
        "group": "d32aa509.f54168",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 430,
        "y": 520,
        "wires": [
            [
                "19fb59d7.6f23e6"
            ]
        ]
    },
    {
        "id": "f52fa99.d8a2b58",
        "type": "ui_switch",
        "z": "293bb437.fa00bc",
        "name": "Treppenlicht",
        "label": "Treppenlicht",
        "tooltip": "",
        "group": "d32aa509.f54168",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "x": 430,
        "y": 560,
        "wires": [
            [
                "19fb59d7.6f23e6"
            ]
        ]
    },
    {
        "id": "6795e265.50a59c",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"dunkel\"}\nelse\n    return {payload: \"hell\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 480,
        "wires": [
            [
                "f6017621.65b638"
            ]
        ]
    },
    {
        "id": "bc54b6b1.153c68",
        "type": "ui_text",
        "z": "293bb437.fa00bc",
        "group": "d32aa509.f54168",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Umgebung",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 790,
        "y": 480,
        "wires": []
    },
    {
        "id": "e35415a4.7f0848",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "filter ON",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"ON\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "cf34ae19.8d29c"
            ]
        ]
    },
    {
        "id": "cf34ae19.8d29c",
        "type": "trigger",
        "z": "293bb437.fa00bc",
        "name": "Treppenhausautomat 2 min",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "2",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1499,
        "y": 240,
        "wires": [
            [
                "3f392e15.5cb7d2"
            ]
        ]
    },
    {
        "id": "8a4014a2.999cd8",
        "type": "button-events",
        "z": "293bb437.fa00bc",
        "name": "Kellertürlicht",
        "outputs": 2,
        "inputField": "payload",
        "inputFieldType": "msg",
        "outputField": "payload",
        "outputFieldType": "msg",
        "downValue": "ON",
        "downValueType": "str",
        "upValue": "OFF",
        "upValueType": "str",
        "idleValue": "1",
        "buttonEventsConfig": "3dbea5f7117423db",
        "clickedInterval": null,
        "pressedInterval": null,
        "debounceInterval": null,
        "events": [
            {
                "type": "clicked"
            },
            {
                "type": "pressed"
            }
        ],
        "x": 350,
        "y": 320,
        "wires": [
            [
                "3191ad6d.ff0602"
            ],
            [
                "91179e20.4edce"
            ]
        ]
    },
    {
        "id": "b8b75b36.9f0be8",
        "type": "ui_switch",
        "z": "293bb437.fa00bc",
        "name": "Kellertürscheinwerfer (1h)",
        "label": "Kellertürscheinwerfer (1h)",
        "tooltip": "",
        "group": "d32aa509.f54168",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 950,
        "y": 400,
        "wires": [
            [
                "fe5adaf5.ca1d18",
                "565c0dc9.9aa304"
            ]
        ]
    },
    {
        "id": "91179e20.4edce",
        "type": "template",
        "z": "293bb437.fa00bc",
        "name": "ON",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "ON",
        "output": "str",
        "x": 550,
        "y": 340,
        "wires": [
            [
                "b8b75b36.9f0be8"
            ]
        ]
    },
    {
        "id": "68961b94.429674",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "store in flow",
        "func": "const topic = \"kellertürlicht\";\nconst last_state = flow.get(topic);\n\nif (last_state === \"ON\")\n    if (msg.payload === \"ON\") {\n        flow.set(topic + \"-exor\", true);\n        flow.set(topic, msg.payload);\n        return [{payload: \"ON\"}, undefined, {payload: \"OFF\"}]\n    } else {\n        if (flow.get(topic + \"-exor\")) {\n            flow.set(topic + \"-exor\", false);\n            return;\n        }\n        flow.set(topic, msg.payload);\n        return [{payload: \"OFF\"}, {reset: \"RESET\"}, undefined];\n    }\nelse {\n    if (msg.payload === \"ON\") {\n        flow.set(topic, msg.payload);\n        return [{payload: \"ON\"}, undefined, undefined];\n    }\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1210,
        "y": 300,
        "wires": [
            [
                "9c8ad592.66e0d8"
            ],
            [
                "cf34ae19.8d29c",
                "a8d1c90e.0569d8"
            ],
            [
                "b8b75b36.9f0be8"
            ]
        ]
    },
    {
        "id": "50bd8fbd.0e738",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "store in flow",
        "func": "var topic = \"gartenlicht\";\nflow.set(topic, msg.payload);\nglobal.set(topic, msg.payload);\n\nreturn {payload: msg.payload};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1090,
        "y": 100,
        "wires": [
            [
                "ba941b0f.612f68",
                "86cb329b293bb1f4"
            ]
        ]
    },
    {
        "id": "fe5adaf5.ca1d18",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "store in flow",
        "func": "const topic = \"kellertürlicht\";\nconst last_state = flow.get(topic);\n\nif (last_state === \"ON\")\n    if (msg.payload === \"ON\") {\n        flow.set(topic + \"-exor\", true);\n        flow.set(topic, msg.payload);\n        return [{payload: \"ON\"}, undefined, {payload: \"OFF\"}]\n    } else {\n        if (flow.get(topic + \"-exor\")) {\n            flow.set(topic + \"-exor\", false);\n            return;\n        }\n        flow.set(topic, msg.payload);\n        return [{payload: \"OFF\"}, {reset: \"RESET\"}, undefined];\n    }\nelse {\n    if (msg.payload === \"ON\") {\n        flow.set(topic, msg.payload);\n        return [{payload: \"ON\"}, undefined, undefined];\n    }\n}",
        "outputs": 3,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1210,
        "y": 400,
        "wires": [
            [
                "9c8ad592.66e0d8"
            ],
            [
                "cf34ae19.8d29c",
                "a8d1c90e.0569d8"
            ],
            [
                "3f392e15.5cb7d2"
            ]
        ]
    },
    {
        "id": "565c0dc9.9aa304",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "filter ON",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"ON\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1240,
        "y": 460,
        "wires": [
            [
                "a8d1c90e.0569d8"
            ]
        ]
    },
    {
        "id": "a8d1c90e.0569d8",
        "type": "trigger",
        "z": "293bb437.fa00bc",
        "name": "Treppenhausautomat 1 h",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1489,
        "y": 460,
        "wires": [
            [
                "b8b75b36.9f0be8"
            ]
        ]
    },
    {
        "id": "f6017621.65b638",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "store in global",
        "func": "var topic = \"umgebungslicht\";\nglobal.set(topic, msg.payload);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 480,
        "wires": [
            [
                "bc54b6b1.153c68"
            ]
        ]
    },
    {
        "id": "353ad6f4.8c98ba",
        "type": "mqtt in",
        "z": "293bb437.fa00bc",
        "d": true,
        "name": "Bewegungsmelder Kellertür",
        "topic": "zigbee2mqtt/bewegungsmelder_kellertuer",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 200,
        "y": 400,
        "wires": [
            [
                "b4b4ec5a.5a982"
            ]
        ]
    },
    {
        "id": "b4b4ec5a.5a982",
        "type": "function",
        "z": "293bb437.fa00bc",
        "d": true,
        "name": "map occupancy to ON",
        "func": "if (msg.payload[\"occupancy\"])\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 400,
        "wires": [
            [
                "25c855ce.b3b12a"
            ]
        ]
    },
    {
        "id": "25c855ce.b3b12a",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "dunkel",
        "func": "const umgebung = global.get('umgebungslicht');\n\nif (umgebung == \"dunkel\")\n    return {payload: \"ON\"}\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 320,
        "wires": [
            [
                "3f392e15.5cb7d2"
            ]
        ]
    },
    {
        "id": "c4e81b24848f57bf",
        "type": "ui_switch",
        "z": "293bb437.fa00bc",
        "name": "Balkonlicht",
        "label": "Balkonlicht",
        "tooltip": "",
        "group": "d32aa509.f54168",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 430,
        "y": 600,
        "wires": [
            [
                "ea10858a1cba4404"
            ]
        ]
    },
    {
        "id": "ea10858a1cba4404",
        "type": "mqtt out",
        "z": "293bb437.fa00bc",
        "name": "",
        "topic": "steckdose1/switch/relais/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 720,
        "y": 600,
        "wires": []
    },
    {
        "id": "f1f1a294807a426a",
        "type": "thingzi-timer",
        "z": "293bb437.fa00bc",
        "name": "Licht Nachts aus",
        "lat": "50.882",
        "lon": "6.6949",
        "timerType": "trigger",
        "startupMessage": false,
        "ontype": "tod",
        "ontimesun": "dusk",
        "ontimetod": "23:00",
        "onpropertytype": "msg",
        "onproperty": "payload",
        "onvaluetype": "str",
        "onvalue": "OFF",
        "onoffset": "",
        "onrandomoffset": false,
        "offtype": "tod",
        "offtimesun": "dawn",
        "offtimetod": "23:00",
        "offpropertytype": "msg",
        "offproperty": "payload",
        "offvaluetype": "str",
        "offvalue": "OFF",
        "offoffset": "",
        "offrandomoffset": false,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 400,
        "y": 40,
        "wires": [
            [
                "89dc73d808e84b6b"
            ]
        ]
    },
    {
        "id": "42d43c62e34642a4",
        "type": "link in",
        "z": "293bb437.fa00bc",
        "name": "",
        "links": [
            "89dc73d808e84b6b"
        ],
        "x": 755,
        "y": 40,
        "wires": [
            [
                "6c60716b.1a609"
            ]
        ]
    },
    {
        "id": "89dc73d808e84b6b",
        "type": "link out",
        "z": "293bb437.fa00bc",
        "name": "Nachts Licht aus",
        "mode": "link",
        "links": [
            "42d43c62e34642a4",
            "7de46dbaad752c86"
        ],
        "x": 535,
        "y": 40,
        "wires": []
    },
    {
        "id": "7de46dbaad752c86",
        "type": "link in",
        "z": "293bb437.fa00bc",
        "name": "",
        "links": [
            "89dc73d808e84b6b"
        ],
        "x": 245,
        "y": 600,
        "wires": [
            [
                "c4e81b24848f57bf"
            ]
        ]
    },
    {
        "id": "264e2ae04e4d81f0",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "filter ON",
        "func": "if (msg.payload === \"ON\")\n    return {payload: \"ON\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 140,
        "wires": [
            [
                "7b254d67885a2819"
            ]
        ]
    },
    {
        "id": "7b254d67885a2819",
        "type": "trigger",
        "z": "293bb437.fa00bc",
        "name": "Treppenhausautomat 3h",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "3",
        "extend": true,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "6c60716b.1a609"
            ]
        ]
    },
    {
        "id": "93bc5ff5cc82aa92",
        "type": "change",
        "z": "293bb437.fa00bc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "7b254d67885a2819"
            ]
        ]
    },
    {
        "id": "2913705d3d5c391f",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "filter OFF",
        "func": "if (msg.payload === \"OFF\")\n    return {payload: \"OFF\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 180,
        "wires": [
            [
                "93bc5ff5cc82aa92"
            ]
        ]
    },
    {
        "id": "8bb8f7f2bf42a352",
        "type": "openweathermap in",
        "z": "293bb437.fa00bc",
        "d": true,
        "name": "Wettervorhersage",
        "wtype": "forecast",
        "lon": "10.01239",
        "lat": "53.50597",
        "city": "",
        "country": "",
        "language": "de",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "c840b3d374ab48ce"
            ]
        ]
    },
    {
        "id": "c840b3d374ab48ce",
        "type": "debug",
        "z": "293bb437.fa00bc",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 980,
        "wires": []
    },
    {
        "id": "86cb329b293bb1f4",
        "type": "link out",
        "z": "293bb437.fa00bc",
        "name": "kellertuer_schalter_aussenlicht",
        "mode": "link",
        "links": [
            "cfca6b4ad8a515f2",
            "7fef5154b7c2177a"
        ],
        "x": 1215,
        "y": 60,
        "wires": []
    },
    {
        "id": "48087d0df0fa2728",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "store global as named aussen",
        "func": "global.set(\"aussen-temperature\", msg.payload.tempc);\nglobal.set(\"aussen-humidity\", msg.payload.humidity);\nglobal.set(\"aussen-absolute_humidity\", msg.payload.absolute_humidity);\nglobal.set(\"aussen-pressure\", msg.payload.pressure);\nglobal.set(\"aussen-dew_point\", msg.payload.dew_point);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "8a37748d46ba0dbf",
        "type": "link out",
        "z": "293bb437.fa00bc",
        "name": "aussen",
        "mode": "link",
        "links": [
            "9b9574d4.b3d108"
        ],
        "x": 755,
        "y": 780,
        "wires": []
    },
    {
        "id": "f537de13ab240908",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "add absolute_humidity and dew_point",
        "func": "const mw = 18.01534;    // molar mass of water g/mol\nconst r = 8.31447215;   // Universal gas constant J/mol/K\n\nconst tempc = Number(msg.payload.tempc);\nconst humidity = Number(msg.payload.humidity);\n\nconst absolute_humidity = Number((6.112 * Math.exp((17.67 * tempc) /\n    (tempc + 243.5)) * humidity * mw) /\n    ((273.15 + tempc) * r));\nconst dew_point = Number((243.5 * (Math.log(humidity / 100) + ((17.67 * tempc) /\n    (243.5 + tempc))) / (17.67 - Math.log(humidity / 100) -\n        ((17.67 * tempc) / (243.5 + tempc)))));\n\nmsg.payload.absolute_humidity = absolute_humidity;\nmsg.payload.dew_point = dew_point;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 740,
        "wires": [
            [
                "48087d0df0fa2728",
                "8a37748d46ba0dbf"
            ]
        ]
    },
    {
        "id": "873f70487ac3ba4f",
        "type": "mqtt in",
        "z": "293bb437.fa00bc",
        "d": true,
        "name": "Regenwasserpumpe",
        "topic": "shellies/shellyplusplugs-d4d4daedbe64/status/switch:0",
        "qos": "2",
        "datatype": "utf8",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 170,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "9591ad84c965c4a0",
        "type": "mqtt out",
        "z": "293bb437.fa00bc",
        "d": true,
        "name": "Regenwasserpumpe im Schacht bei den Nachbarn",
        "topic": "shellies/shellyplusplugs-d4d4daedbe64/command/switch:0",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 590,
        "y": 840,
        "wires": []
    },
    {
        "id": "3bbcf05fba67d89a",
        "type": "link in",
        "z": "293bb437.fa00bc",
        "name": "Kellertürscheinwerfer",
        "links": [
            "5f083e6b9b4c2abf",
            "865d40eb7c6b444e",
            "5f52228d037d591e",
            "4ccfd8e25ba474a1"
        ],
        "x": 545,
        "y": 440,
        "wires": [
            [
                "25c855ce.b3b12a"
            ]
        ]
    },
    {
        "id": "f182175dfb323de9",
        "type": "function",
        "z": "293bb437.fa00bc",
        "name": "add field rain",
        "func": "msg.payload.rain = msg.payload.rain || 0.0;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 740,
        "wires": [
            [
                "f537de13ab240908"
            ]
        ]
    },
    {
        "id": "7ae7fa74.a8aa34",
        "type": "function",
        "z": "fc81a32b.bb6db",
        "name": "add absolute_humidity and dew_point",
        "func": "const temperature = msg.payload.temperature;\nconst humidity = msg.payload.humidity;\n\nconst mw = 18.01534;    // molar mass of water g/mol\nconst r = 8.31447215;   // Universal gas constant J/mol/K\n\nmsg.payload.absolute_humidity = (6.112 * Math.pow(2.718281828, (17.67 * temperature) /\n    (temperature + 243.5)) * humidity * mw) /\n    ((273.15 + temperature) * r); // in grams/m^3\n\nmsg.payload.dew_point = (243.5*(Math.log(humidity/100)+((17.67*temperature)/\n    (243.5+temperature)))/(17.67-Math.log(humidity/100)-\n    ((17.67*temperature)/(243.5+temperature))));\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "56169d58.a0dc04"
            ]
        ]
    },
    {
        "id": "aa7a4964.384d28",
        "type": "link out",
        "z": "fc81a32b.bb6db",
        "name": "",
        "mode": "link",
        "links": [
            "4708a180.a07a"
        ],
        "x": 995,
        "y": 280,
        "wires": []
    },
    {
        "id": "87c5ced2.7998f",
        "type": "mqtt in",
        "z": "fc81a32b.bb6db",
        "name": "",
        "topic": "zigbee2mqtt/+",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 240,
        "wires": [
            [
                "d9d02903.582fc8"
            ]
        ]
    },
    {
        "id": "d9d02903.582fc8",
        "type": "function",
        "z": "fc81a32b.bb6db",
        "name": "Filter temperature and humidity devices",
        "func": "if (msg.topic.match(/\\/th\\_/)) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 240,
        "wires": [
            [
                "7ae7fa74.a8aa34",
                "fb6167b0.b1aeb8"
            ]
        ]
    },
    {
        "id": "a7ae9a7e.53fb48",
        "type": "function",
        "z": "fc81a32b.bb6db",
        "name": "temperature and humidity data to global store",
        "func": "const name = msg.payload.name;\n\nglobal.set(`${name}-temperature`, msg.payload.temperature);\nglobal.set(`${name}-humidity`, msg.payload.humidity);\nglobal.set(`${name}-absolute_humidity`, msg.payload.absolute_humidity);\nglobal.set(`${name}-dew_point`, msg.payload.dew_point);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fb6167b0.b1aeb8",
        "type": "debug",
        "z": "fc81a32b.bb6db",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 160,
        "wires": []
    },
    {
        "id": "f3d8ac5c.06b5d",
        "type": "mqtt in",
        "z": "fc81a32b.bb6db",
        "name": "",
        "topic": "+/sensor/+/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 180,
        "wires": [
            [
                "e9d35454.3632b8"
            ]
        ]
    },
    {
        "id": "e9d35454.3632b8",
        "type": "function",
        "z": "fc81a32b.bb6db",
        "name": "ESPHome to global store",
        "func": "const tokens = msg.topic.split(\"/\");\nconst name = tokens[0].replace(' ', '_');\nconst field = tokens[2].replace(' ', '_');\n\nconst value = (/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?)$/.test(msg.payload))\n    ? Number(msg.payload) : msg.payload;\n\nglobal.set(`${name}-${field}`, value);\n\nreturn {payload: {\n    name: name,\n    field: field,\n    value: value\n}};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 180,
        "wires": [
            [
                "621bc9b5.3e4d28"
            ]
        ]
    },
    {
        "id": "621bc9b5.3e4d28",
        "type": "debug",
        "z": "fc81a32b.bb6db",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 180,
        "wires": []
    },
    {
        "id": "56169d58.a0dc04",
        "type": "function",
        "z": "fc81a32b.bb6db",
        "name": "add name",
        "func": "msg.payload.name = msg.topic\n    .replace(/^zigbee2mqtt\\//, '');\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 280,
        "wires": [
            [
                "a7ae9a7e.53fb48",
                "aa7a4964.384d28",
                "fb6167b0.b1aeb8"
            ]
        ]
    },
    {
        "id": "ca4f0c870cf58d0a",
        "type": "function",
        "z": "fc81a32b.bb6db",
        "name": "Delete all Global Context Vars",
        "func": "global.keys().forEach(key => {\n    global.set(key, undefined);\n});\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "c3bb800f2806c3f7",
        "type": "inject",
        "z": "fc81a32b.bb6db",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "ca4f0c870cf58d0a"
            ]
        ]
    },
    {
        "id": "267d2e1.40785d2",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "Create Message",
        "func": "var send_rate = Number(msg.payload.NewByteSendRate)\nvar receive_rate = Number(msg.payload.NewByteReceiveRate)\n\nmsg = [\n    {payload: receive_rate / 1024 / 1024 * 8},\n    {payload: send_rate / 1024 / 1024 * 8}\n];\n\nreturn msg;",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 80,
        "wires": [
            [
                "678631ab.fe1bb"
            ],
            [
                "9d0190fe.0d3fe"
            ]
        ]
    },
    {
        "id": "a29449a0.411b18",
        "type": "inject",
        "z": "2f328ad8.26ca86",
        "name": "Every 60s",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": true,
        "onceDelay": "120",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "3e907215.115b5e"
            ]
        ]
    },
    {
        "id": "3e907215.115b5e",
        "type": "fritzbox-in",
        "z": "2f328ad8.26ca86",
        "device": "48b52eb1.50063",
        "name": "",
        "service": "urn:schemas-upnp-org:service:WANCommonInterfaceConfig:1",
        "action": "GetAddonInfos",
        "arguments": "{}",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "267d2e1.40785d2"
            ]
        ]
    },
    {
        "id": "86ad9def.8aa5c",
        "type": "mqtt in",
        "z": "2f328ad8.26ca86",
        "name": "Stromzähler - Leistung",
        "topic": "stromzaehler/sensor/1/obis/1-0:16.7.0/255/value",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 240,
        "y": 340,
        "wires": [
            [
                "2da1b2f192911d45"
            ]
        ]
    },
    {
        "id": "2dcf1032.d990b",
        "type": "mqtt in",
        "z": "2f328ad8.26ca86",
        "name": "Stromzähler - Energie",
        "topic": "stromzaehler/sensor/1/obis/1-0:1.8.0/255/value",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 240,
        "y": 260,
        "wires": [
            [
                "d706024302ec5675"
            ]
        ]
    },
    {
        "id": "ea99ed95.a6b5f",
        "type": "link out",
        "z": "2f328ad8.26ca86",
        "name": "Stromaufnahme",
        "mode": "link",
        "links": [
            "cf2bd5c4.367d88"
        ],
        "x": 575,
        "y": 300,
        "wires": []
    },
    {
        "id": "8452f01b.9b7a2",
        "type": "link out",
        "z": "2f328ad8.26ca86",
        "name": "Stromzählerstand",
        "links": [
            "cbdd2a4.e9dcad8"
        ],
        "x": 575,
        "y": 220,
        "wires": []
    },
    {
        "id": "678631ab.fe1bb",
        "type": "link out",
        "z": "2f328ad8.26ca86",
        "name": "DSL Downstream",
        "links": [
            "c464d2a1.b031e"
        ],
        "x": 735,
        "y": 60,
        "wires": []
    },
    {
        "id": "9d0190fe.0d3fe",
        "type": "link out",
        "z": "2f328ad8.26ca86",
        "name": "DSL Upstream",
        "links": [
            "e94f62b.6a086a"
        ],
        "x": 735,
        "y": 100,
        "wires": []
    },
    {
        "id": "5a82383.d4d5ec8",
        "type": "mqtt in",
        "z": "2f328ad8.26ca86",
        "name": "",
        "topic": "zigbee2mqtt/gas_zaehler",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 250,
        "y": 560,
        "wires": [
            [
                "6238d883.2f3dd8",
                "9e8d969fa2e830fa"
            ]
        ]
    },
    {
        "id": "6238d883.2f3dd8",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "",
        "func": "if (msg.payload.contact) {\n    const topic = msg.topic;\n    var counter = (flow.get(topic) || 0) + 0.01;\n    flow.set(topic, counter);\n    return {topic: topic, payload: {counter: counter}};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 560,
        "wires": [
            [
                "afb0333e.affc6",
                "cdbf2a81.584de8"
            ]
        ]
    },
    {
        "id": "afb0333e.affc6",
        "type": "link out",
        "z": "2f328ad8.26ca86",
        "name": "Gas Zähler",
        "links": [
            "4708a180.a07a"
        ],
        "x": 735,
        "y": 560,
        "wires": []
    },
    {
        "id": "d7eb448b.d6abd8",
        "type": "ui_text",
        "z": "2f328ad8.26ca86",
        "group": "a8a6836d.1b1cf",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zähler",
        "format": "{{msg.payload.counter}}",
        "layout": "row-spread",
        "x": 930,
        "y": 600,
        "wires": []
    },
    {
        "id": "ff9d667f.fa9df8",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "",
        "func": "if (msg.payload.counter) {\n    flow.set(msg.topic, msg.payload.counter);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 640,
        "wires": [
            [
                "cdbf2a81.584de8"
            ]
        ]
    },
    {
        "id": "231f1768.7a5958",
        "type": "inject",
        "z": "2f328ad8.26ca86",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "zigbee2mqtt/gas_zaehler",
        "payload": "{\"counter\": 8515.868}",
        "payloadType": "json",
        "x": 400,
        "y": 640,
        "wires": [
            [
                "ff9d667f.fa9df8"
            ]
        ]
    },
    {
        "id": "cdbf2a81.584de8",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "",
        "func": "const intl = global.get('intl');\nmsg.payload.counter = intl.NumberFormat('de-De',{\n        style:'decimal', \n        maximumFractionDigits: 2,\n        minimumFractionDigits: 2\n    }).format(msg.payload.counter) + \" m³\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 600,
        "wires": [
            [
                "d7eb448b.d6abd8"
            ]
        ]
    },
    {
        "id": "137fe45c.47150c",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "format",
        "func": "const intl = global.get('intl');\nmsg.payload = intl.NumberFormat('de-De',{\n        style:'decimal', \n        minimumFractionDigits: 5,\n        maximumFractionDigits: 5\n    }).format(msg.payload/1000) + \" kWh\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 260,
        "wires": [
            [
                "a135ae90.6531b"
            ]
        ]
    },
    {
        "id": "a135ae90.6531b",
        "type": "ui_text",
        "z": "2f328ad8.26ca86",
        "group": "dab59e38.c408e",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zähler",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 750,
        "y": 260,
        "wires": []
    },
    {
        "id": "d4a94293b3dcde0f",
        "type": "mqtt in",
        "z": "2f328ad8.26ca86",
        "d": true,
        "name": "Wasserzaehler",
        "topic": "wasserzaehler/main/json",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 220,
        "y": 780,
        "wires": [
            [
                "b362144e6d02d6d4",
                "81639ac35386f5a5"
            ]
        ]
    },
    {
        "id": "b362144e6d02d6d4",
        "type": "link out",
        "z": "2f328ad8.26ca86",
        "name": "Wasserzähler",
        "mode": "link",
        "links": [
            "223c8bb042a5a36b"
        ],
        "x": 575,
        "y": 760,
        "wires": []
    },
    {
        "id": "bda66cbe403b98e1",
        "type": "ui_text",
        "z": "2f328ad8.26ca86",
        "d": true,
        "group": "82403ec68b4e0d16",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Zähler",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 770,
        "y": 800,
        "wires": []
    },
    {
        "id": "81639ac35386f5a5",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "d": true,
        "name": "",
        "func": "const intl = global.get('intl');\nmsg.payload = intl.NumberFormat('de-De',{\n        style:'decimal', \n        maximumFractionDigits: 3,\n        minimumFractionDigits: 3\n    }).format(msg.payload.value) + \" m³\";\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 800,
        "wires": [
            [
                "bda66cbe403b98e1"
            ]
        ]
    },
    {
        "id": "02b2155614250dad",
        "type": "debug",
        "z": "2f328ad8.26ca86",
        "d": true,
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 840,
        "wires": []
    },
    {
        "id": "02f13974ebab4450",
        "type": "catch",
        "z": "2f328ad8.26ca86",
        "d": true,
        "name": "Catch Error from Wasserzaehler",
        "scope": [
            "d4a94293b3dcde0f"
        ],
        "uncaught": false,
        "x": 270,
        "y": 840,
        "wires": [
            [
                "02b2155614250dad"
            ]
        ]
    },
    {
        "id": "db817f6714d2a95f",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "format",
        "func": "const intl = global.get('intl');\n\nmsg.payload = intl.NumberFormat('de-De',{\n        style:'decimal', \n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(msg.payload) + \" W\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 340,
        "wires": [
            [
                "a50e9312216973f8",
                "b379919482e29525"
            ]
        ]
    },
    {
        "id": "a50e9312216973f8",
        "type": "ui_text",
        "z": "2f328ad8.26ca86",
        "group": "dab59e38.c408e",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bezug",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 750,
        "y": 340,
        "wires": []
    },
    {
        "id": "f7476743a05366c2",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "Store stombezug in global",
        "func": "global.set(\"stombezug\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2da1b2f192911d45",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "to_number",
        "func": "var value;\nif (/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?)$/.test(msg.payload)) {\n    value = Number(msg.payload);\n} else {\n    value = msg.payload;\n}\n\nreturn {payload: value};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 340,
        "wires": [
            [
                "ea99ed95.a6b5f",
                "f7476743a05366c2",
                "db817f6714d2a95f"
            ]
        ]
    },
    {
        "id": "d706024302ec5675",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "to_number",
        "func": "var value;\nif (/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?)$/.test(msg.payload)) {\n    value = Number(msg.payload);\n} else {\n    value = msg.payload;\n}\n\nreturn {payload: value};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 260,
        "wires": [
            [
                "8452f01b.9b7a2",
                "137fe45c.47150c"
            ]
        ]
    },
    {
        "id": "5001caa3ccebc382",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "einspeisung & eigenverbrauch",
        "func": "const solarertag = msg.payload;\nconst stombezug = global.get(\"stombezug\");\n\nconst netzbezug = (stombezug > 0) ? stombezug : 0;\nconst einspeisung = (stombezug < 0) ? stombezug : 0; //wie so nicht - ?\nconst eigenverbrauch = solarertag - einspeisung;\nconst stromverbrauch = netzbezug + eigenverbrauch;\n\nreturn { payload: { eigenverbrauch: eigenverbrauch, einspeisung: einspeisung, netzbezug: netzbezug, stromverbrauch: stromverbrauch}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 460,
        "wires": [
            [
                "4d932a70ca858354",
                "78bf53bd535db91f"
            ]
        ]
    },
    {
        "id": "e3e242d521f1c698",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "Store solarertrag in global",
        "func": "global.set(\"solarertag\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 460,
        "wires": [
            [
                "5001caa3ccebc382"
            ]
        ]
    },
    {
        "id": "4d932a70ca858354",
        "type": "link out",
        "z": "2f328ad8.26ca86",
        "name": "Einspeisung",
        "mode": "link",
        "links": [
            "49152127e918c9d7",
            "8dd66c9be3547aa2"
        ],
        "x": 975,
        "y": 460,
        "wires": []
    },
    {
        "id": "3e9ebf101b0970f9",
        "type": "mqtt in",
        "z": "2f328ad8.26ca86",
        "name": "Wechselrichter - Leistung",
        "topic": "leistungsmesser2/sensor/power/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 420,
        "wires": [
            [
                "53201bdb5632cbb7",
                "e3e242d521f1c698"
            ]
        ]
    },
    {
        "id": "53201bdb5632cbb7",
        "type": "function",
        "z": "2f328ad8.26ca86",
        "name": "format",
        "func": "const intl = global.get('intl');\nmsg.payload = intl.NumberFormat('de-De',{\n        style:'decimal', \n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n    }).format(msg.payload) + \" W\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 420,
        "wires": [
            [
                "72e1ab824861a106"
            ]
        ]
    },
    {
        "id": "72e1ab824861a106",
        "type": "ui_text",
        "z": "2f328ad8.26ca86",
        "group": "dab59e38.c408e",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Solarertrag",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 730,
        "y": 420,
        "wires": []
    },
    {
        "id": "78bf53bd535db91f",
        "type": "debug",
        "z": "2f328ad8.26ca86",
        "name": "debug 5",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 500,
        "wires": []
    },
    {
        "id": "9e8d969fa2e830fa",
        "type": "debounce",
        "z": "2f328ad8.26ca86",
        "d": true,
        "time": "2000",
        "name": "",
        "x": 460,
        "y": 500,
        "wires": [
            [
                "6238d883.2f3dd8"
            ]
        ]
    },
    {
        "id": "b379919482e29525",
        "type": "ui_text",
        "z": "2f328ad8.26ca86",
        "group": "59ad78e6b49c46bb",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Bezug",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 750,
        "y": 300,
        "wires": []
    },
    {
        "id": "7b56cfeb.46625",
        "type": "mqtt out",
        "z": "dac2cb3b.559138",
        "name": "",
        "topic": "zigbee2mqtt/zirkulationspumpe/set",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1180,
        "y": 240,
        "wires": []
    },
    {
        "id": "5428f2e53de25092",
        "type": "mqtt in",
        "z": "dac2cb3b.559138",
        "name": "",
        "topic": "zigbee2mqtt/fernbedienung_bad",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 240,
        "wires": [
            [
                "eaf6fe8a89747f00"
            ]
        ]
    },
    {
        "id": "df199e6fb3a59d4f",
        "type": "template",
        "z": "dac2cb3b.559138",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "ON",
        "output": "str",
        "x": 600,
        "y": 280,
        "wires": [
            [
                "12ebe76fae3f9cf7"
            ]
        ]
    },
    {
        "id": "df2bfb8e940b1768",
        "type": "ui_switch",
        "z": "dac2cb3b.559138",
        "name": "Zirkulationspumpe (10min)",
        "label": "Zirkulationspumpe (10min)",
        "tooltip": "",
        "group": "10c3f1d2.4cdbde",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "zirkulationspumpe_10min",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 860,
        "y": 280,
        "wires": [
            [
                "7b56cfeb.46625",
                "102c0c6b428bff43"
            ]
        ]
    },
    {
        "id": "351c32062e77392a",
        "type": "trigger",
        "z": "dac2cb3b.559138",
        "name": "Treppenhausautomat 10min",
        "op1": "",
        "op2": "OFF",
        "op1type": "nul",
        "op2type": "str",
        "duration": "10",
        "extend": false,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 1300,
        "y": 280,
        "wires": [
            [
                "12ebe76fae3f9cf7"
            ]
        ]
    },
    {
        "id": "e91d70892415c84f",
        "type": "mqtt in",
        "z": "dac2cb3b.559138",
        "name": "",
        "topic": "zigbee2mqtt/fernbedienung_bad_dg",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 280,
        "wires": [
            [
                "eaf6fe8a89747f00"
            ]
        ]
    },
    {
        "id": "53936a862e9e6c08",
        "type": "link out",
        "z": "dac2cb3b.559138",
        "name": "Deckenlicht state",
        "mode": "link",
        "links": [
            "0e775ee78efd07c4"
        ],
        "x": 755,
        "y": 240,
        "wires": []
    },
    {
        "id": "c0c28364952dec04",
        "type": "link in",
        "z": "dac2cb3b.559138",
        "name": "Set Deckenlicht Bad",
        "links": [
            "35ae68a760d0d2e2"
        ],
        "x": 965,
        "y": 240,
        "wires": [
            [
                "7b56cfeb.46625",
                "102c0c6b428bff43"
            ]
        ]
    },
    {
        "id": "eaf6fe8a89747f00",
        "type": "switch",
        "z": "dac2cb3b.559138",
        "name": "",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "df199e6fb3a59d4f"
            ]
        ]
    },
    {
        "id": "102c0c6b428bff43",
        "type": "switch",
        "z": "dac2cb3b.559138",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ON",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1090,
        "y": 280,
        "wires": [
            [
                "351c32062e77392a"
            ]
        ]
    },
    {
        "id": "49d727fe.737a88",
        "type": "inject",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 340,
        "wires": [
            [
                "8dbf1137ca611589"
            ]
        ]
    },
    {
        "id": "5616c163.a87f9",
        "type": "debug",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "23f6c6bd.14f54a",
        "type": "ui_template",
        "z": "4fa3b184.bc7fb",
        "group": "d796a540.50d378",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "236c8c27.2d41a4",
        "type": "ui_template",
        "z": "4fa3b184.bc7fb",
        "group": "d796a540.50d378",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text1}}<br/>{{msg.payload.text2}}<br/>{{msg.payload.text3}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d7d58dae.c7b95",
        "type": "ui_template",
        "z": "4fa3b184.bc7fb",
        "group": "d796a540.50d378",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 580,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "8dbf1137ca611589",
        "type": "function",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "func": "const temp = global.get(\"luftguetemesser1-temperature\");\nconst hum = global.get(\"luftguetemesser1-humidity\");\nconst abs_hum = global.get(\"luftguetemesser1-absolute_humidity\");\nconst press = global.get(\"luftguetemesser1-pressure\");\nconst iaq = global.get(\"luftguetemesser1-iaq\");\nconst co2 = global.get(\"luftguetemesser1-co2\");\nconst voc = global.get(\"luftguetemesser1-breath_voc_equivalent\");\nconst m10 = global.get(\"luftguetemesser1-particulate_matter_10m_concentration\");\nconst m25 = global.get(\"luftguetemesser1-particulate_matter_25m_concentration\");\nconst m100 = global.get(\"luftguetemesser1-particulate_matter_100m_concentration\");\nconst alert_voc = global.get(\"luftguetemesser1-alert_voc\");\nconst alert_co2 = global.get(\"luftguetemesser1-alert_co2\");\nconst alert_pm = global.get(\"luftguetemesser1-alert_pm\");\n\nvar debug = {\n    temp: temp,\n    hum: hum,\n    abs_hum: abs_hum,\n    press: press,\n    iaq: iaq,\n    co2: co2,\n    voc: voc,\n    m10: m10,\n    m25: m25,\n    m100: m100,\n    alert_voc,\n    alert_co2,\n    alert_pm\n};\n\nconst intl = global.get('intl');\nconst format = intl.NumberFormat('de-De',{style:'decimal', maximumFractionDigits: 2}).format;\nconst sprintf = global.get(\"sprintf\");\n\nfunction color(alert) {\n    return (alert == \"green\") ? \"limegreen\" : alert;\n}\n\nvar voc_status = {payload: { value: \"Flüchtige org. Verbindungen\", color: color(alert_voc), text: sprintf(\"%s mg/m³\", format(voc))}};\nvar matter_status = { payload: { value: \"Feinstaub\", color: color(alert_pm), text1: sprintf(\"1,0 µm: %s ppm\", format(m10)), text2: sprintf(\"2,5 µm: %s ppm\", format(m25)), text3: sprintf(\"10 µm: %s ppm\", format(m100))}};\nvar co2_status = { payload: { value: \"CO2\", color: color(alert_co2), text: sprintf(\"%s ppm\", format(co2)) }};\n\nreturn [debug, voc_status, matter_status, co2_status];\n",
        "outputs": 4,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 340,
        "wires": [
            [
                "5616c163.a87f9"
            ],
            [
                "23f6c6bd.14f54a"
            ],
            [
                "236c8c27.2d41a4"
            ],
            [
                "d7d58dae.c7b95"
            ]
        ]
    },
    {
        "id": "17f6ed83131850e6",
        "type": "ui_switch",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "label": "Ampel LEDs",
        "tooltip": "",
        "group": "d796a540.50d378",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 550,
        "y": 480,
        "wires": [
            [
                "e4310ebe0936c844"
            ]
        ]
    },
    {
        "id": "e4310ebe0936c844",
        "type": "mqtt out",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "topic": "luftguetemesser1/switch/enable_leds/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 840,
        "y": 480,
        "wires": []
    },
    {
        "id": "da7b3e59241a1fad",
        "type": "mqtt in",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "topic": "luftguetemesser1/switch/enable_leds/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 480,
        "wires": [
            [
                "17f6ed83131850e6"
            ]
        ]
    },
    {
        "id": "47e21a73dd3c9959",
        "type": "ui_switch",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "label": "Buzzer",
        "tooltip": "",
        "group": "d796a540.50d378",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 540,
        "wires": [
            [
                "5cf8bf94e1af607f"
            ]
        ]
    },
    {
        "id": "5cf8bf94e1af607f",
        "type": "mqtt out",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "topic": "luftguetemesser1/switch/enable_buzzer/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 850,
        "y": 540,
        "wires": []
    },
    {
        "id": "653022af3e8316ed",
        "type": "mqtt in",
        "z": "4fa3b184.bc7fb",
        "name": "",
        "topic": "luftguetemesser1/switch/enable_buzzer/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 290,
        "y": 540,
        "wires": [
            [
                "47e21a73dd3c9959"
            ]
        ]
    },
    {
        "id": "23142344fbf3a2f7",
        "type": "inject",
        "z": "59d7b954e676768e",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "30",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 300,
        "wires": [
            [
                "00e08a79ca2ce0b4"
            ]
        ]
    },
    {
        "id": "d99e941e4f8ab25f",
        "type": "debug",
        "z": "59d7b954e676768e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 140,
        "wires": []
    },
    {
        "id": "ca1cdd1f66d2e89b",
        "type": "ui_template",
        "z": "59d7b954e676768e",
        "group": "69570255a88564b2",
        "name": "1",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "c5510ce75591cbc3",
        "type": "ui_template",
        "z": "59d7b954e676768e",
        "group": "69570255a88564b2",
        "name": "2",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text1}}<br/>{{msg.payload.text2}}<br/>{{msg.payload.text3}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b2322b5222948b72",
        "type": "ui_template",
        "z": "59d7b954e676768e",
        "group": "69570255a88564b2",
        "name": "3",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "479b8a0810c021cb",
        "type": "ui_switch",
        "z": "59d7b954e676768e",
        "name": "",
        "label": "Ampel LEDs",
        "tooltip": "",
        "group": "69570255a88564b2",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 540,
        "wires": [
            [
                "63f21a6d5e10906e"
            ]
        ]
    },
    {
        "id": "63f21a6d5e10906e",
        "type": "mqtt out",
        "z": "59d7b954e676768e",
        "name": "",
        "topic": "luftguetemesser2/switch/enable_leds/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 820,
        "y": 540,
        "wires": []
    },
    {
        "id": "b30af5915352bee5",
        "type": "ui_template",
        "z": "59d7b954e676768e",
        "group": "69570255a88564b2",
        "name": "4",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "00e08a79ca2ce0b4",
        "type": "function",
        "z": "59d7b954e676768e",
        "name": "",
        "func": "const temp = global.get(\"luftguetemesser2-temperature\");\nconst hum = global.get(\"luftguetemesser2-humidity\");\nconst abs_hum = global.get(\"luftguetemesser2-absolute_humidity\");\nconst press = global.get(\"luftguetemesser2-pressure\");\nconst iaq = global.get(\"luftguetemesser2-iaq\");\nconst co2 = global.get(\"luftguetemesser2-co2\");\nconst voc = global.get(\"luftguetemesser2-breath_voc_equivalent\");\nconst m10 = global.get(\"luftguetemesser2-particulate_matter_10m_concentration\");\nconst m25 = global.get(\"luftguetemesser2-particulate_matter_25m_concentration\");\nconst m100 = global.get(\"luftguetemesser2-particulate_matter_100m_concentration\");\nconst formaldehyde = global.get(\"luftguetemesser2-formaldehyde\");\nconst alert_voc = global.get(\"luftguetemesser2-alert_voc\");\nconst alert_co2 = global.get(\"luftguetemesser2-alert_co2\");\nconst alert_pm = global.get(\"luftguetemesser2-alert_pm\");\nconst alert_formaldehyde = global.get(\"luftguetemesser2-alert_formaldehyde\");\n\nvar debug = {\n    temp: temp,\n    hum: hum,\n    abs_hum: abs_hum,\n    press: press,\n    iaq: iaq,\n    co2: co2,\n    voc: voc,\n    m10: m10,\n    m25: m25,\n    m100: m100,\n    formaldehyde: formaldehyde,\n    alert_voc,\n    alert_co2,\n    alert_pm,\n    alert_formaldehyde\n};\n\nconst intl = global.get('intl');\nconst format = intl.NumberFormat('de-De',{style:'decimal', maximumFractionDigits: 2}).format;\nconst sprintf = global.get(\"sprintf\");\n\nfunction color(alert) {\n    return (alert == \"green\") ? \"limegreen\" : alert;\n}\n\nvar voc_status = {payload: { value: \"Flüchtige org. Verbindungen\", color: color(alert_voc), text: sprintf(\"%s mg/m³\", format(voc))}};\nvar matter_status = { payload: { value: \"Feinstaub\", color: color(alert_pm), text1: sprintf(\"1,0 µm: %s ppm\", format(m10)), text2: sprintf(\"2,5 µm: %s ppm\", format(m25)), text3: sprintf(\"10 µm: %s ppm\", format(m100))}};\nvar co2_status = { payload: { value: \"CO2\", color: color(alert_co2), text: sprintf(\"%s ppm\", format(co2)) }};\nvar formaldehyde_status = { payload: { value: \"Formaldehyd\", color: color(alert_formaldehyde), text: sprintf(\"%s µg/m³\", format(formaldehyde)) }};\nvar temp_status = { payload: { value: \"Temperatur\", color: \"white\", text: sprintf(\"%s °C\", format(temp)) }};\nvar hum_status = { payload: { value: \"Rel. Luftfeuchtigkeit\", color: \"white\", text: sprintf(\"%s %%\", format(hum)) }};\nvar abs_hum_status = { payload: { value: \"Abs. Luftfeuchtigkeit\", color: \"white\", text: sprintf(\"%s mg/m³\", format(abs_hum)) }};\nvar press_status = { payload: { value: \"Luftdruck\", color: \"white\", text: sprintf(\"%s µg/m³\", format(press)) }};\n\nreturn [debug, voc_status, matter_status, co2_status, formaldehyde_status, temp_status, hum_status, abs_hum_status, press_status];\n",
        "outputs": 9,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 300,
        "wires": [
            [
                "d99e941e4f8ab25f"
            ],
            [
                "ca1cdd1f66d2e89b"
            ],
            [
                "c5510ce75591cbc3"
            ],
            [
                "b2322b5222948b72"
            ],
            [
                "b30af5915352bee5"
            ],
            [
                "deafacdbd897b3ae"
            ],
            [
                "2478f7a297b80e97"
            ],
            [
                "af4c89378f93543b"
            ],
            [
                "2895804f2def8399"
            ]
        ]
    },
    {
        "id": "6d192d22f48b157a",
        "type": "mqtt in",
        "z": "59d7b954e676768e",
        "name": "",
        "topic": "luftguetemesser2/switch/enable_leds/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 540,
        "wires": [
            [
                "479b8a0810c021cb"
            ]
        ]
    },
    {
        "id": "deafacdbd897b3ae",
        "type": "ui_template",
        "z": "59d7b954e676768e",
        "group": "69570255a88564b2",
        "name": "5",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "2478f7a297b80e97",
        "type": "ui_template",
        "z": "59d7b954e676768e",
        "group": "69570255a88564b2",
        "name": "6",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "af4c89378f93543b",
        "type": "ui_template",
        "z": "59d7b954e676768e",
        "group": "69570255a88564b2",
        "name": "7",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "2895804f2def8399",
        "type": "ui_template",
        "z": "59d7b954e676768e",
        "group": "69570255a88564b2",
        "name": "8",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"value\">{{msg.payload.value}}</p><p>{{msg.payload.text}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 570,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "12ebb575.a874db",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "245ec0f9.12765",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "3825ae1b.6847c2",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "Lüftungsempfehlung",
        "func": "const name = msg.payload.name;\n\nconst temperature = global.get(name + \"-temperature\");\nconst humidity = global.get(name + \"-humidity\");\nconst abs_humidity = global.get(name + \"-absolute_humidity\");\nconst last_abs_humidity_gt_outside_abs_humidity = global.get(name + \"-last_abs_humidity_gt_outside_abs_humidity\");\n// const outside_abs_humidity = global.get(\"aussen-absolute_humidity\");\nconst outside_abs_humidity = global.get(\"steckdose1-absolute_humidity\");\n\nconst room_abs_humidity_gt_outside_abs_humidity = (last_abs_humidity_gt_outside_abs_humidity) ?\n    abs_humidity > outside_abs_humidity * 1.05:\n    abs_humidity > outside_abs_humidity;\n\nglobal.set(name + \"-last_abs_humidity_gt_outside_abs_humidity\", abs_humidity > outside_abs_humidity);\n\nconst intl = global.get('intl');\nconst format = intl.NumberFormat('de-De',{style:'decimal', maximumFractionDigits: 1}).format;\nconst sprintf = global.get(\"sprintf\");\nconst text = sprintf(\"%s °C, %s %% H, %s g/m³\", format(temperature), format(humidity), format(abs_humidity))\n\nvar payload;\nif (room_abs_humidity_gt_outside_abs_humidity) {\n    if (humidity > 65) {\n        payload = {payload: {name: name, color: \"skyblue\", hint: \"Raum feucht. Lüften!\", text: text}};\n    } else {\n        payload = {payload: {name: name, color: \"limegreen\", hint: \"Raum ausreichend trocken.\", text: text}};\n    }\n} else {\n    payload = {payload: {name: name, color: \"red\", hint: \"Draußen zu feucht. Nur kurz lüften!\", text: text}};\n}\n\nconst debug = {\n    name: name,\n    temperature: temperature,\n    humidity: humidity,\n    abs_humidity: abs_humidity,\n    outside_abs_humidity: outside_abs_humidity,\n    last_abs_humidity_gt_outside_abs_humidity: last_abs_humidity_gt_outside_abs_humidity,\n    room_abs_humidity_gt_outside_abs_humidity: room_abs_humidity_gt_outside_abs_humidity,\n    text: text\n};\n\nreturn [payload, debug];\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 560,
        "wires": [
            [
                "dac326a7.c5d638"
            ],
            [
                "755cd8db.bac358"
            ]
        ]
    },
    {
        "id": "89e98409.0b1d08",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "245ec0f9.12765",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "8fc7d555.415c28",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "245ec0f9.12765",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "8f4a8f67.f0316",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "",
        "func": "const hint = msg.payload.hint;\nconst text = msg.payload.text;\n\nconst lh = flow.get(\"lueftungsempfehlungen_hint\") || {};\n\nif (lh != hint) {\n    flow.set(\"lueftungsempfehlungen_hint\", hint);\n    return {payload: `${hint}\\n${text}\\nmehr: http://dipe-pi:1880/ui/#!/7?socketid=xoYPAh22ZP1gOFpmAAAA`};\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 320,
        "wires": [
            [
                "bea87736.5db2d8"
            ]
        ]
    },
    {
        "id": "bea87736.5db2d8",
        "type": "hangoutChatBot",
        "z": "2788b93b.8a2f56",
        "hangoutsCertificate": "10925253.f46f4e",
        "roomid": "spaces/-fp3jQAAAAE",
        "roomname": "spaces/-fp3jQAAAAE",
        "contentproperty": "payload",
        "contenttype": "msg",
        "x": 1020,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "2bf53ce9.7aa234",
        "type": "switch",
        "z": "2788b93b.8a2f56",
        "name": "",
        "property": "payload.name",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "steckdose1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "aussen",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_treppenhaus_keller",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_fahrradkeller",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "waschkueche_luefter",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "luftguetemesser1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_küche",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_speisekammer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_wohnzimmer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_gäste_wc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_bad",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_büro_og",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_schlafzimmer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_ankleidezimmer",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_treppenhaus_dg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_bad_dg",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "luftfeuchtemesser1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "th_schlafzimmer_dg",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 18,
        "x": 1090,
        "y": 520,
        "wires": [
            [
                "5221a0c4.27e25"
            ],
            [
                "cdd93d3e38ae622c"
            ],
            [
                "12ebb575.a874db"
            ],
            [
                "89e98409.0b1d08"
            ],
            [
                "8fc7d555.415c28"
            ],
            [
                "c91d5cbf.ecc24"
            ],
            [
                "740dd7e9.4e3008"
            ],
            [
                "f9ee87ab.ae2d38"
            ],
            [
                "f1e82e9a.000e8"
            ],
            [
                "961cf428.5c8238"
            ],
            [
                "668c6b28.38a1c4"
            ],
            [
                "593cbcc1.6b4944"
            ],
            [
                "4010afc2.28a54"
            ],
            [
                "7ebcce878d52151f"
            ],
            [
                "3c7c9ecf2bc53afe"
            ],
            [
                "b4af6219f2a77569"
            ],
            [
                "33b1161152456aae"
            ],
            [
                "9e24a05859ccbb80"
            ]
        ]
    },
    {
        "id": "c91d5cbf.ecc24",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "245ec0f9.12765",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "740dd7e9.4e3008",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "62f7389128d01483",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "f1e82e9a.000e8",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "62f7389128d01483",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "961cf428.5c8238",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "62f7389128d01483",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "5221a0c4.27e25",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "c64d3ecd133a32df",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "d083875c.561678",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall klima draußen",
        "func": "const name = \"steckdose1\";\n\nconst temperature = global.get(name + \"-temperature\");\nconst humidity = global.get(name + \"-humidity\");\nconst abs_humidity = global.get(name + \"-absolute_humidity\");\nconst last_abs_humidity = global.get(name + \"-last_abs_humidity\");\nglobal.set(name + \"-last_abs_humidity\", abs_humidity);\n\n//node.warn(name)\n//node.warn(temperature)\n//node.warn(humidity)\n//node.warn(abs_humidity)\n//node.warn(last_abs_humidity_gt_outside_abs_humidity)\n//node.warn(outside_abs_humidity)\n\nconst intl = global.get('intl');\nconst format = intl.NumberFormat('de-De',{style:'decimal', maximumFractionDigits: 1}).format;\nconst sprintf = global.get(\"sprintf\");\nconst text = sprintf(\"%s °C, %s %% H, %s g/m³\", format(temperature), format(humidity), format(abs_humidity))\n\nif        (abs_humidity >= 13) {\n    return {payload: {name: name, color: \"deepskyblue\", hint: \"Draußen ist es sehr feucht.\", text: text}};\n} else if (abs_humidity >= 12 && abs_humidity < 13) {\n    return {payload: {name: name, color: \"skyblue\", hint: \"Draußen ist es feucht.\", text: text}};\n} else if (abs_humidity >= 11 && abs_humidity < 12) {\n    return {payload: {name: name, color: \"limegreen\", hint: \"Draußen ist einigermaßen trocken.\", text: text}};\n} else if (abs_humidity < 11) {\n    return {payload: {name: name, color: \"YellowGreen\", hint: \"Draußen ist es trocken.\", text: text}};\n} else {\n    return {payload: {name: name, color: \"DarkSeaGreen\", hint: \"Draußen ist es sehr trocken.\", text: text}};\n}\n\n// if (last_abs_humidity >= 13 && abs_humidity >= 13 ||\n//     last_abs_humidity < 13 && abs_humidity > 13 * 1.10) {\n//     return { payload: { name: name, color: \"deepskyblue\", hint: \"Draußen ist es sehr feucht.\", text: text } };\n// } else if (last_abs_humidity > 13 && abs_humidity < 13 / 1.10 && abs_humidity > 12 ||\n//     last_abs_humidity <= 13 && last_abs_humidity >= 12 && abs_humidity <= 13 && abs_humidity >= 12 ||\n//     last_abs_humidity < 12 && abs_humidity > 12 * 1.10 && abs_humidity < 13) {\n//     return { payload: { name: name, color: \"skyblue\", hint: \"Draußen ist es feucht.\", text: text } };\n// } else if (last_abs_humidity > 12 && abs_humidity < 12 / 1.10 && abs_humidity > 11 ||\n//     last_abs_humidity <= 12 && last_abs_humidity >= 11 && abs_humidity <= 12 && abs_humidity >= 11 ||\n//     last_abs_humidity < 11 && abs_humidity > 11 * 1.10 && abs_humidity < 12) {\n//     return { payload: { name: name, color: \"limegreen\", hint: \"Draußen ist einigermaßen trocken.\", text: text } };\n// } else if (last_abs_humidity > 11 && abs_humidity < 11 / 1.10 ||\n//     last_abs_humidity <= 11 && abs_humidity <= 11) {\n//     return { payload: { name: name, color: \"YellowGreen\", hint: \"Draußen ist es trocken.\", text: text } };\n// } else {\n//     return { payload: { name: name, color: \"DarkSeaGreen\", hint: \"Draußen ist es sehr trocken.\", text: text } };\n// }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 340,
        "wires": [
            [
                "dac326a7.c5d638"
            ]
        ]
    },
    {
        "id": "593cbcc1.6b4944",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "0136f8969e2acd16",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "3fc26a03.2a8a06",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall bad klima",
        "func": "const name = \"th_bad\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 420,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "3bab439b.dca5ec",
        "type": "inject",
        "z": "2788b93b.8a2f56",
        "name": "each 5 minutes",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 540,
        "wires": [
            [
                "3fc26a03.2a8a06",
                "d083875c.561678",
                "19b316c1.d916e9",
                "dc465da3.9f075",
                "1f972c48.e2ab94",
                "f54e3c81.4c057",
                "f477863d.bbbe58",
                "6604bb11.21e7b4",
                "800e50b3.1cd8f",
                "d97bb3fb.f95d7",
                "febd2e38.1a2e1",
                "48f55ed2.c2f68",
                "fe0cab1575d624e5",
                "0b3e08059fd963b5",
                "7359385faca6d84e",
                "0bed57233aab0d43",
                "ffaa1564fff185a6",
                "b8d8ad110ade12f4"
            ]
        ]
    },
    {
        "id": "40d6912.e35a67",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "initialize names-rooms mapping",
        "func": "const room = global.set(\"names_rooms\", {\n    \"luftguetemesser1\": \"Werkstatt\",\n    \"waschkueche_luefter\": \"Waschküche\",\n    \"luftfeuchtemesser1\": \"Büro DG\",\n    \"steckdose1\": \"Balkon\",\n    \"aussen\": \"Open Weather\"\n});\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2fa070d.b96fb9",
        "type": "inject",
        "z": "2788b93b.8a2f56",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "40d6912.e35a67"
            ]
        ]
    },
    {
        "id": "dac326a7.c5d638",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "add room",
        "func": "const name = msg.payload.name;\nconst names_rooms = global.get(\"names_rooms\");\nvar room = names_rooms[name] || name;\nroom = room\n    .replace(/^th_/, '')\n    .split('_')\n    .map(word => (word.charAt(0).toUpperCase() + word.slice(1)).replace('Dg', 'DG').replace('Og', 'OG').replace('Wc', 'WC'))\n    .join(' ');\n\nmsg.payload.room = room;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 520,
        "wires": [
            [
                "2bf53ce9.7aa234"
            ]
        ]
    },
    {
        "id": "19b316c1.d916e9",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall gaeste_wc klima",
        "func": "const name = \"th_gäste_wc\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 460,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "dc465da3.9f075",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall waschkueche_luefter klima",
        "func": "const name = \"waschkueche_luefter\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 500,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "1f972c48.e2ab94",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall fahrradkeller klima",
        "func": "const name = \"th_fahrradkeller\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 540,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "f54e3c81.4c057",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall treppenhaus_keller klima",
        "func": "const name = \"th_treppenhaus_keller\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 580,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "f477863d.bbbe58",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall wohnzimmer klima",
        "func": "const name = \"th_wohnzimmer\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 700,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "6604bb11.21e7b4",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall kueche klima",
        "func": "const name = \"th_küche\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 740,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "800e50b3.1cd8f",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall schlafzimmer klima",
        "func": "const name = \"th_schlafzimmer\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 820,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "febd2e38.1a2e1",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall werkstatt (luftguetemesser1) klima",
        "func": "const name = \"luftguetemesser1\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 660,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "d97bb3fb.f95d7",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall speisekammer klima",
        "func": "const name = \"th_speisekammer\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 780,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "668c6b28.38a1c4",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "0136f8969e2acd16",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 720,
        "wires": [
            []
        ]
    },
    {
        "id": "f9ee87ab.ae2d38",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "62f7389128d01483",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "95ffdad4.8bfbc8",
        "type": "time-of-day",
        "z": "2788b93b.8a2f56",
        "name": "",
        "startTime": "07:30:00",
        "endTime": "23:30:00",
        "outputs": 2,
        "x": 690,
        "y": 340,
        "wires": [
            [
                "8f4a8f67.f0316"
            ],
            [
                "b9dc6788.b603b8"
            ]
        ]
    },
    {
        "id": "b9dc6788.b603b8",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "",
        "func": "flow.set(\"lueftungsempfehlungen_hint\", '');\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "755cd8db.bac358",
        "type": "debug",
        "z": "2788b93b.8a2f56",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 600,
        "wires": []
    },
    {
        "id": "48f55ed2.c2f68",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall Büro DG (luftfeuchtemesser1) klima",
        "func": "const name = \"luftfeuchtemesser1\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "4010afc2.28a54",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "0136f8969e2acd16",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 800,
        "wires": [
            []
        ]
    },
    {
        "id": "fe0cab1575d624e5",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall schlafzimmer dg klima",
        "func": "const name = \"th_schlafzimmer_dg\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 940,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "0b3e08059fd963b5",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall bad dg klima",
        "func": "const name = \"th_bad_dg\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 860,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "7359385faca6d84e",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall büro og klima",
        "func": "const name = \"th_büro_og\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 900,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "7ebcce878d52151f",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "0136f8969e2acd16",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "b4af6219f2a77569",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "f3afb1654d596966",
        "name": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "33b1161152456aae",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "f3afb1654d596966",
        "name": "",
        "order": 3,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "x": 1300,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "0bed57233aab0d43",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall ankleidezimmer klima",
        "func": "const name = \"th_ankleidezimmer\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 980,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "9e24a05859ccbb80",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "f3afb1654d596966",
        "name": "",
        "order": 4,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "ffaa1564fff185a6",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall treppenhaus_dg klima",
        "func": "const name = \"th_treppenhaus_dg\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 620,
        "wires": [
            [
                "3825ae1b.6847c2"
            ]
        ]
    },
    {
        "id": "3c7c9ecf2bc53afe",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "f3afb1654d596966",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "b8d8ad110ade12f4",
        "type": "function",
        "z": "2788b93b.8a2f56",
        "name": "recall klima aussen",
        "func": "const name = \"aussen\";\n\nconst temperature = global.get(name + \"-temperature\");\nconst humidity = global.get(name + \"-humidity\");\nconst abs_humidity = global.get(name + \"-absolute_humidity\");\nconst last_abs_humidity = global.get(name + \"-last_abs_humidity\");\nglobal.set(name + \"-last_abs_humidity\", abs_humidity);\n\n//node.warn(name)\n//node.warn(temperature)\n//node.warn(humidity)\n//node.warn(abs_humidity)\n//node.warn(last_abs_humidity_gt_outside_abs_humidity)\n//node.warn(outside_abs_humidity)\n\nconst intl = global.get('intl');\nconst format = intl.NumberFormat('de-De',{style:'decimal', maximumFractionDigits: 1}).format;\nconst sprintf = global.get(\"sprintf\");\nconst text = sprintf(\"%s °C, %s %% H, %s g/m³\", format(temperature), format(humidity), format(abs_humidity))\n\nif        (abs_humidity >= 13) {\n    return {payload: {name: name, color: \"deepskyblue\", hint: \"Draußen ist es sehr feucht.\", text: text}};\n} else if (abs_humidity >= 12 && abs_humidity < 13) {\n    return {payload: {name: name, color: \"skyblue\", hint: \"Draußen ist es feucht.\", text: text}};\n} else if (abs_humidity >= 11 && abs_humidity < 12) {\n    return {payload: {name: name, color: \"limegreen\", hint: \"Draußen ist einigermaßen trocken.\", text: text}};\n} else if (abs_humidity < 11) {\n    return {payload: {name: name, color: \"YellowGreen\", hint: \"Draußen ist es trocken.\", text: text}};\n} else {\n    return {payload: {name: name, color: \"DarkSeaGreen\", hint: \"Draußen ist es sehr trocken.\", text: text}};\n}\n\n// if (last_abs_humidity >= 13 && abs_humidity >= 13 ||\n//     last_abs_humidity < 13 && abs_humidity > 13 * 1.10) {\n//     return { payload: { name: name, color: \"deepskyblue\", hint: \"Draußen ist es sehr feucht.\", text: text } };\n// } else if (last_abs_humidity > 13 && abs_humidity < 13 / 1.10 && abs_humidity > 12 ||\n//     last_abs_humidity <= 13 && last_abs_humidity >= 12 && abs_humidity <= 13 && abs_humidity >= 12 ||\n//     last_abs_humidity < 12 && abs_humidity > 12 * 1.10 && abs_humidity < 13) {\n//     return { payload: { name: name, color: \"skyblue\", hint: \"Draußen ist es feucht.\", text: text } };\n// } else if (last_abs_humidity > 12 && abs_humidity < 12 / 1.10 && abs_humidity > 11 ||\n//     last_abs_humidity <= 12 && last_abs_humidity >= 11 && abs_humidity <= 12 && abs_humidity >= 11 ||\n//     last_abs_humidity < 11 && abs_humidity > 11 * 1.10 && abs_humidity < 12) {\n//     return { payload: { name: name, color: \"limegreen\", hint: \"Draußen ist einigermaßen trocken.\", text: text } };\n// } else if (last_abs_humidity > 11 && abs_humidity < 11 / 1.10 ||\n//     last_abs_humidity <= 11 && abs_humidity <= 11) {\n//     return { payload: { name: name, color: \"YellowGreen\", hint: \"Draußen ist es trocken.\", text: text } };\n// } else {\n//     return { payload: { name: name, color: \"DarkSeaGreen\", hint: \"Draußen ist es sehr trocken.\", text: text } };\n// }\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 380,
        "wires": [
            [
                "dac326a7.c5d638"
            ]
        ]
    },
    {
        "id": "cdd93d3e38ae622c",
        "type": "ui_template",
        "z": "2788b93b.8a2f56",
        "group": "c64d3ecd133a32df",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "format": "<md-card ui-card-size=\"6x2\" \n    class=\"_md nr-dashboard-text layout-align-center-center nr-dashboard-widget-text visible\" \n    style=\"background-color: {{msg.payload.color}}; color: black; left: 0px; top: 54px; width: 300px; height: 96px;\">\n    <p class=\"label\">{{msg.payload.room}}</p><p>{{msg.payload.text}}</p> <p class=\"value\">{{msg.payload.hint}}</p>\n</md-card>\n",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1300,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "fc831115.7e04a",
        "type": "mqtt in",
        "z": "d0173d54.941d7",
        "name": "",
        "topic": "+/+/+/state",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 160,
        "y": 200,
        "wires": [
            [
                "681998dd.099198"
            ]
        ]
    },
    {
        "id": "faa25f7f.0777",
        "type": "influxdb out",
        "z": "d0173d54.941d7",
        "influxdb": "bf6b9b61f49db1aa",
        "name": "InfluxDB",
        "measurement": "",
        "precision": "",
        "retentionPolicy": "",
        "database": "adh29",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "dipe",
        "bucket": "adh29-forever",
        "x": 1060,
        "y": 380,
        "wires": []
    },
    {
        "id": "681998dd.099198",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "ESPHOME to InfluxDB",
        "func": "const tokens = msg.topic.split(\"/\");\n\nif (tokens[1] == \"debug\") {\n    return;\n}\n\nvar value;\nif(/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?)$/.test(msg.payload)) {\n  value = Number(msg.payload);\n} else {\n  value = msg.payload;\n}\n\nif (value === \"nan\" || value === \"-nan\" || value === undefined || value === null) {\n    return;\n}\n\nconst measurement = tokens[0].replace('-', '_');\n\nmsg.measurement = measurement;\nmsg.payload = {};\nmsg.payload[tokens[2]] = value;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 180,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "6d729e00.24b394",
        "type": "mqtt in",
        "z": "d0173d54.941d7",
        "name": "",
        "topic": "zigbee2mqtt/+",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 180,
        "y": 380,
        "wires": [
            [
                "54e7d479.9e81bc"
            ]
        ]
    },
    {
        "id": "56b0182.c2cb1e8",
        "type": "mqtt in",
        "z": "d0173d54.941d7",
        "name": "",
        "topic": "+/+/+/command",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 180,
        "y": 240,
        "wires": [
            [
                "681998dd.099198"
            ]
        ]
    },
    {
        "id": "fb23ed2a.5d3d1",
        "type": "mqtt in",
        "z": "d0173d54.941d7",
        "name": "",
        "topic": "+/debug",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 160,
        "y": 160,
        "wires": [
            [
                "681998dd.099198"
            ]
        ]
    },
    {
        "id": "9c0d621e.c88d8",
        "type": "mqtt in",
        "z": "d0173d54.941d7",
        "name": "",
        "topic": "+/uptime",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "inputs": 0,
        "x": 160,
        "y": 120,
        "wires": [
            [
                "681998dd.099198"
            ]
        ]
    },
    {
        "id": "7c6e00fe.37756",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "SDL counter to InfluxDB",
        "func": "const value = msg.payload;\nmsg.measurement = \"stromzähler\";\nmsg.payload = {};\nmsg.payload[\"counter\"] = value;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 620,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "e9ca4023.2c05e",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "SDL consumption to InfluxDB",
        "func": "const value = msg.payload;\nmsg.measurement = \"stromzähler\";\nmsg.payload = {};\nmsg.payload[\"consumption\"] = value;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 660,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "cbdd2a4.e9dcad8",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "",
        "links": [
            "8452f01b.9b7a2"
        ],
        "x": 575,
        "y": 620,
        "wires": [
            [
                "7c6e00fe.37756"
            ]
        ]
    },
    {
        "id": "cf2bd5c4.367d88",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "",
        "links": [
            "ea99ed95.a6b5f"
        ],
        "x": 575,
        "y": 660,
        "wires": [
            [
                "e9ca4023.2c05e"
            ]
        ]
    },
    {
        "id": "c464d2a1.b031e",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "",
        "links": [
            "678631ab.fe1bb"
        ],
        "x": 575,
        "y": 760,
        "wires": [
            [
                "18f89cba.858903"
            ]
        ]
    },
    {
        "id": "e94f62b.6a086a",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "",
        "links": [
            "9d0190fe.0d3fe"
        ],
        "x": 575,
        "y": 800,
        "wires": [
            [
                "2e920011.62b1e"
            ]
        ]
    },
    {
        "id": "18f89cba.858903",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "DSL downstream to InfluxDB",
        "func": "var value = msg.payload;\nmsg.payload = {downstream: value};\nmsg.measurement = \"dsl\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 760,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "2e920011.62b1e",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "DSL upstream to InfluxDB",
        "func": "var value = msg.payload;\nmsg.payload = {upstream: value};\nmsg.measurement = \"dsl\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 800,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "d7a58b62.d342b8",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "openweather to InfluxDB",
        "func": "msg.measurement = \"open_weather\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 860,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "9b9574d4.b3d108",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "openweather",
        "links": [
            "8a37748d46ba0dbf"
        ],
        "x": 575,
        "y": 860,
        "wires": [
            [
                "d7a58b62.d342b8"
            ]
        ]
    },
    {
        "id": "4708a180.a07a",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "JSON to InfluxDB",
        "links": [
            "7b4ce70.b1fd818",
            "aa7a4964.384d28",
            "afb0333e.affc6",
            "0f68dc3afdaa2f7f",
            "61153b6e98049a2e",
            "c267a86a9b913165",
            "0a8c64a7ae570888"
        ],
        "x": 575,
        "y": 520,
        "wires": [
            [
                "bc2288b2.755178"
            ]
        ]
    },
    {
        "id": "54e7d479.9e81bc",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "Filter Sensors witch are tracked otherwise",
        "func": "if (!msg.topic.match(/aqara_smart|gas_zaehler/)) {\n    return msg;\n}",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 380,
        "wires": [
            [
                "524badcbb8a30651",
                "94d613200cae66eb"
            ]
        ]
    },
    {
        "id": "bc2288b2.755178",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "JSON to InfluxDB",
        "func": "const tokens = msg.topic.split(\"/\");\nconst measurement = tokens[1] || tokens[0];\nmsg.measurement = measurement.replace(/ /g, '_').toLowerCase();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 520,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "fb1d1c15841f2b0a",
        "type": "mqtt in",
        "z": "d0173d54.941d7",
        "name": "",
        "topic": "shellies/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 320,
        "wires": [
            [
                "46d76dccedcc7776"
            ]
        ]
    },
    {
        "id": "91d756784b44f0df",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "AI on the edge to InfluxDB",
        "func": "const tokens = msg.topic.split(\"/\");\nconst measurement = tokens[0];\nmsg.measurement = measurement.replace(/ /g, '_').toLowerCase();\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 560,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "223c8bb042a5a36b",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "AI on the edge to InfluxDB",
        "links": [
            "b362144e6d02d6d4"
        ],
        "x": 575,
        "y": 560,
        "wires": [
            [
                "91d756784b44f0df"
            ]
        ]
    },
    {
        "id": "e09cb821aca323d1",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "Solarertrag",
        "func": "msg.measurement = \"solarertrag\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 700,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "49152127e918c9d7",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "Einspeisung",
        "links": [
            "4d932a70ca858354",
            "1b836d09c69d552f",
            "e8000a58ec07a97e"
        ],
        "x": 575,
        "y": 700,
        "wires": [
            [
                "e09cb821aca323d1"
            ]
        ]
    },
    {
        "id": "1df2986a56225244",
        "type": "link in",
        "z": "d0173d54.941d7",
        "name": "influxdb",
        "links": [
            "9a213e7f538e9cae"
        ],
        "x": 885,
        "y": 280,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "524badcbb8a30651",
        "type": "debug",
        "z": "d0173d54.941d7",
        "name": "debug 19",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 340,
        "wires": []
    },
    {
        "id": "94d613200cae66eb",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "ZIGBEE2MQTT to InfluxDB",
        "func": "function flattenObject(obj, parentKey = '', result = {}) {\n    for (const [key, value] of Object.entries(obj)) {\n        const newKey = parentKey ? `${parentKey}.${key}` : key; // Schlüssel mit Punkt verknüpfen\n\n        if (Array.isArray(value)) {\n            // Arrays speziell behandeln, Indizes als Schlüssel hinzufügen\n            value.forEach((item, index) => {\n                flattenObject(item, `${newKey}[${index}]`, result);\n            });\n        } else if (typeof value === 'object' && value !== null) {\n            // Rekursion für Sub-Objekte\n            flattenObject(value, newKey, result);\n        } else {\n            // Einfachen Wert dem Ergebnis hinzufügen\n            result[newKey] = value;\n        }\n    }\n    return result;\n}\n\nconst tokens = msg.topic.split(\"/\");\nconst measurement = tokens[1].replace(/ /g, '_').toLowerCase();\nif (/^0x/.test(measurement)) {\n    // Daten (neuer) Devices, die (noch) keinen Namen haben \n    // Tracken wir nicht. \n    return;\n}\n\nmsg.measurement = measurement;\nmsg.payload = flattenObject(msg.payload);;\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 380,
        "wires": [
            [
                "524badcbb8a30651",
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "46d76dccedcc7776",
        "type": "function",
        "z": "d0173d54.941d7",
        "name": "Shellies to Influxdb",
        "func": "function flatItem(base, key, src, dest) {\n     if (typeof src === 'undefined') {\n         return;\n     }\n     const deepKey = base.length ? base + '.' + key : key;\n     // console.log(`base=${base} key=${key} deepKey=${deepKey}`);\n     if (typeof src === 'object') {\n        if (Array.isArray(src)) {\n            src.forEach((val, idx) => flatItem(deepKey, idx, val, dest));\n        } else {\n            Object.entries(src).forEach(([key, val]) => flatItem(deepKey, key, val, dest))\n        }\n     } else if(/^(\\-|\\+)?([0-9]+(\\.[0-9]+)?)$/.test(src)) {\n        dest[deepKey] = Number(src);\n    } else {\n        dest[deepKey] = src;\n     }\n}\n\nif (msg.payload === \"nan\" || msg.payload === undefined || msg.payload === null) {\n    return;\n}\n\nconst tokens = msg.topic.split(\"/\");\nconst measurement = tokens[1].replace(/\\-/g, '_');\n\nlet val = {};\nif (tokens.length > 4 && tokens[2] === \"emeter\") {\n    let L = Number(tokens[3]) + 1;\n    flatItem('', \"L\" + L + \"_\" + tokens[4], msg.payload, val);\n} else {\n    flatItem('', tokens.splice(2).join('.'), msg.payload, val);\n}\nreturn {measurement: measurement, payload: val};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 320,
        "wires": [
            [
                "faa25f7f.0777"
            ]
        ]
    },
    {
        "id": "60ffb0aba571e88d",
        "type": "ui_switch",
        "z": "559aac41a5cf74c4",
        "name": "",
        "label": "1200W",
        "tooltip": "",
        "group": "f4c6c5353740e204",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 460,
        "y": 120,
        "wires": [
            [
                "ae7875fc8d01a17a",
                "6db95c48eb02d3d7",
                "bdf0b95fa9293b45"
            ]
        ]
    },
    {
        "id": "bdf0b95fa9293b45",
        "type": "mqtt out",
        "z": "559aac41a5cf74c4",
        "name": "",
        "topic": "shellies/shellyplug-s-F13595/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "0215ba7d3ea6bbfc",
        "type": "mqtt in",
        "z": "559aac41a5cf74c4",
        "name": "",
        "topic": "shellies/shellyplug-s-F13595/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 220,
        "y": 120,
        "wires": [
            [
                "60ffb0aba571e88d"
            ]
        ]
    },
    {
        "id": "ae7875fc8d01a17a",
        "type": "function",
        "z": "559aac41a5cf74c4",
        "name": "filter on",
        "func": "if (msg.payload === \"on\")\n    return {payload: \"on\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 160,
        "wires": [
            [
                "13d23de0dd6aedb7"
            ]
        ]
    },
    {
        "id": "13d23de0dd6aedb7",
        "type": "trigger",
        "z": "559aac41a5cf74c4",
        "name": "Treppenhausautomat 1h",
        "op1": "",
        "op2": "off",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 870,
        "y": 160,
        "wires": [
            [
                "60ffb0aba571e88d"
            ]
        ]
    },
    {
        "id": "a8db2b8520cacc58",
        "type": "change",
        "z": "559aac41a5cf74c4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 200,
        "wires": [
            [
                "13d23de0dd6aedb7"
            ]
        ]
    },
    {
        "id": "6db95c48eb02d3d7",
        "type": "function",
        "z": "559aac41a5cf74c4",
        "name": "filter off",
        "func": "if (msg.payload === \"off\")\n    return {payload: \"off\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "a8db2b8520cacc58"
            ]
        ]
    },
    {
        "id": "d7da2a2c8f314396",
        "type": "mqtt in",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "nuki/312D447C/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 280,
        "y": 700,
        "wires": [
            [
                "c62a2523e7890790"
            ]
        ]
    },
    {
        "id": "cb816aa78cf4b284",
        "type": "mqtt out",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "nuki/312D447C/lockAction",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 740,
        "y": 520,
        "wires": []
    },
    {
        "id": "734313c33a1a27c9",
        "type": "mqtt in",
        "z": "062848eb6508a3a6",
        "name": "Haustür-Sensor",
        "topic": "zigbee2mqtt/haustuer_sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 400,
        "wires": [
            [
                "de98ccd1624d690c"
            ]
        ]
    },
    {
        "id": "de98ccd1624d690c",
        "type": "change",
        "z": "062848eb6508a3a6",
        "name": "contact",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.contact",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 360,
        "wires": [
            [
                "4b6748b04ea10729"
            ]
        ]
    },
    {
        "id": "4b6748b04ea10729",
        "type": "rbe",
        "z": "062848eb6508a3a6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 590,
        "y": 360,
        "wires": [
            [
                "6f0da61f822045d6",
                "0e0f940aa0f8ed4f"
            ]
        ]
    },
    {
        "id": "6f0da61f822045d6",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "Status-Text",
        "func": "const contact = msg.payload;\n\nreturn { payload: (contact) ? \"geschlossen\" : \"offen\"};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 400,
        "wires": [
            [
                "ed13a185adf220fe"
            ]
        ]
    },
    {
        "id": "ed13a185adf220fe",
        "type": "ui_text",
        "z": "062848eb6508a3a6",
        "group": "40197d5f58592aee",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 910,
        "y": 400,
        "wires": []
    },
    {
        "id": "0ebabd3e81e9917c",
        "type": "ui_button",
        "z": "062848eb6508a3a6",
        "name": "",
        "group": "40197d5f58592aee",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tür öffnen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 250,
        "y": 1040,
        "wires": [
            [
                "651b1e11de589b85"
            ]
        ]
    },
    {
        "id": "5c43c72b9d9fb6f1",
        "type": "ui_text_input",
        "z": "062848eb6508a3a6",
        "name": "",
        "label": "PIN",
        "tooltip": "",
        "group": "40197d5f58592aee",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 230,
        "y": 940,
        "wires": [
            [
                "be64234ed9852c64"
            ]
        ]
    },
    {
        "id": "d121e0d80d05297e",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "Status-Text",
        "func": "const state_name_de = {\n    0: \"uncalibriert\",\n    1: \"verriegelt\",\n    2: \"entriegeln\",\n    3: \"entriegelt\",\n    4: \"verriegeln\",\n    5: \"geöffnet\",\n    6: \"entriegelt und gehen\",\n    7: \"öffnen\",\n    254: \"Motor blockiert\",\n    255: \"undefiniert\"\n}[msg.payload];\n\nreturn ({payload: state_name_de || msg.payload});",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 740,
        "wires": [
            [
                "652ef2c884ce6d6a",
                "0ad338c20d4c7bab"
            ]
        ]
    },
    {
        "id": "652ef2c884ce6d6a",
        "type": "ui_text",
        "z": "062848eb6508a3a6",
        "group": "40197d5f58592aee",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Schloss",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "0e5fa16938990d9d",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "Nuki öffnren",
        "func": "return {payload: 3};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 520,
        "wires": [
            [
                "cb816aa78cf4b284"
            ]
        ]
    },
    {
        "id": "dbe57032c651ca6c",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "Nuki voll verriegeln",
        "func": "// 2 -> Lock\n// 6 -> Full Lock\nreturn {payload: 6};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 600,
        "wires": [
            [
                "01754ad54aa8234a"
            ]
        ]
    },
    {
        "id": "3b97f753674df844",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "Haustür-Sesnsor",
        "mode": "link",
        "links": [
            "39cc2025cd461843"
        ],
        "x": 1135,
        "y": 360,
        "wires": []
    },
    {
        "id": "0e0f940aa0f8ed4f",
        "type": "switch",
        "z": "062848eb6508a3a6",
        "name": "wenn Tür geschlossen",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 780,
        "y": 360,
        "wires": [
            [
                "ca080b84c4fd696b"
            ]
        ]
    },
    {
        "id": "090394706d68b92d",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "Nuki abschließen oder verriegeln",
        "func": "// 2 -> Lock\n// 6 -> Full Lock\nif (new Date().getHours() >= 21 || new Date().getHours() < 7)\n    return {payload: 7}\nelse\n    return {payload: 2};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 560,
        "wires": [
            [
                "cb816aa78cf4b284"
            ]
        ]
    },
    {
        "id": "7bcf60c7730ed56e",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "Nuki aufschließen",
        "func": "return {payload: 1};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 480,
        "wires": [
            [
                "50056ddfb9a03fd5"
            ]
        ]
    },
    {
        "id": "39cc2025cd461843",
        "type": "link in",
        "z": "062848eb6508a3a6",
        "name": "Haustür-Schloss abschließen",
        "links": [
            "3b97f753674df844",
            "544c077ecd16519e"
        ],
        "x": 195,
        "y": 560,
        "wires": [
            [
                "090394706d68b92d"
            ]
        ]
    },
    {
        "id": "49f12f8d291af95b",
        "type": "thingzi-timer",
        "z": "062848eb6508a3a6",
        "name": "Haustür Nachts voll voll verriegeln",
        "lat": "50.882",
        "lon": "6.6949",
        "timerType": "trigger",
        "startupMessage": false,
        "ontype": "tod",
        "ontimesun": "dusk",
        "ontimetod": "21:00",
        "onpropertytype": "msg",
        "onproperty": "payload",
        "onvaluetype": "str",
        "onvalue": "fulllock",
        "onoffset": "",
        "onrandomoffset": false,
        "offtype": "tod",
        "offtimesun": "dawn",
        "offtimetod": "23:00",
        "offpropertytype": "msg",
        "offproperty": "payload",
        "offvaluetype": "str",
        "offvalue": "full lock",
        "offoffset": "",
        "offrandomoffset": false,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 320,
        "y": 840,
        "wires": [
            [
                "cf9843a5f73e34d3",
                "f6acd958aad9453a"
            ]
        ]
    },
    {
        "id": "758b7299542b3d8b",
        "type": "ui_button",
        "z": "062848eb6508a3a6",
        "name": "",
        "group": "40197d5f58592aee",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tür verriegeln",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 260,
        "y": 1000,
        "wires": [
            [
                "44bd1ae85ba6e007"
            ]
        ]
    },
    {
        "id": "b28bfae487f83a15",
        "type": "inject",
        "z": "062848eb6508a3a6",
        "name": "true",
        "props": [
            {
                "p": "payload.contact",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "de98ccd1624d690c"
            ]
        ]
    },
    {
        "id": "12e2364ab57036cd",
        "type": "inject",
        "z": "062848eb6508a3a6",
        "name": "false",
        "props": [
            {
                "p": "payload.contact",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 250,
        "y": 360,
        "wires": [
            [
                "de98ccd1624d690c"
            ]
        ]
    },
    {
        "id": "591dd9edad7d42cc",
        "type": "inject",
        "z": "062848eb6508a3a6",
        "name": "Aufschließen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "7db73223e8adca5f"
            ]
        ]
    },
    {
        "id": "b5668a259cdd2f0f",
        "type": "inject",
        "z": "062848eb6508a3a6",
        "name": "Öffnen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "4302ce92e4985b06"
            ]
        ]
    },
    {
        "id": "bcfbed8af5655435",
        "type": "inject",
        "z": "062848eb6508a3a6",
        "name": "Abschließen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 200,
        "wires": [
            [
                "544c077ecd16519e"
            ]
        ]
    },
    {
        "id": "1e867707f37eda1a",
        "type": "inject",
        "z": "062848eb6508a3a6",
        "name": "Voll verriegeln",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 270,
        "y": 240,
        "wires": [
            [
                "376c57b149afbccc"
            ]
        ]
    },
    {
        "id": "96ddcf96bd0f01a9",
        "type": "link in",
        "z": "062848eb6508a3a6",
        "name": "Haustür-Schloss aufschließen",
        "links": [
            "7db73223e8adca5f"
        ],
        "x": 195,
        "y": 480,
        "wires": [
            [
                "7bcf60c7730ed56e"
            ]
        ]
    },
    {
        "id": "986cc7c62e4fcf8c",
        "type": "link in",
        "z": "062848eb6508a3a6",
        "name": "Haustür-Schloss öffnen",
        "links": [
            "4302ce92e4985b06",
            "bf6820b1163f0e66"
        ],
        "x": 195,
        "y": 520,
        "wires": [
            [
                "0e5fa16938990d9d"
            ]
        ]
    },
    {
        "id": "576bc4593d875946",
        "type": "link in",
        "z": "062848eb6508a3a6",
        "name": "Haustür-Schloss voll verriegeln",
        "links": [
            "376c57b149afbccc",
            "44bd1ae85ba6e007",
            "cf9843a5f73e34d3"
        ],
        "x": 195,
        "y": 600,
        "wires": [
            [
                "dbe57032c651ca6c"
            ]
        ]
    },
    {
        "id": "44bd1ae85ba6e007",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 29",
        "mode": "link",
        "links": [
            "576bc4593d875946"
        ],
        "x": 395,
        "y": 1000,
        "wires": []
    },
    {
        "id": "cf9843a5f73e34d3",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 30",
        "mode": "link",
        "links": [
            "576bc4593d875946"
        ],
        "x": 515,
        "y": 820,
        "wires": []
    },
    {
        "id": "7db73223e8adca5f",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 31",
        "mode": "link",
        "links": [
            "96ddcf96bd0f01a9"
        ],
        "x": 395,
        "y": 120,
        "wires": []
    },
    {
        "id": "4302ce92e4985b06",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 32",
        "mode": "link",
        "links": [
            "986cc7c62e4fcf8c"
        ],
        "x": 395,
        "y": 160,
        "wires": []
    },
    {
        "id": "544c077ecd16519e",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 33",
        "mode": "link",
        "links": [
            "39cc2025cd461843"
        ],
        "x": 395,
        "y": 200,
        "wires": []
    },
    {
        "id": "376c57b149afbccc",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 34",
        "mode": "link",
        "links": [
            "576bc4593d875946"
        ],
        "x": 395,
        "y": 240,
        "wires": []
    },
    {
        "id": "64a5b05c05d56e87",
        "type": "mqtt in",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "pinpad-haustuer/pin",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 270,
        "y": 1080,
        "wires": [
            [
                "493b45377f6017c2"
            ]
        ]
    },
    {
        "id": "493b45377f6017c2",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "erlaubte PIN?",
        "func": "let failed_tries = flow.get(\"failed_tries\") || 0;\nif (failed_tries >= 3)\n    return [\n        undefined,\n        undefined,\n        {payload: `3 oder mehr Fehlversuche. Abbruch!`}\n    ]\n\nlet pin = msg.payload.toString();\nif (!/^\\d{4,20}$/.test(pin)) return;\n\nlet list_of_pins = global.get('list_of_pins') || {};\nif (list_of_pins[pin]) {\n    flow.set(\"failed_tries\", 0);\n    return [\n        {payload: ''},\n        {payload: ''},\n        {payload: `Pin \"${list_of_pins[pin]}\" erkannt. Tür öffnen!` }\n    ];\n} else {\n    flow.set(\"failed_tries\", failed_tries + 1);\n\n    return [\n        undefined,\n        undefined,\n        {payload: `Pin ${pin} nicht legitimiert!`}\n    ]\n}\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 1080,
        "wires": [
            [
                "bf6820b1163f0e66"
            ],
            [
                "21d74c775c0dae39"
            ],
            [
                "57980e35b2edeb34",
                "570e427043954d96"
            ]
        ]
    },
    {
        "id": "bf6820b1163f0e66",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 35",
        "mode": "link",
        "links": [
            "986cc7c62e4fcf8c"
        ],
        "x": 855,
        "y": 1040,
        "wires": []
    },
    {
        "id": "e03c33a6dcae1a6c",
        "type": "link in",
        "z": "062848eb6508a3a6",
        "name": "Append to Log",
        "links": [
            "0ad338c20d4c7bab",
            "363702e9d3b9aa0e",
            "57980e35b2edeb34",
            "72f0702ec637f375",
            "fcce69e721063c17"
        ],
        "x": 195,
        "y": 1220,
        "wires": [
            [
                "75f4e5455d83d356",
                "1115534ca85e31f3"
            ]
        ]
    },
    {
        "id": "57980e35b2edeb34",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 38",
        "mode": "link",
        "links": [
            "e03c33a6dcae1a6c"
        ],
        "x": 855,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d997b4091550a66d",
        "type": "ui_text",
        "z": "062848eb6508a3a6",
        "group": "afcbed3b3929b5c2",
        "order": 1,
        "width": "6",
        "height": "6",
        "name": "Log",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 500,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c7fce3451e77c211",
        "type": "ui_button",
        "z": "062848eb6508a3a6",
        "name": "",
        "group": "afcbed3b3929b5c2",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "-",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 250,
        "y": 1260,
        "wires": [
            [
                "0e588db6de9cd341"
            ]
        ]
    },
    {
        "id": "75f4e5455d83d356",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "append to log",
        "func": "const log = flow.get('log') || [];\nconst timestamp = new Date().toLocaleTimeString('de-DE');\nconst new_entry = timestamp + \": \" + msg.payload;\nconst max_length = 10;\n\nlog.push(new_entry);\nif (log.length > max_length) {\n    log.splice(0, log.length - max_length);\n}\nflow.set('log', log);\n\nreturn { payload: log.join(\"<br>\")};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 1220,
        "wires": [
            [
                "d997b4091550a66d"
            ]
        ]
    },
    {
        "id": "0e588db6de9cd341",
        "type": "function",
        "z": "062848eb6508a3a6",
        "name": "clear log",
        "func": "flow.set('log', []);\nreturn {payload: ''};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 1260,
        "wires": [
            [
                "d997b4091550a66d"
            ]
        ]
    },
    {
        "id": "0ad338c20d4c7bab",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 39",
        "mode": "link",
        "links": [
            "e03c33a6dcae1a6c"
        ],
        "x": 755,
        "y": 780,
        "wires": []
    },
    {
        "id": "f6acd958aad9453a",
        "type": "template",
        "z": "062848eb6508a3a6",
        "name": "Log-Nachricht",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Tür voll verriegleln",
        "output": "str",
        "x": 580,
        "y": 860,
        "wires": [
            [
                "fcce69e721063c17"
            ]
        ]
    },
    {
        "id": "fcce69e721063c17",
        "type": "link out",
        "z": "062848eb6508a3a6",
        "name": "link out 40",
        "mode": "link",
        "links": [
            "e03c33a6dcae1a6c"
        ],
        "x": 715,
        "y": 860,
        "wires": []
    },
    {
        "id": "651b1e11de589b85",
        "type": "change",
        "z": "062848eb6508a3a6",
        "name": "flow.pin -> payload.pin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pin",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 460,
        "y": 1040,
        "wires": [
            [
                "493b45377f6017c2"
            ]
        ]
    },
    {
        "id": "be64234ed9852c64",
        "type": "change",
        "z": "062848eb6508a3a6",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 940,
        "wires": [
            [
                "654805311e11f7b0"
            ]
        ]
    },
    {
        "id": "e9d4aee5b8d0b1d3",
        "type": "change",
        "z": "062848eb6508a3a6",
        "name": "clear flow.pin",
        "rules": [
            {
                "t": "set",
                "p": "pin",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 940,
        "wires": [
            [
                "5c43c72b9d9fb6f1"
            ]
        ]
    },
    {
        "id": "c62a2523e7890790",
        "type": "rbe",
        "z": "062848eb6508a3a6",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 470,
        "y": 700,
        "wires": [
            [
                "d121e0d80d05297e",
                "4bd37ec91573856c",
                "38252e61060e0a59"
            ]
        ]
    },
    {
        "id": "654805311e11f7b0",
        "type": "trigger",
        "z": "062848eb6508a3a6",
        "name": "",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 590,
        "y": 940,
        "wires": [
            [
                "e9d4aee5b8d0b1d3"
            ]
        ]
    },
    {
        "id": "570e427043954d96",
        "type": "trigger",
        "z": "062848eb6508a3a6",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 910,
        "y": 1120,
        "wires": [
            [
                "aef4f9b3fb3740da"
            ]
        ]
    },
    {
        "id": "aef4f9b3fb3740da",
        "type": "change",
        "z": "062848eb6508a3a6",
        "name": "Lösche failed_tries",
        "rules": [
            {
                "t": "set",
                "p": "failed_tries",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 1120,
        "wires": [
            []
        ]
    },
    {
        "id": "21d74c775c0dae39",
        "type": "mqtt out",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "pinpad-haustuer/pin",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 940,
        "y": 1080,
        "wires": []
    },
    {
        "id": "1115534ca85e31f3",
        "type": "flogger",
        "z": "062848eb6508a3a6",
        "name": "Haustür",
        "logfile": "hautstuer",
        "inputchoice": "fullmsg",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "8929498a4f6d4a2d",
        "sendpane": "",
        "x": 310,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "ca080b84c4fd696b",
        "type": "delay",
        "z": "062848eb6508a3a6",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1000,
        "y": 360,
        "wires": [
            [
                "3b97f753674df844"
            ]
        ]
    },
    {
        "id": "4bd37ec91573856c",
        "type": "switch",
        "z": "062848eb6508a3a6",
        "name": "wenn Tür verriegelt",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 700,
        "wires": [
            [
                "95140f2733bded5b"
            ]
        ]
    },
    {
        "id": "95140f2733bded5b",
        "type": "mqtt out",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "pinpad-haustuer/beeeep",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 890,
        "y": 700,
        "wires": []
    },
    {
        "id": "38252e61060e0a59",
        "type": "switch",
        "z": "062848eb6508a3a6",
        "name": "wenn Tür offen",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 640,
        "y": 660,
        "wires": [
            [
                "cc5a227a5358cf14"
            ]
        ]
    },
    {
        "id": "cc5a227a5358cf14",
        "type": "mqtt out",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "pinpad-haustuer/beeep",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 890,
        "y": 660,
        "wires": []
    },
    {
        "id": "ec42b37f34f05c92",
        "type": "mqtt in",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "pinpad-haustuer/binary_sensor/button1/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 1340,
        "wires": [
            [
                "24b7f9aa04a0c833"
            ]
        ]
    },
    {
        "id": "d85f7bfb56fc3f13",
        "type": "mqtt in",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "pinpad-haustuer/binary_sensor/button2/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 350,
        "y": 1420,
        "wires": [
            [
                "820bafe3acf224f2"
            ]
        ]
    },
    {
        "id": "3d57f2823ba7175b",
        "type": "mqtt out",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "pinpad-haustuer/switch/relay1/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1080,
        "y": 1340,
        "wires": []
    },
    {
        "id": "7df6141d15f348ea",
        "type": "mqtt out",
        "z": "062848eb6508a3a6",
        "name": "",
        "topic": "pinpad-haustuer/switch/relay2/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1080,
        "y": 1420,
        "wires": []
    },
    {
        "id": "24b7f9aa04a0c833",
        "type": "button-events",
        "z": "062848eb6508a3a6",
        "name": "Klingel",
        "outputs": 2,
        "inputField": "payload",
        "inputFieldType": "msg",
        "outputField": "payload",
        "outputFieldType": "msg",
        "downValue": "ON",
        "downValueType": "str",
        "upValue": "OFF",
        "upValueType": "str",
        "idleValue": "1",
        "buttonEventsConfig": "3dbea5f7117423db",
        "clickedInterval": null,
        "pressedInterval": null,
        "debounceInterval": null,
        "events": [
            {
                "type": "clicked"
            },
            {
                "type": "pressed"
            }
        ],
        "x": 610,
        "y": 1340,
        "wires": [
            [
                "aeed9bccbb37aec3"
            ],
            [
                "592d2e8fffd01543"
            ]
        ]
    },
    {
        "id": "820bafe3acf224f2",
        "type": "button-events",
        "z": "062848eb6508a3a6",
        "name": "Klingel",
        "outputs": 2,
        "inputField": "payload",
        "inputFieldType": "msg",
        "outputField": "payload",
        "outputFieldType": "msg",
        "downValue": "ON",
        "downValueType": "str",
        "upValue": "OFF",
        "upValueType": "str",
        "idleValue": "1",
        "buttonEventsConfig": "3dbea5f7117423db",
        "clickedInterval": null,
        "pressedInterval": null,
        "debounceInterval": null,
        "events": [
            {
                "type": "clicked"
            },
            {
                "type": "pressed"
            }
        ],
        "x": 610,
        "y": 1420,
        "wires": [
            [
                "707912434cc1fd8d"
            ],
            [
                "e40f7f9d7a7d8fa0"
            ]
        ]
    },
    {
        "id": "707912434cc1fd8d",
        "type": "trigger",
        "z": "062848eb6508a3a6",
        "name": "",
        "op1": "ON",
        "op2": "OFF",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 780,
        "y": 1400,
        "wires": [
            [
                "7df6141d15f348ea"
            ]
        ]
    },
    {
        "id": "aeed9bccbb37aec3",
        "type": "trigger",
        "z": "062848eb6508a3a6",
        "name": "",
        "op1": "ON",
        "op2": "OFF",
        "op1type": "str",
        "op2type": "str",
        "duration": "250",
        "extend": false,
        "overrideDelay": false,
        "units": "ms",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 780,
        "y": 1320,
        "wires": [
            [
                "3d57f2823ba7175b"
            ]
        ]
    },
    {
        "id": "592d2e8fffd01543",
        "type": "looptimer",
        "z": "062848eb6508a3a6",
        "duration": "0.7",
        "units": "Second",
        "maxloops": "2",
        "maxtimeout": "1",
        "maxtimeoutunits": "Minute",
        "name": "",
        "x": 790,
        "y": 1360,
        "wires": [
            [
                "3d57f2823ba7175b"
            ],
            []
        ]
    },
    {
        "id": "e40f7f9d7a7d8fa0",
        "type": "looptimer",
        "z": "062848eb6508a3a6",
        "duration": "0.7",
        "units": "Second",
        "maxloops": "2",
        "maxtimeout": "1",
        "maxtimeoutunits": "Minute",
        "name": "",
        "x": 790,
        "y": 1440,
        "wires": [
            [
                "7df6141d15f348ea"
            ],
            []
        ]
    },
    {
        "id": "bdfebaab459003b8",
        "type": "change",
        "z": "caf02dc9a5b73890",
        "name": "contact",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.contact",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 380,
        "wires": [
            [
                "0c61eff541d83ab5"
            ]
        ]
    },
    {
        "id": "0c61eff541d83ab5",
        "type": "rbe",
        "z": "caf02dc9a5b73890",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 570,
        "y": 380,
        "wires": [
            [
                "bde85aeab1b498da",
                "f68826e383344316"
            ]
        ]
    },
    {
        "id": "bde85aeab1b498da",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Status-Text",
        "func": "const contact = msg.payload;\n\nreturn { payload: (contact) ? \"geschlossen\" : \"offen\"};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 420,
        "wires": [
            [
                "fd2ef30f8411f2cc"
            ]
        ]
    },
    {
        "id": "fd2ef30f8411f2cc",
        "type": "ui_text",
        "z": "caf02dc9a5b73890",
        "group": "6e590cb07ba9a85d",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Status",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 890,
        "y": 420,
        "wires": []
    },
    {
        "id": "3eec6b45c3f95d3f",
        "type": "ui_button",
        "z": "caf02dc9a5b73890",
        "name": "",
        "group": "6e590cb07ba9a85d",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tür öffnen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 1060,
        "wires": [
            [
                "584597d05a611aa8"
            ]
        ]
    },
    {
        "id": "877e77a27d1eb54a",
        "type": "ui_text_input",
        "z": "caf02dc9a5b73890",
        "name": "",
        "label": "PIN",
        "tooltip": "",
        "group": "6e590cb07ba9a85d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": "300",
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 210,
        "y": 960,
        "wires": [
            [
                "8b12bba6b189b1e5"
            ]
        ]
    },
    {
        "id": "a827e6196787eee5",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "Haustür-Sesnsor",
        "mode": "link",
        "links": [
            "68510defdfc4e9d1"
        ],
        "x": 1115,
        "y": 380,
        "wires": []
    },
    {
        "id": "f68826e383344316",
        "type": "switch",
        "z": "caf02dc9a5b73890",
        "name": "wenn Tür geschlossen",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 760,
        "y": 380,
        "wires": [
            [
                "c2dd2cdb960f5d20"
            ]
        ]
    },
    {
        "id": "68510defdfc4e9d1",
        "type": "link in",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür-Schloss abschließen",
        "links": [
            "10adf74a0abed3f5",
            "a827e6196787eee5",
            "f049ba3037415baa"
        ],
        "x": 175,
        "y": 620,
        "wires": [
            [
                "c0ca94de26dbe973"
            ]
        ]
    },
    {
        "id": "495d2457f2c1611e",
        "type": "ui_button",
        "z": "caf02dc9a5b73890",
        "name": "",
        "group": "6e590cb07ba9a85d",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tür verriegeln",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 240,
        "y": 1020,
        "wires": [
            [
                "f049ba3037415baa"
            ]
        ]
    },
    {
        "id": "04328df2db4b1b46",
        "type": "inject",
        "z": "caf02dc9a5b73890",
        "name": "true",
        "props": [
            {
                "p": "payload.contact",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "bdfebaab459003b8"
            ]
        ]
    },
    {
        "id": "9fdeefa7e6dceed9",
        "type": "inject",
        "z": "caf02dc9a5b73890",
        "name": "false",
        "props": [
            {
                "p": "payload.contact",
                "v": "true",
                "vt": "bool"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 230,
        "y": 380,
        "wires": [
            [
                "bdfebaab459003b8"
            ]
        ]
    },
    {
        "id": "26a7f9388429a566",
        "type": "inject",
        "z": "caf02dc9a5b73890",
        "name": "Aufschließen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 180,
        "wires": [
            [
                "3515d84560dda4f0"
            ]
        ]
    },
    {
        "id": "59a2687985d1bc9b",
        "type": "inject",
        "z": "caf02dc9a5b73890",
        "name": "Öffnen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "2c598c5ad99362f6"
            ]
        ]
    },
    {
        "id": "f299e803312909bb",
        "type": "inject",
        "z": "caf02dc9a5b73890",
        "name": "Abschließen",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "10adf74a0abed3f5"
            ]
        ]
    },
    {
        "id": "7ee0934261f999ea",
        "type": "link in",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür-Schloss aufschließen",
        "links": [
            "3515d84560dda4f0"
        ],
        "x": 175,
        "y": 500,
        "wires": [
            [
                "4a8ea6e9d9760630"
            ]
        ]
    },
    {
        "id": "276c3158b7e4acb2",
        "type": "link in",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür-Schloss öffnen",
        "links": [
            "2c598c5ad99362f6",
            "6b5343740447d15e"
        ],
        "x": 175,
        "y": 540,
        "wires": [
            [
                "5a6c9f073ce41181",
                "bb7404a891130090"
            ]
        ]
    },
    {
        "id": "f049ba3037415baa",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "link out 42",
        "mode": "link",
        "links": [
            "3e7935e83c23ed28",
            "68510defdfc4e9d1"
        ],
        "x": 375,
        "y": 1020,
        "wires": []
    },
    {
        "id": "3515d84560dda4f0",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "link out 44",
        "mode": "link",
        "links": [
            "7ee0934261f999ea"
        ],
        "x": 375,
        "y": 180,
        "wires": []
    },
    {
        "id": "2c598c5ad99362f6",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "link out 45",
        "mode": "link",
        "links": [
            "276c3158b7e4acb2"
        ],
        "x": 375,
        "y": 220,
        "wires": []
    },
    {
        "id": "10adf74a0abed3f5",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "link out 46",
        "mode": "link",
        "links": [
            "68510defdfc4e9d1"
        ],
        "x": 375,
        "y": 260,
        "wires": []
    },
    {
        "id": "7e4f29adf12f0a96",
        "type": "mqtt in",
        "z": "caf02dc9a5b73890",
        "name": "",
        "topic": "pinpad-kellertuer/pin",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 250,
        "y": 1100,
        "wires": [
            [
                "e36b3f818b946d6e"
            ]
        ]
    },
    {
        "id": "e36b3f818b946d6e",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "erlaubte PIN?",
        "func": "let failed_tries = flow.get(\"failed_tries\") || 0;\nif (failed_tries >= 3)\n    return [\n        undefined,\n        undefined,\n        {payload: `3 oder mehr Fehlversuche. Abbruch!`}\n    ]\n\nlet pin = msg.payload.toString();\nif (!/^\\d{4,20}$/.test(pin)) return;\n\nlet list_of_pins = global.get('list_of_pins') || {};\nif (list_of_pins[pin]) {\n    flow.set(\"failed_tries\", 0);\n    return [\n        {payload: ''},\n        {payload: ''},\n        {payload: `Pin \"${list_of_pins[pin]}\" erkannt. Tür öffnen!` }\n    ];\n} else {\n    flow.set(\"failed_tries\", failed_tries + 1);\n\n    return [\n        undefined,\n        undefined,\n        {payload: `Pin ${pin} nicht legitimiert!`}\n    ]\n}\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 1100,
        "wires": [
            [
                "6b5343740447d15e"
            ],
            [
                "e25b233556b3cfc3"
            ],
            [
                "a962abdf89480ba3",
                "6d68ec3232d69f87"
            ]
        ]
    },
    {
        "id": "6b5343740447d15e",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "link out 48",
        "mode": "link",
        "links": [
            "276c3158b7e4acb2"
        ],
        "x": 835,
        "y": 1060,
        "wires": []
    },
    {
        "id": "a30ad159a4a28a4d",
        "type": "link in",
        "z": "caf02dc9a5b73890",
        "name": "Append to Log",
        "links": [
            "43cf8e0a43dafb50",
            "c3befc822b0fed2f",
            "a962abdf89480ba3",
            "4a981cc39c1487df",
            "c0d2fae70ef47b75",
            "0942f0c2ca6f6725"
        ],
        "x": 175,
        "y": 1240,
        "wires": [
            [
                "6d6d8f5320b56143",
                "54ad738bc49a431a"
            ]
        ]
    },
    {
        "id": "a962abdf89480ba3",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "link out 51",
        "mode": "link",
        "links": [
            "a30ad159a4a28a4d"
        ],
        "x": 835,
        "y": 1180,
        "wires": []
    },
    {
        "id": "20156ba1fdab30f3",
        "type": "ui_text",
        "z": "caf02dc9a5b73890",
        "group": "9f1d2493f3ac9b3c",
        "order": 1,
        "width": "6",
        "height": "6",
        "name": "Log",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 480,
        "y": 1240,
        "wires": []
    },
    {
        "id": "73291a834e8c36e2",
        "type": "ui_button",
        "z": "caf02dc9a5b73890",
        "name": "",
        "group": "9f1d2493f3ac9b3c",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "-",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 230,
        "y": 1280,
        "wires": [
            [
                "bb54335ea9515d53"
            ]
        ]
    },
    {
        "id": "6d6d8f5320b56143",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "append to log",
        "func": "const log = flow.get('log') || [];\nconst timestamp = new Date().toLocaleTimeString('de-DE');\nconst new_entry = timestamp + \": \" + msg.payload;\nconst max_length = 10;\n\nlog.push(new_entry);\nif (log.length > max_length) {\n    log.splice(0, log.length - max_length);\n}\nflow.set('log', log);\n\nreturn { payload: log.join(\"<br>\")};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 1240,
        "wires": [
            [
                "20156ba1fdab30f3"
            ]
        ]
    },
    {
        "id": "bb54335ea9515d53",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "clear log",
        "func": "flow.set('log', []);\nreturn {payload: ''};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1280,
        "wires": [
            [
                "20156ba1fdab30f3"
            ]
        ]
    },
    {
        "id": "43cf8e0a43dafb50",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "link out 52",
        "mode": "link",
        "links": [
            "a30ad159a4a28a4d"
        ],
        "x": 895,
        "y": 800,
        "wires": []
    },
    {
        "id": "584597d05a611aa8",
        "type": "change",
        "z": "caf02dc9a5b73890",
        "name": "flow.pin -> payload.pin",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "pin",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 1060,
        "wires": [
            [
                "e36b3f818b946d6e"
            ]
        ]
    },
    {
        "id": "8b12bba6b189b1e5",
        "type": "change",
        "z": "caf02dc9a5b73890",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 960,
        "wires": [
            [
                "cbbc12229200dfa5"
            ]
        ]
    },
    {
        "id": "a92929c03edfceca",
        "type": "change",
        "z": "caf02dc9a5b73890",
        "name": "clear flow.pin",
        "rules": [
            {
                "t": "set",
                "p": "pin",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 960,
        "wires": [
            [
                "877e77a27d1eb54a"
            ]
        ]
    },
    {
        "id": "49ec7a126061c939",
        "type": "rbe",
        "z": "caf02dc9a5b73890",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 410,
        "y": 720,
        "wires": [
            [
                "32cfa64518fe066e",
                "3f03597363c5298d",
                "ca859f08d83d0787"
            ]
        ]
    },
    {
        "id": "cbbc12229200dfa5",
        "type": "trigger",
        "z": "caf02dc9a5b73890",
        "name": "",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "30",
        "extend": true,
        "overrideDelay": false,
        "units": "s",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 570,
        "y": 960,
        "wires": [
            [
                "a92929c03edfceca"
            ]
        ]
    },
    {
        "id": "6d68ec3232d69f87",
        "type": "trigger",
        "z": "caf02dc9a5b73890",
        "name": "",
        "op1": "",
        "op2": "0",
        "op1type": "nul",
        "op2type": "str",
        "duration": "5",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 890,
        "y": 1140,
        "wires": [
            [
                "bd1acc71ea636bad"
            ]
        ]
    },
    {
        "id": "bd1acc71ea636bad",
        "type": "change",
        "z": "caf02dc9a5b73890",
        "name": "Lösche failed_tries",
        "rules": [
            {
                "t": "set",
                "p": "failed_tries",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1090,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "e25b233556b3cfc3",
        "type": "mqtt out",
        "z": "caf02dc9a5b73890",
        "name": "",
        "topic": "pinpad-kellertuer/pin",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 920,
        "y": 1100,
        "wires": []
    },
    {
        "id": "54ad738bc49a431a",
        "type": "flogger",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür",
        "logfile": "kellertuer",
        "inputchoice": "fullmsg",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "8929498a4f6d4a2d",
        "sendpane": "",
        "x": 290,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "c2dd2cdb960f5d20",
        "type": "delay",
        "z": "caf02dc9a5b73890",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 980,
        "y": 380,
        "wires": [
            [
                "a827e6196787eee5"
            ]
        ]
    },
    {
        "id": "32cfa64518fe066e",
        "type": "switch",
        "z": "caf02dc9a5b73890",
        "name": "wenn Tür verriegelt",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 720,
        "wires": [
            [
                "71235f0d5955ed78"
            ]
        ]
    },
    {
        "id": "71235f0d5955ed78",
        "type": "mqtt out",
        "z": "caf02dc9a5b73890",
        "name": "",
        "topic": "pinpad-kellertuer/beeeep",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 830,
        "y": 720,
        "wires": []
    },
    {
        "id": "3f03597363c5298d",
        "type": "switch",
        "z": "caf02dc9a5b73890",
        "name": "wenn Tür offen",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 580,
        "y": 680,
        "wires": [
            [
                "0bf1db32375b781e"
            ]
        ]
    },
    {
        "id": "0bf1db32375b781e",
        "type": "mqtt out",
        "z": "caf02dc9a5b73890",
        "name": "",
        "topic": "pinpad-kellertuer/beeep",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 830,
        "y": 680,
        "wires": []
    },
    {
        "id": "9a31e61bdad4dcc8",
        "type": "mqtt in",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür-Sensor",
        "topic": "zigbee2mqtt/kellertuer_sensor",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 420,
        "wires": [
            [
                "bdfebaab459003b8"
            ]
        ]
    },
    {
        "id": "5a6c9f073ce41181",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Nuki öffnren",
        "func": "return {payload: 3};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 500,
        "wires": [
            [
                "f1392a64d0781bc6",
                "17f5ac5420321ffc"
            ]
        ]
    },
    {
        "id": "7b33dbde8b47c8c3",
        "type": "mqtt out",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür-Riegel",
        "topic": "nuki/33B5C9E4/lockAction",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 620,
        "y": 600,
        "wires": []
    },
    {
        "id": "c0ca94de26dbe973",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Nuki abschließen",
        "func": "// 2 -> Lock\n// 6 -> Full Lock\nreturn {payload: 2};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 620,
        "wires": [
            [
                "7b33dbde8b47c8c3",
                "f1392a64d0781bc6"
            ]
        ]
    },
    {
        "id": "4a8ea6e9d9760630",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Nuki aufschließen",
        "func": "return {payload: 1};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 540,
        "wires": [
            [
                "f1392a64d0781bc6",
                "7b33dbde8b47c8c3"
            ]
        ]
    },
    {
        "id": "f1392a64d0781bc6",
        "type": "mqtt out",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür-Schloss",
        "topic": "nuki/32AE09F4/lockAction",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 630,
        "y": 520,
        "wires": []
    },
    {
        "id": "bb7404a891130090",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Nuki aufschließen",
        "func": "return {payload: 1};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 580,
        "wires": [
            [
                "7b33dbde8b47c8c3"
            ]
        ]
    },
    {
        "id": "129cafcfd2f9e56b",
        "type": "mqtt in",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür-Schloss",
        "topic": "nuki/32AE09F4/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 720,
        "wires": [
            [
                "49ec7a126061c939"
            ]
        ]
    },
    {
        "id": "7e807761389aca3d",
        "type": "mqtt in",
        "z": "caf02dc9a5b73890",
        "name": "Kellertür-Riegel",
        "topic": "nuki/33B5C9E4/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 840,
        "wires": [
            [
                "7f163ebdf37fa291"
            ]
        ]
    },
    {
        "id": "1b57c1a9404b427d",
        "type": "ui_text",
        "z": "caf02dc9a5b73890",
        "group": "6e590cb07ba9a85d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Schloss",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 780,
        "y": 760,
        "wires": []
    },
    {
        "id": "2eb0752bbf77d892",
        "type": "ui_text",
        "z": "caf02dc9a5b73890",
        "group": "6e590cb07ba9a85d",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Riegel",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 770,
        "y": 840,
        "wires": []
    },
    {
        "id": "90dd6edb647f3b50",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Status-Text",
        "func": "const state_name_de = {\n    0: \"uncalibriert\",\n    1: \"verriegelt\",\n    2: \"entriegeln\",\n    3: \"entriegelt\",\n    4: \"verriegeln\",\n    5: \"geöffnet\",\n    6: \"entriegelt und gehen\",\n    7: \"öffnen\",\n    254: \"Motor blockiert\",\n    255: \"undefiniert\"\n}[msg.payload];\n\nreturn ({payload: state_name_de || msg.payload});",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 840,
        "wires": [
            [
                "2eb0752bbf77d892",
                "05658fe0f6ada402"
            ]
        ]
    },
    {
        "id": "7f163ebdf37fa291",
        "type": "rbe",
        "z": "caf02dc9a5b73890",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 410,
        "y": 840,
        "wires": [
            [
                "90dd6edb647f3b50"
            ]
        ]
    },
    {
        "id": "ca859f08d83d0787",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Status-Text",
        "func": "const state_name_de = {\n    0: \"uncalibriert\",\n    1: \"verriegelt\",\n    2: \"entriegeln\",\n    3: \"entriegelt\",\n    4: \"verriegeln\",\n    5: \"geöffnet\",\n    6: \"entriegelt und gehen\",\n    7: \"öffnen\",\n    254: \"Motor blockiert\",\n    255: \"undefiniert\"\n}[msg.payload];\n\nreturn ({payload: state_name_de || msg.payload});",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 570,
        "y": 760,
        "wires": [
            [
                "1b57c1a9404b427d",
                "d8317f48eacb7f70"
            ]
        ]
    },
    {
        "id": "d8317f48eacb7f70",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Prefix Schloss",
        "func": "return {payload: `Schloss ${msg.payload}`};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 800,
        "wires": [
            [
                "43cf8e0a43dafb50"
            ]
        ]
    },
    {
        "id": "05658fe0f6ada402",
        "type": "function",
        "z": "caf02dc9a5b73890",
        "name": "Prefix Riegel",
        "func": "return {payload: `Riegel ${msg.payload}`};",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 880,
        "wires": [
            [
                "0942f0c2ca6f6725"
            ]
        ]
    },
    {
        "id": "0942f0c2ca6f6725",
        "type": "link out",
        "z": "caf02dc9a5b73890",
        "name": "link out 58",
        "mode": "link",
        "links": [
            "a30ad159a4a28a4d"
        ],
        "x": 875,
        "y": 880,
        "wires": []
    },
    {
        "id": "17f5ac5420321ffc",
        "type": "debug",
        "z": "caf02dc9a5b73890",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 480,
        "wires": []
    },
    {
        "id": "affde64f7b6e2b28",
        "type": "ui_button",
        "z": "55309aa5255fcdbf",
        "name": "",
        "group": "873ef7e7ca01f456",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "PIN hinzufügen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 200,
        "y": 440,
        "wires": [
            [
                "5deb2a7e434e6676"
            ]
        ]
    },
    {
        "id": "30fc515c266a6fec",
        "type": "ui_text_input",
        "z": "55309aa5255fcdbf",
        "name": "",
        "label": "Name",
        "tooltip": "",
        "group": "873ef7e7ca01f456",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 250,
        "y": 320,
        "wires": [
            [
                "aa99eb44af9f184a"
            ]
        ]
    },
    {
        "id": "6c56f6ced4ea73d5",
        "type": "ui_text_input",
        "z": "55309aa5255fcdbf",
        "name": "",
        "label": "PIN",
        "tooltip": "",
        "group": "873ef7e7ca01f456",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 250,
        "y": 360,
        "wires": [
            [
                "fb35b2dae815c0ef"
            ]
        ]
    },
    {
        "id": "129e50afe94e920b",
        "type": "ui_button",
        "z": "55309aa5255fcdbf",
        "name": "",
        "group": "873ef7e7ca01f456",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "PIN löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 190,
        "y": 480,
        "wires": [
            [
                "a838261e840e74f5"
            ]
        ]
    },
    {
        "id": "aa99eb44af9f184a",
        "type": "change",
        "z": "55309aa5255fcdbf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "name_to_process",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "fb35b2dae815c0ef",
        "type": "change",
        "z": "55309aa5255fcdbf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pin_to_process",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "4e1bd04bad9e6e8f",
        "type": "function",
        "z": "55309aa5255fcdbf",
        "name": "add pin and name",
        "func": "let master_pin = flow.get('master_pin');\n\nif (master_pin != msg.master_pin) return;\n\nlet name_to_process = flow.get('name_to_process');\nlet pin_to_process = flow.get('pin_to_process');\n\nif (!/^[a-zA-Z0-9_\\\\-äöüÄÖÜß]{4,20}$/.test(name_to_process)) return;\nif (!/^\\d{4,20}$/.test(pin_to_process)) return;\n\nlet list_of_pins = global.get('list_of_pins') || {};\n\nif (list_of_pins[pin_to_process]) return { payload: `PIN existierttbereits für : ${list_of_pins[pin_to_process]}` };\n\nlist_of_pins[pin_to_process] = name_to_process;\nglobal.set('list_of_pins', list_of_pins);\n\nreturn {payload: `Erfolgreich hinzugefügt: \"${name_to_process}\"`};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 440,
        "wires": [
            [
                "40c16885dc5420d8"
            ]
        ]
    },
    {
        "id": "d9a4ad9931118a95",
        "type": "function",
        "z": "55309aa5255fcdbf",
        "name": "delete pin ",
        "func": "let master_pin = flow.get('master_pin');\n\nif (master_pin != msg.master_pin) return;\n\nlet name_to_process = flow.get('name_to_process');\nlet pin_to_process = flow.get('pin_to_process');\nlet list_of_pins = global.get('list_of_pins') || {};\n\nif (list_of_pins[pin_to_process]) {\n    delete list_of_pins[pin_to_process];\n    global.set('list_of_pins', list_of_pins);\n    return {\n        payload: `PIN gelöscht: \"${pin_to_process}\"`};\n}\n\nlet entry = Object.entries(list_of_pins).find(([_, val]) => val === name_to_process);\nif (entry) {\n    delete list_of_pins[entry[0]];\n    global.set('list_of_pins', list_of_pins);\n    return {\n        payload: `PIN gelöscht: \"${name_to_process}\"`};\n}\n\nreturn {payload: `PIN nicht gefunden: \"${name_to_process}\"`};\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 480,
        "wires": [
            [
                "43ea06c6402fd32c"
            ]
        ]
    },
    {
        "id": "f0c4b2b846aea56d",
        "type": "inject",
        "z": "55309aa5255fcdbf",
        "name": "Reset",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "Started!",
        "payloadType": "str",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "0bad203af4cdb527"
            ]
        ]
    },
    {
        "id": "0bad203af4cdb527",
        "type": "function",
        "z": "55309aa5255fcdbf",
        "name": "text",
        "func": "let list_of_pins = global.get('list_of_pins') || {};\nlet entries = Object.values(list_of_pins);\nlet list = \"\"\n\nentries.forEach(val => {\n    list += `<li>${val}</li>`;\n});\n\nreturn {payload: `<ol>${list}</ol>`};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "f881e4e815ab74e2"
            ]
        ]
    },
    {
        "id": "bfdd697db2ac81b8",
        "type": "link in",
        "z": "55309aa5255fcdbf",
        "name": "link in 12",
        "links": [
            "40c16885dc5420d8",
            "43ea06c6402fd32c"
        ],
        "x": 225,
        "y": 200,
        "wires": [
            [
                "0bad203af4cdb527"
            ]
        ]
    },
    {
        "id": "4c6b805e9f131bd1",
        "type": "function",
        "z": "55309aa5255fcdbf",
        "name": "clear list of pins",
        "func": "global.set('list_of_pins', {});\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 120,
        "wires": [
            [
                "0bad203af4cdb527"
            ]
        ]
    },
    {
        "id": "2282b35d139bd90f",
        "type": "inject",
        "z": "55309aa5255fcdbf",
        "name": "Delete All",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "str",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "4c6b805e9f131bd1"
            ]
        ]
    },
    {
        "id": "f881e4e815ab74e2",
        "type": "ui_text",
        "z": "55309aa5255fcdbf",
        "group": "873ef7e7ca01f456",
        "order": 6,
        "width": "6",
        "height": "6",
        "name": "Liste der PINs",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 520,
        "y": 160,
        "wires": []
    },
    {
        "id": "40c16885dc5420d8",
        "type": "link out",
        "z": "55309aa5255fcdbf",
        "name": "link out 55",
        "mode": "link",
        "links": [
            "bfdd697db2ac81b8",
            "f8ee7f5ef6cd2b81",
            "6fe5c02dbc3a7a1f"
        ],
        "x": 695,
        "y": 440,
        "wires": []
    },
    {
        "id": "43ea06c6402fd32c",
        "type": "link out",
        "z": "55309aa5255fcdbf",
        "name": "link out 56",
        "mode": "link",
        "links": [
            "bfdd697db2ac81b8",
            "f8ee7f5ef6cd2b81",
            "6fe5c02dbc3a7a1f"
        ],
        "x": 695,
        "y": 480,
        "wires": []
    },
    {
        "id": "f8ee7f5ef6cd2b81",
        "type": "link in",
        "z": "55309aa5255fcdbf",
        "name": "Append to Log",
        "links": [
            "40c16885dc5420d8",
            "43ea06c6402fd32c"
        ],
        "x": 125,
        "y": 600,
        "wires": [
            [
                "943680c4bb19e17c",
                "4b940630f8ed94da"
            ]
        ]
    },
    {
        "id": "aa61111808d936e3",
        "type": "ui_text",
        "z": "55309aa5255fcdbf",
        "group": "6dc87f2a036e6f15",
        "order": 1,
        "width": "6",
        "height": "6",
        "name": "Log",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "12",
        "color": "#ffffff",
        "x": 430,
        "y": 600,
        "wires": []
    },
    {
        "id": "8ab12d8d96fd1015",
        "type": "ui_button",
        "z": "55309aa5255fcdbf",
        "name": "",
        "group": "6dc87f2a036e6f15",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Log löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "-",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 190,
        "y": 640,
        "wires": [
            [
                "063d96dba6bcebe6"
            ]
        ]
    },
    {
        "id": "943680c4bb19e17c",
        "type": "function",
        "z": "55309aa5255fcdbf",
        "name": "append to log",
        "func": "const log = flow.get('log') || [];\nconst timestamp = new Date().toLocaleTimeString('de-DE');\nconst new_entry = timestamp + \": \" + msg.payload;\nconst max_length = 10;\n\nlog.push(new_entry);\nif (log.length > max_length) {\n    log.splice(0, log.length - max_length);\n}\nflow.set('log', log);\n\nreturn { payload: log.join(\"<br>\")};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 600,
        "wires": [
            [
                "aa61111808d936e3"
            ]
        ]
    },
    {
        "id": "063d96dba6bcebe6",
        "type": "function",
        "z": "55309aa5255fcdbf",
        "name": "clear log",
        "func": "flow.set('log', []);\nreturn {payload: ''};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 640,
        "wires": [
            [
                "aa61111808d936e3"
            ]
        ]
    },
    {
        "id": "37addbde6ffd6ced",
        "type": "function",
        "z": "55309aa5255fcdbf",
        "name": "leer-string",
        "func": "return {topic: \"\", payload: \"\"};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 460,
        "wires": [
            [
                "f01cf0ef2ef3ba95"
            ]
        ]
    },
    {
        "id": "8a688a1d5d915d61",
        "type": "delay",
        "z": "55309aa5255fcdbf",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 900,
        "y": 460,
        "wires": [
            [
                "37addbde6ffd6ced"
            ]
        ]
    },
    {
        "id": "6fe5c02dbc3a7a1f",
        "type": "link in",
        "z": "55309aa5255fcdbf",
        "name": "link in 13",
        "links": [
            "40c16885dc5420d8",
            "43ea06c6402fd32c"
        ],
        "x": 765,
        "y": 460,
        "wires": [
            [
                "8a688a1d5d915d61"
            ]
        ]
    },
    {
        "id": "9b8960836cacdb41",
        "type": "ui_text_input",
        "z": "55309aa5255fcdbf",
        "name": "",
        "label": "Master-PIN",
        "tooltip": "",
        "group": "873ef7e7ca01f456",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 270,
        "y": 280,
        "wires": [
            [
                "935483db9977f12b"
            ]
        ]
    },
    {
        "id": "935483db9977f12b",
        "type": "change",
        "z": "55309aa5255fcdbf",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "master_pin",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 480,
        "y": 280,
        "wires": [
            [
                "f83513cb1b062e99"
            ]
        ]
    },
    {
        "id": "5deb2a7e434e6676",
        "type": "credentials",
        "z": "55309aa5255fcdbf",
        "name": "PIN",
        "props": [
            {
                "value": "master_pin",
                "type": "msg"
            }
        ],
        "x": 370,
        "y": 440,
        "wires": [
            [
                "4e1bd04bad9e6e8f"
            ]
        ]
    },
    {
        "id": "a838261e840e74f5",
        "type": "credentials",
        "z": "55309aa5255fcdbf",
        "name": "PIN",
        "props": [
            {
                "value": "master_pin",
                "type": "msg"
            }
        ],
        "x": 370,
        "y": 480,
        "wires": [
            [
                "d9a4ad9931118a95"
            ]
        ]
    },
    {
        "id": "f01cf0ef2ef3ba95",
        "type": "link out",
        "z": "55309aa5255fcdbf",
        "name": "link out 57",
        "mode": "link",
        "links": [
            "6c23d9367dac5a53"
        ],
        "x": 1195,
        "y": 460,
        "wires": []
    },
    {
        "id": "6c23d9367dac5a53",
        "type": "link in",
        "z": "55309aa5255fcdbf",
        "name": "link in 14",
        "links": [
            "f01cf0ef2ef3ba95"
        ],
        "x": 135,
        "y": 340,
        "wires": [
            [
                "30fc515c266a6fec",
                "6c56f6ced4ea73d5"
            ]
        ]
    },
    {
        "id": "55d8f6e6ca5fe562",
        "type": "change",
        "z": "55309aa5255fcdbf",
        "name": "clear flow.pin",
        "rules": [
            {
                "t": "set",
                "p": "master_pin",
                "pt": "flow",
                "to": "",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 870,
        "y": 280,
        "wires": [
            [
                "9b8960836cacdb41"
            ]
        ]
    },
    {
        "id": "f83513cb1b062e99",
        "type": "trigger",
        "z": "55309aa5255fcdbf",
        "name": "",
        "op1": "",
        "op2": "true",
        "op1type": "nul",
        "op2type": "bool",
        "duration": "1",
        "extend": true,
        "overrideDelay": false,
        "units": "min",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 690,
        "y": 280,
        "wires": [
            [
                "55d8f6e6ca5fe562"
            ]
        ]
    },
    {
        "id": "4b940630f8ed94da",
        "type": "flogger",
        "z": "55309aa5255fcdbf",
        "name": "Pins",
        "logfile": "pins",
        "inputchoice": "fullmsg",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "8929498a4f6d4a2d",
        "sendpane": "",
        "x": 230,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6ee15c4384f6b44d",
        "type": "mqtt in",
        "z": "cd1e0b0c87b3c825",
        "name": "Zigbee Devices",
        "topic": "zigbee2mqtt/#",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 140,
        "y": 280,
        "wires": [
            [
                "531a80a94861426e"
            ]
        ]
    },
    {
        "id": "531a80a94861426e",
        "type": "function",
        "z": "cd1e0b0c87b3c825",
        "name": "update device",
        "func": "const battery_level = msg.payload.battery\nif (!battery_level) return;\n\nconst device_name = msg.topic.split(\"/\")[1];\nconst devices = flow.get('devices') || {} ;\n\nconst device = devices[device_name] || {};\nconst update = {};\nupdate.name = device_name;\nupdate.battery_level = battery_level;\nupdate.last_seen = Date.now();\n\n//if (device.battery_level == update.battery_level) return;\n\ndevices[device_name] = update;\nflow.set('devices', devices);\n\nmsg.payload = device;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 280,
        "wires": [
            [
                "6908030a548bf71b",
                "620edec60bc276d1",
                "090e6e925f835a4e"
            ]
        ]
    },
    {
        "id": "620edec60bc276d1",
        "type": "function",
        "z": "cd1e0b0c87b3c825",
        "name": "filter low battery",
        "func": "const devices = flow.get('devices') || {};\nconst lowest_battery = Object.values(devices).filter((device) => device.battery_level !== undefined).sort((a, b) => (a.battery_level > b.battery_level) ? 1 : -1).slice(0, 16);\n\nreturn {\n    payload: lowest_battery.map(\n        (device) => `${device.battery_level}\\%:${device.name}`).join(\"<br>\")\n};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 260,
        "wires": [
            [
                "0b7a2cf066d51efe"
            ]
        ]
    },
    {
        "id": "0b7a2cf066d51efe",
        "type": "ui_text",
        "z": "cd1e0b0c87b3c825",
        "group": "fb88c1d7fb2d5bc7",
        "order": 6,
        "width": "6",
        "height": "8",
        "name": "Log",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 260,
        "wires": []
    },
    {
        "id": "7511140e9ea85182",
        "type": "ui_text",
        "z": "cd1e0b0c87b3c825",
        "group": "b6281cf3b645a6ba",
        "order": 1,
        "width": "6",
        "height": "6",
        "name": "Log",
        "label": "{{msg.payload}}",
        "format": "",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 790,
        "y": 300,
        "wires": []
    },
    {
        "id": "6908030a548bf71b",
        "type": "debug",
        "z": "cd1e0b0c87b3c825",
        "name": "debug 10",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 220,
        "wires": []
    },
    {
        "id": "090e6e925f835a4e",
        "type": "function",
        "z": "cd1e0b0c87b3c825",
        "name": "filter long time not seen",
        "func": "const devices = flow.get('devices') || {};\n\nconst long_time_not_seen = Object.values(devices).filter((device) => device.last_seen < Date.now() - 86400000).slice(0,16);\n\nreturn {\n    payload: long_time_not_seen.map(\n        (device) => `${device.name}`).join(\"<br>\")\n};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 300,
        "wires": [
            [
                "7511140e9ea85182"
            ]
        ]
    },
    {
        "id": "64f4137349dd9219",
        "type": "ui_button",
        "z": "cd1e0b0c87b3c825",
        "name": "",
        "group": "b6281cf3b645a6ba",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Aus Liste löschen",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 830,
        "y": 380,
        "wires": [
            [
                "34c0342994be6440"
            ]
        ]
    },
    {
        "id": "79573436b9520403",
        "type": "ui_text_input",
        "z": "cd1e0b0c87b3c825",
        "name": "",
        "label": "Gerätename",
        "tooltip": "",
        "group": "b6281cf3b645a6ba",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "93ccfa92508f5e1f"
            ]
        ]
    },
    {
        "id": "93ccfa92508f5e1f",
        "type": "change",
        "z": "cd1e0b0c87b3c825",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "delete_from_seen_devices",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1060,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "34c0342994be6440",
        "type": "function",
        "z": "cd1e0b0c87b3c825",
        "name": "function 34",
        "func": "const devices = flow.get('devices');\nconst delete_from_seen_devices = flow.get('delete_from_seen_devices');\ndelete devices[delete_from_seen_devices];\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 380,
        "wires": [
            [
                "fc981677cf6642bf"
            ]
        ]
    },
    {
        "id": "6fbe191dd2093f9d",
        "type": "function",
        "z": "cd1e0b0c87b3c825",
        "name": "clear data",
        "func": "return({payload: ''});\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 340,
        "wires": [
            [
                "79573436b9520403"
            ]
        ]
    },
    {
        "id": "0354035ff2531b1d",
        "type": "mqtt out",
        "z": "7518cde088588ebe",
        "name": "",
        "topic": "shellies/shellyplug-s-F1414A/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 980,
        "y": 240,
        "wires": []
    },
    {
        "id": "e4832408d8bc234f",
        "type": "ui_switch",
        "z": "7518cde088588ebe",
        "name": "",
        "label": "Geschirrspüler",
        "tooltip": "",
        "group": "59ad78e6b49c46bb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 680,
        "y": 240,
        "wires": [
            [
                "0354035ff2531b1d"
            ]
        ]
    },
    {
        "id": "3ae25ae08b3a6a47",
        "type": "function",
        "z": "7518cde088588ebe",
        "name": "Erkenne Einspeisung",
        "func": "if (msg.payload.einspeisung < -150) \n    return [{ payload: 'on' }, { payload: 'ON' }]\nelse\n    return;\n",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 300,
        "wires": [
            [
                "0354035ff2531b1d"
            ],
            [
                "37d188186ea7cf74"
            ]
        ]
    },
    {
        "id": "6724acbb962f4ea2",
        "type": "ui_switch",
        "z": "7518cde088588ebe",
        "name": "",
        "label": "Waschmaschine",
        "tooltip": "",
        "group": "59ad78e6b49c46bb",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 680,
        "y": 420,
        "wires": [
            [
                "37d188186ea7cf74"
            ]
        ]
    },
    {
        "id": "37d188186ea7cf74",
        "type": "mqtt out",
        "z": "7518cde088588ebe",
        "name": "",
        "topic": "waschkueche-wama/switch/switch15/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 980,
        "y": 420,
        "wires": []
    },
    {
        "id": "8dd66c9be3547aa2",
        "type": "link in",
        "z": "7518cde088588ebe",
        "name": "link in 4",
        "links": [
            "4d932a70ca858354"
        ],
        "x": 475,
        "y": 300,
        "wires": [
            [
                "3ae25ae08b3a6a47"
            ]
        ]
    },
    {
        "id": "d1fe7706369347ca",
        "type": "mqtt in",
        "z": "7518cde088588ebe",
        "name": "",
        "topic": "shellies/shellyplug-s-F1414A/relay/0",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 400,
        "y": 240,
        "wires": [
            [
                "e4832408d8bc234f"
            ]
        ]
    },
    {
        "id": "de0ae44ccc58fbcc",
        "type": "mqtt in",
        "z": "7518cde088588ebe",
        "name": "",
        "topic": "waschkueche-wama/switch/switch15/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 380,
        "y": 420,
        "wires": [
            [
                "6724acbb962f4ea2"
            ]
        ]
    },
    {
        "id": "06a312cef91a3e5a",
        "type": "ui_text",
        "z": "7518cde088588ebe",
        "group": "59ad78e6b49c46bb",
        "order": 1,
        "width": "6",
        "height": "2",
        "name": "Erklärbär",
        "label": "Maschine fertig machen und starten. Dann gleich hier wieder ausschalten. Wird durch Sonne automatsch eingeschaltet. Kommt keine Sonne, wird um 15:00 automatisch gestartet.",
        "format": "",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 680,
        "y": 180,
        "wires": []
    },
    {
        "id": "e423a9123d68207a",
        "type": "thingzi-timer",
        "z": "7518cde088588ebe",
        "name": "",
        "lat": "53.4623",
        "lon": "10.0062",
        "timerType": "onoff",
        "startupMessage": false,
        "ontype": "tod",
        "ontimesun": "dusk",
        "ontimetod": "15:00",
        "onpropertytype": "msg",
        "onproperty": "payload",
        "onvaluetype": "str",
        "onvalue": "on",
        "onoffset": "",
        "onrandomoffset": false,
        "offtype": "tod",
        "offtimesun": "dawn",
        "offtimetod": "",
        "offpropertytype": "msg",
        "offproperty": "payload",
        "offvaluetype": "str",
        "offvalue": "off",
        "offoffset": "",
        "offrandomoffset": false,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 650,
        "y": 340,
        "wires": [
            [
                "0354035ff2531b1d",
                "37d188186ea7cf74"
            ]
        ]
    },
    {
        "id": "76300692c288857b",
        "type": "mqtt out",
        "z": "937c538bb5079218",
        "name": "",
        "topic": "bad/switch/relay1/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 780,
        "y": 120,
        "wires": []
    },
    {
        "id": "c1a08a91ed25445e",
        "type": "mqtt in",
        "z": "937c538bb5079218",
        "name": "",
        "topic": "bad/switch/relay2/state",
        "qos": "0",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 320,
        "y": 240,
        "wires": [
            [
                "8b3aba5983973888",
                "8bbb8be99a554c57",
                "b317151ed3209d71"
            ]
        ]
    },
    {
        "id": "8b3aba5983973888",
        "type": "ui_switch",
        "z": "937c538bb5079218",
        "name": "Deckenlicht",
        "label": "Deckenlicht",
        "tooltip": "",
        "group": "905a9d51a059b04d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 530,
        "y": 220,
        "wires": [
            [
                "e0c1cf24ff2b7e57",
                "b317151ed3209d71"
            ]
        ]
    },
    {
        "id": "e0c1cf24ff2b7e57",
        "type": "mqtt out",
        "z": "937c538bb5079218",
        "name": "",
        "topic": "bad/switch/relay2/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 780,
        "y": 240,
        "wires": []
    },
    {
        "id": "f4c4290da0779ce8",
        "type": "mqtt in",
        "z": "937c538bb5079218",
        "name": "",
        "topic": "bad/switch/relay1/state",
        "qos": "0",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 320,
        "y": 120,
        "wires": [
            [
                "be36acd18194951b",
                "c9d084d9188e034d",
                "b317151ed3209d71"
            ]
        ]
    },
    {
        "id": "be36acd18194951b",
        "type": "ui_switch",
        "z": "937c538bb5079218",
        "name": "Spiegelschrank",
        "label": "Spiegelschrank",
        "tooltip": "",
        "group": "905a9d51a059b04d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 540,
        "y": 140,
        "wires": [
            [
                "76300692c288857b",
                "b317151ed3209d71"
            ]
        ]
    },
    {
        "id": "f8213aca590fd54b",
        "type": "link in",
        "z": "937c538bb5079218",
        "name": "Set Spiegelschrank Bad",
        "links": [
            "d79734f22fc84a48"
        ],
        "x": 605,
        "y": 100,
        "wires": [
            [
                "76300692c288857b",
                "b317151ed3209d71"
            ]
        ]
    },
    {
        "id": "df5496620c19ee43",
        "type": "link in",
        "z": "937c538bb5079218",
        "name": "Set Deckenlicht Bad",
        "links": [
            "5895f61d99a0f697"
        ],
        "x": 585,
        "y": 260,
        "wires": [
            [
                "e0c1cf24ff2b7e57",
                "b317151ed3209d71"
            ]
        ]
    },
    {
        "id": "c9d084d9188e034d",
        "type": "link out",
        "z": "937c538bb5079218",
        "name": "Spiegelschrank state",
        "mode": "link",
        "links": [
            "57cd850ad65917cf"
        ],
        "x": 475,
        "y": 100,
        "wires": []
    },
    {
        "id": "8bbb8be99a554c57",
        "type": "link out",
        "z": "937c538bb5079218",
        "name": "Deckenlicht state",
        "mode": "link",
        "links": [
            "1d5f9e357c8dd2a8"
        ],
        "x": 475,
        "y": 260,
        "wires": []
    },
    {
        "id": "b317151ed3209d71",
        "type": "flogger",
        "z": "937c538bb5079218",
        "name": "",
        "logfile": "bad",
        "inputchoice": "fullmsg",
        "inputobject": "payload",
        "inputobjectType": "msg",
        "inputmoustache": "Recieved payload {{payload}} and topic {{topic}}",
        "loglevel": "INFO",
        "logconfig": "8929498a4f6d4a2d",
        "sendpane": "",
        "x": 580,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b3429e540f297cef",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Deckenlicht",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SWITCH",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 430,
        "y": 1100,
        "wires": [
            [
                "0c6570bcbead3423"
            ]
        ]
    },
    {
        "id": "2e72d1d986ec673c",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Spiegelschranklicht",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SWITCH",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 450,
        "y": 1140,
        "wires": [
            [
                "2393cf90015bc7b9"
            ]
        ]
    },
    {
        "id": "2fc96424f7f1e7ca",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Tizio",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SWITCH",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 550,
        "y": 120,
        "wires": [
            [
                "5f5a6348a13e7ce4"
            ]
        ]
    },
    {
        "id": "2433f38433bac4e5",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Tizio",
        "mode": "link",
        "links": [
            "ccb51c58de1b3ee4",
            "1631c8b0516d3d18",
            "3158fabb72429a4d",
            "6f44eabb6a272d2b",
            "805d0f02d8ec8802"
        ],
        "x": 885,
        "y": 120,
        "wires": []
    },
    {
        "id": "5f5a6348a13e7ce4",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 2",
        "func": "return {payload: msg.payload.powerState == `ON` ? `on` : `off`};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 120,
        "wires": [
            [
                "2433f38433bac4e5"
            ]
        ]
    },
    {
        "id": "0c6570bcbead3423",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 3",
        "func": "return {payload: msg.payload.powerState};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1100,
        "wires": [
            [
                "5895f61d99a0f697"
            ]
        ]
    },
    {
        "id": "2393cf90015bc7b9",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 4",
        "func": "return {payload: msg.payload.powerState};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1140,
        "wires": [
            [
                "d79734f22fc84a48"
            ]
        ]
    },
    {
        "id": "5895f61d99a0f697",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Deckenlicht Bad",
        "mode": "link",
        "links": [
            "df5496620c19ee43"
        ],
        "x": 885,
        "y": 1100,
        "wires": []
    },
    {
        "id": "d79734f22fc84a48",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Spiegelschrank Bad",
        "mode": "link",
        "links": [
            "f8213aca590fd54b"
        ],
        "x": 885,
        "y": 1140,
        "wires": []
    },
    {
        "id": "1ab85ce3a6e41dbe",
        "type": "comment",
        "z": "039a8ad4ab697fb3",
        "name": "Bad",
        "info": "",
        "x": 410,
        "y": 1060,
        "wires": []
    },
    {
        "id": "0b73040658168397",
        "type": "comment",
        "z": "039a8ad4ab697fb3",
        "name": "WoZi",
        "info": "",
        "x": 410,
        "y": 40,
        "wires": []
    },
    {
        "id": "32a8c2dbb3e36cf9",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Helles Licht",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 430,
        "y": 420,
        "wires": [
            [
                "8f26a45044793c96"
            ]
        ]
    },
    {
        "id": "8f26a45044793c96",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 5",
        "func": "return { payload: msg.payload.directive == `Activate` ? 4 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 420,
        "wires": [
            [
                "060501f15b873814"
            ]
        ]
    },
    {
        "id": "060501f15b873814",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Wohnzimmer Szenen",
        "mode": "link",
        "links": [
            "c6ba0a745f4a0cac"
        ],
        "x": 915,
        "y": 500,
        "wires": []
    },
    {
        "id": "1cbde5171b2bb7c4",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Leselicht",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 420,
        "y": 460,
        "wires": [
            [
                "ece9ac680bb8e01f"
            ]
        ]
    },
    {
        "id": "739c0bf7e22d8094",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Gemütlich",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 430,
        "y": 500,
        "wires": [
            [
                "46b2311575ac9336"
            ]
        ]
    },
    {
        "id": "370da55f8ab177a3",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Ambientelicht",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 440,
        "y": 540,
        "wires": [
            [
                "56ed89f4d0ce8cdd"
            ]
        ]
    },
    {
        "id": "df90269d9b306a17",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Aus",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 410,
        "y": 580,
        "wires": [
            [
                "02a579ca16743c65"
            ]
        ]
    },
    {
        "id": "ece9ac680bb8e01f",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 6",
        "func": "return { payload: msg.payload.directive == `Activate` ? 3 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 460,
        "wires": [
            [
                "060501f15b873814"
            ]
        ]
    },
    {
        "id": "46b2311575ac9336",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 7",
        "func": "return { payload: msg.payload.directive == `Activate` ? 2 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 500,
        "wires": [
            [
                "060501f15b873814"
            ]
        ]
    },
    {
        "id": "56ed89f4d0ce8cdd",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 8",
        "func": "return { payload: msg.payload.directive == `Activate` ? 1 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 540,
        "wires": [
            [
                "060501f15b873814"
            ]
        ]
    },
    {
        "id": "02a579ca16743c65",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 9",
        "func": "return { payload: msg.payload.directive == `Activate` ? 0 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 580,
        "wires": [
            [
                "060501f15b873814"
            ]
        ]
    },
    {
        "id": "c254f44086636ef3",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Hell",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 410,
        "y": 820,
        "wires": [
            [
                "8830a458a0850750"
            ]
        ]
    },
    {
        "id": "8830a458a0850750",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 10",
        "func": "return { payload: msg.payload.directive == `Activate` ? 4 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 820,
        "wires": [
            [
                "a2783a2ee8d68470"
            ]
        ]
    },
    {
        "id": "a2783a2ee8d68470",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Wohnzimmer Szenen",
        "mode": "link",
        "links": [
            "444ce93bb8dcb6d7"
        ],
        "x": 935,
        "y": 900,
        "wires": []
    },
    {
        "id": "6b1ed643e8420464",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Normal",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 420,
        "y": 860,
        "wires": [
            [
                "26f630600f00868e"
            ]
        ]
    },
    {
        "id": "f4da058fe8b4659e",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Gemütlich",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 430,
        "y": 900,
        "wires": [
            [
                "89296895128a4586"
            ]
        ]
    },
    {
        "id": "81a51553c17a2e30",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Ambiente",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 420,
        "y": 940,
        "wires": [
            [
                "39d6490ed6573caf"
            ]
        ]
    },
    {
        "id": "b2bcd0e7c2a3f6a0",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Aus",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SCENE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 410,
        "y": 980,
        "wires": [
            [
                "4d6cff89c3d72c1c"
            ]
        ]
    },
    {
        "id": "26f630600f00868e",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 11",
        "func": "return { payload: msg.payload.directive == `Activate` ? 3 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 860,
        "wires": [
            [
                "a2783a2ee8d68470"
            ]
        ]
    },
    {
        "id": "89296895128a4586",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 12",
        "func": "return { payload: msg.payload.directive == `Activate` ? 2 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 900,
        "wires": [
            [
                "a2783a2ee8d68470"
            ]
        ]
    },
    {
        "id": "39d6490ed6573caf",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 13",
        "func": "return { payload: msg.payload.directive == `Activate` ? 1 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 940,
        "wires": [
            [
                "a2783a2ee8d68470"
            ]
        ]
    },
    {
        "id": "4d6cff89c3d72c1c",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 14",
        "func": "return { payload: msg.payload.directive == `Activate` ? 0 : 0 };",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 980,
        "wires": [
            [
                "a2783a2ee8d68470"
            ]
        ]
    },
    {
        "id": "4cc153dd85dcc5d2",
        "type": "comment",
        "z": "039a8ad4ab697fb3",
        "name": "EssZi",
        "info": "",
        "x": 410,
        "y": 660,
        "wires": []
    },
    {
        "id": "c925e0edfe8a8050",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Esszimmertisch",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "DIMMER_SWITCH",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 440,
        "y": 700,
        "wires": [
            [
                "1991d80aa7a7f9c2"
            ]
        ]
    },
    {
        "id": "9648fe4077632af9",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Esszimmertisch state & brigthness",
        "mode": "link",
        "links": [
            "b99854b9b9143014",
            "b82b7b7fd49c387a"
        ],
        "x": 885,
        "y": 700,
        "wires": []
    },
    {
        "id": "1991d80aa7a7f9c2",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 15",
        "func": "return {payload: {\n    state: msg.payload.powerState,\n    brightness: msg.payload.brightness\n}};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 700,
        "wires": [
            [
                "9648fe4077632af9"
            ]
        ]
    },
    {
        "id": "a8e198ab481e6662",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Klavierlampe",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SWITCH",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 430,
        "y": 200,
        "wires": [
            [
                "4d145d5230f59df9"
            ]
        ]
    },
    {
        "id": "f854ab23be90c932",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Klavierlampe",
        "mode": "link",
        "links": [
            "4bbc2b23.ee06a4"
        ],
        "x": 885,
        "y": 200,
        "wires": []
    },
    {
        "id": "4d145d5230f59df9",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 16",
        "func": "return {payload: { state: msg.payload.powerState }};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 200,
        "wires": [
            [
                "f854ab23be90c932"
            ]
        ]
    },
    {
        "id": "22cd1de9fa65b79c",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Fensterbanklampe",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "DIMMABLE_LIGHT_BULB",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "01144cded3da1e48"
            ]
        ]
    },
    {
        "id": "73ac73c881c9adfd",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Fensterbanklampe",
        "mode": "link",
        "links": [
            "b3586697977851cb",
            "e30a134d.f410a"
        ],
        "x": 885,
        "y": 240,
        "wires": []
    },
    {
        "id": "01144cded3da1e48",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 17",
        "func": "return {\n    payload: {\n        state: msg.payload.powerState,\n        brightness: msg.payload.brightness / 100.0 * 255.0\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 240,
        "wires": [
            [
                "73ac73c881c9adfd"
            ]
        ]
    },
    {
        "id": "f4989606f2db428d",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Tiffany",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "DIMMABLE_LIGHT_BULB",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 410,
        "y": 280,
        "wires": [
            [
                "01ae7ad4c4849d4e"
            ]
        ]
    },
    {
        "id": "19bb7ceb9cdb5b49",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Tiffany",
        "mode": "link",
        "links": [
            "6637cc7f.54ff74"
        ],
        "x": 885,
        "y": 280,
        "wires": []
    },
    {
        "id": "01ae7ad4c4849d4e",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 18",
        "func": "return {\n    payload: {\n        state: msg.payload.powerState,\n        brightness: msg.payload.brightness / 100.0 * 255.0\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 280,
        "wires": [
            [
                "19bb7ceb9cdb5b49"
            ]
        ]
    },
    {
        "id": "22742c389172b85c",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Eckschrank",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SWITCH",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 430,
        "y": 740,
        "wires": [
            [
                "f70ae8f344590d19"
            ]
        ]
    },
    {
        "id": "25f3da8fc4efe2e9",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Eckschrank state",
        "mode": "link",
        "links": [
            "b3906410005a4234"
        ],
        "x": 885,
        "y": 740,
        "wires": []
    },
    {
        "id": "f70ae8f344590d19",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 19",
        "func": "return {payload: msg.payload.powerState == `ON` ? `on` : `off`};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 740,
        "wires": [
            [
                "25f3da8fc4efe2e9"
            ]
        ]
    },
    {
        "id": "3c6eab3b.4539d4",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "doorbell",
        "topic": "doorbell",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "DOORBELL_EVENT_SOURCE",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "x": 840,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "c9e0153d.a8fd58",
        "type": "inject",
        "z": "039a8ad4ab697fb3",
        "name": "pressed",
        "props": [
            {
                "p": "payload.detectionState",
                "v": "DETECTED",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 350,
        "y": 1540,
        "wires": [
            [
                "248691bd.94314e"
            ]
        ]
    },
    {
        "id": "d9afcbd4.52af88",
        "type": "delay",
        "z": "039a8ad4ab697fb3",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "outputs": 1,
        "x": 500,
        "y": 1600,
        "wires": [
            [
                "97c9ad29.a8c97"
            ]
        ]
    },
    {
        "id": "97c9ad29.a8c97",
        "type": "change",
        "z": "039a8ad4ab697fb3",
        "name": "not pressed",
        "rules": [
            {
                "t": "set",
                "p": "payload.detectionState",
                "pt": "msg",
                "to": "NOT_DETECTED",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 1600,
        "wires": [
            [
                "3c6eab3b.4539d4"
            ]
        ]
    },
    {
        "id": "248691bd.94314e",
        "type": "delay",
        "z": "039a8ad4ab697fb3",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "outputs": 1,
        "x": 520,
        "y": 1540,
        "wires": [
            [
                "3c6eab3b.4539d4",
                "d9afcbd4.52af88"
            ]
        ]
    },
    {
        "id": "b4ba7049.d7fe3",
        "type": "comment",
        "z": "039a8ad4ab697fb3",
        "name": "DOORBELL EVENT SOURCE",
        "info": "",
        "x": 420,
        "y": 1420,
        "wires": []
    },
    {
        "id": "29498e9f.887142",
        "type": "comment",
        "z": "039a8ad4ab697fb3",
        "name": "!! please read this note !!",
        "info": "# Doorbell Event Source\n\nAmazon only allows 1 doorbell event every 30 seconds.\n\nAfter 5 seconds the detectionState is set back to NOT_DETECTED. This is necessary in order to force a state change. Otherwise the state will appear as unchanged with the next doorbell event and not get submitted to Alexa.",
        "x": 450,
        "y": 1460,
        "wires": []
    },
    {
        "id": "209c6fbb849fa9e1",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall zwitscherbox temp",
        "func": "const name = \"zwitscherbox-bad\";\nreturn {\n    payload: {\n        tempeature: global.get(`${name}-temperature`),\n        scale: \"CELSIUS\"\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1760,
        "wires": [
            [
                "39d0ed5a4a2610b1"
            ]
        ]
    },
    {
        "id": "0eb224c726380b1e",
        "type": "inject",
        "z": "039a8ad4ab697fb3",
        "name": "each 5 minutes",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "300",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1880,
        "wires": [
            [
                "209c6fbb849fa9e1",
                "951efbb1108fa65a",
                "56f8a2dce80c9f85",
                "373e80950b17be6f",
                "6ace6416e9ad4c03",
                "e62da67cc028139f",
                "65c637a0e349493d",
                "5c27ce2922efed3f",
                "085a6166bf5026af",
                "bba65fb7f5f265e9",
                "8258161a7605af5d",
                "2e0a55198dc2154f",
                "9a6d1d0b1ed6f349",
                "3497e414a5f59e85",
                "bc1e1f4a572a64c8"
            ]
        ]
    },
    {
        "id": "951efbb1108fa65a",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall gaeste_wc klima",
        "func": "const name = \"gaeste_wc\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 1800,
        "wires": [
            []
        ]
    },
    {
        "id": "56f8a2dce80c9f85",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall waschkueche_luefter klima",
        "func": "const name = \"waschkueche_luefter\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 1840,
        "wires": [
            []
        ]
    },
    {
        "id": "373e80950b17be6f",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall fahrradkeller klima",
        "func": "const name = \"fahrradkeller\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "6ace6416e9ad4c03",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall treppenhaus_keller klima",
        "func": "const name = \"treppenhaus_keller\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 1920,
        "wires": [
            []
        ]
    },
    {
        "id": "e62da67cc028139f",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall wozi temp",
        "func": "const name = \"wozi\";\nreturn {\n    payload: {\n        tempeature: global.get(`${name}-temperature`),\n        scale: \"CELSIUS\"\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2000,
        "wires": [
            [
                "277671769b1ed7ea"
            ]
        ]
    },
    {
        "id": "65c637a0e349493d",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall kueche temp",
        "func": "const name = \"kueche\";\nreturn {\n    payload: {\n        tempeature: global.get(`${name}-temperature`),\n        scale: \"CELSIUS\"\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2040,
        "wires": [
            [
                "7712da014cbf6fa1"
            ]
        ]
    },
    {
        "id": "5c27ce2922efed3f",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall schlafzimmer klima",
        "func": "const name = \"schlafzimmer\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 2120,
        "wires": [
            []
        ]
    },
    {
        "id": "bba65fb7f5f265e9",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall werkstatt (luftguetemesser1) klima",
        "func": "const name = \"luftguetemesser1\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 1960,
        "wires": [
            []
        ]
    },
    {
        "id": "085a6166bf5026af",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall speisekammer klima",
        "func": "const name = \"speisekammer\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 2080,
        "wires": [
            []
        ]
    },
    {
        "id": "8258161a7605af5d",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall Büro DG (luftfeuchtemesser1) klima",
        "func": "const name = \"luftfeuchtemesser1\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "2e0a55198dc2154f",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall schlafzimmer dg klima",
        "func": "const name = \"schlafzimmer_dg\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 2240,
        "wires": [
            []
        ]
    },
    {
        "id": "9a6d1d0b1ed6f349",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall bad dg klima",
        "func": "const name = \"bad_dg\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2160,
        "wires": [
            []
        ]
    },
    {
        "id": "3497e414a5f59e85",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall büro og klima",
        "func": "const name = \"büro_og\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 2200,
        "wires": [
            []
        ]
    },
    {
        "id": "bc1e1f4a572a64c8",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "recall Büro DG (luftfeuchtemesser1) klima",
        "func": "const name = \"ankleidezimmer\";\nreturn {\n    payload: {\n        name: name,\n        humidity: global.get(`${name}-humidity`),\n        absolute_humidity: global.get(`${name}-absolute_humidity`),\n        tempeature: global.get(`${name}-temperature`)\n    }\n};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "277671769b1ed7ea",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Wohnzimmer",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "TEMPERATURE_SENSOR",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 770,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "39d0ed5a4a2610b1",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Bad",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "TEMPERATURE_SENSOR",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 750,
        "y": 1760,
        "wires": [
            []
        ]
    },
    {
        "id": "7712da014cbf6fa1",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Küche",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "TEMPERATURE_SENSOR",
        "retrievable": false,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 750,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "b3562d87baf520ec",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 21",
        "func": "const payload = {};\nif (msg.payload.state) {\n    payload.powerState = msg.payload.state;\n};\nif (msg.payload.brightness) {\n    payload.brightness = msg.payload.brightness;\n};\nreturn { payload };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 700,
        "wires": [
            [
                "c925e0edfe8a8050"
            ]
        ]
    },
    {
        "id": "4fe8938b4e6886d5",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Esszimmertisch state & brigthness",
        "links": [
            "4c63a8ea7a44d9d8"
        ],
        "x": 125,
        "y": 700,
        "wires": [
            [
                "b3562d87baf520ec"
            ]
        ]
    },
    {
        "id": "c9e354c7cbf9d4ca",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 22",
        "func": "return { payload: { powerState: msg.payload}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1100,
        "wires": [
            [
                "b3429e540f297cef"
            ]
        ]
    },
    {
        "id": "1d5f9e357c8dd2a8",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Deckenlicht ",
        "links": [
            "8bbb8be99a554c57"
        ],
        "x": 125,
        "y": 1100,
        "wires": [
            [
                "c9e354c7cbf9d4ca"
            ]
        ]
    },
    {
        "id": "57cd850ad65917cf",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Spiegelschrank ",
        "links": [
            "c9d084d9188e034d"
        ],
        "x": 125,
        "y": 1140,
        "wires": [
            [
                "1d55d0664472f1b1"
            ]
        ]
    },
    {
        "id": "1d55d0664472f1b1",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 23",
        "func": "return { payload: { powerState: msg.payload}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1140,
        "wires": [
            [
                "2e72d1d986ec673c"
            ]
        ]
    },
    {
        "id": "e02642cdd10be6e0",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 24",
        "func": "return { payload: { powerState: msg.payload.state}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 740,
        "wires": [
            [
                "22742c389172b85c"
            ]
        ]
    },
    {
        "id": "18bac2eda68eaa32",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Eckschrank state ",
        "links": [
            "28a49ad78b750429"
        ],
        "x": 125,
        "y": 740,
        "wires": [
            [
                "e02642cdd10be6e0"
            ]
        ]
    },
    {
        "id": "086cba5cef2c1358",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Tizio ",
        "links": [
            "5b39c5f2114ceeec",
            "0ed63df895988561",
            "88a124d82c1bfa92",
            "f0f190e5c22765b6"
        ],
        "x": 125,
        "y": 120,
        "wires": [
            [
                "55628f0196be5f3b"
            ]
        ]
    },
    {
        "id": "55628f0196be5f3b",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 25",
        "func": "return { payload: { powerState: msg.payload.output ? 'ON' : 'OFF' }};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 120,
        "wires": [
            [
                "4f8015394cdf3ae6"
            ]
        ]
    },
    {
        "id": "4ef1fd39ce73b242",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Klavierlampe ",
        "links": [
            "cff872e789db0734"
        ],
        "x": 125,
        "y": 200,
        "wires": [
            [
                "e156398f892eddf4"
            ]
        ]
    },
    {
        "id": "e156398f892eddf4",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 26",
        "func": "return { payload: { powerState: msg.payload.state}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 200,
        "wires": [
            [
                "a8e198ab481e6662"
            ]
        ]
    },
    {
        "id": "4b040669774e6723",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Fensterbanklampe ",
        "links": [
            "922ccac0c7046219"
        ],
        "x": 125,
        "y": 240,
        "wires": [
            [
                "6a41ecd96feed5af"
            ]
        ]
    },
    {
        "id": "6a41ecd96feed5af",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 27",
        "func": "const payload = {};\nif (msg.payload.state) {\n    payload.powerState = msg.payload.state;\n};\nif (msg.payload.brightness) {\n    payload.brightness = parseInt(msg.payload.brightness / 255.0 * 100);\n};\nreturn { payload };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 240,
        "wires": [
            [
                "22cd1de9fa65b79c"
            ]
        ]
    },
    {
        "id": "af2e9abc6d919f6e",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Tiffany ",
        "links": [
            "418f4f02f0ac1e08"
        ],
        "x": 125,
        "y": 280,
        "wires": [
            [
                "1399c9856121fe6b"
            ]
        ]
    },
    {
        "id": "1399c9856121fe6b",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 28",
        "func": "const payload = {};\nif (msg.payload.state) {\n    payload.powerState = msg.payload.state;\n};\nif (msg.payload.brightness) {\n    payload.brightness = parseInt(msg.payload.brightness / 255.0 * 100);\n};\nreturn { payload };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 280,
        "wires": [
            [
                "f4989606f2db428d"
            ]
        ]
    },
    {
        "id": "c3a62fe6268dc0be",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Leuchter",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "DIMMABLE_LIGHT_BULB",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 420,
        "y": 320,
        "wires": [
            [
                "888c59c1128e972b"
            ]
        ]
    },
    {
        "id": "f7443f20a538ebdd",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Leuchter",
        "mode": "link",
        "links": [
            "e5d97c3.d1d738"
        ],
        "x": 885,
        "y": 320,
        "wires": []
    },
    {
        "id": "888c59c1128e972b",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 29",
        "func": "return {\n    payload: {\n        state: msg.payload.powerState,\n        brightness: msg.payload.brightness / 100.0 * 255.0\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 320,
        "wires": [
            [
                "f7443f20a538ebdd"
            ]
        ]
    },
    {
        "id": "f29b05b9a7da2ce4",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Leuchter ",
        "links": [
            "49386ad2cbcb1f8f"
        ],
        "x": 125,
        "y": 320,
        "wires": [
            [
                "26026b6957d53499"
            ]
        ]
    },
    {
        "id": "26026b6957d53499",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 30",
        "func": "const payload = {};\nif (msg.payload.state) {\n    payload.powerState = msg.payload.state;\n};\nif (msg.payload.brightness) {\n    payload.brightness = parseInt(msg.payload.brightness / 255.0 * 100);\n};\nreturn { payload };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 320,
        "wires": [
            [
                "c3a62fe6268dc0be"
            ]
        ]
    },
    {
        "id": "4f8015394cdf3ae6",
        "type": "rbe",
        "z": "039a8ad4ab697fb3",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "2fc96424f7f1e7ca"
            ]
        ]
    },
    {
        "id": "2072d6d55c0ddb6d",
        "type": "comment",
        "z": "039a8ad4ab697fb3",
        "name": "filter wg. ShellyPlug...",
        "info": "ShellyPlug sendet Stromverbrauchsdaten. \nDehalb werden viele Nachrichten wiederholt. ",
        "x": 460,
        "y": 80,
        "wires": []
    },
    {
        "id": "f7969a04832b9de0",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Warmwasser",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SWITCH",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 430,
        "y": 1180,
        "wires": [
            [
                "7002bf73826f37fc"
            ]
        ]
    },
    {
        "id": "7002bf73826f37fc",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 32",
        "func": "return {payload: msg.payload.powerState};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1180,
        "wires": [
            [
                "35ae68a760d0d2e2"
            ]
        ]
    },
    {
        "id": "35ae68a760d0d2e2",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Warmwasser",
        "mode": "link",
        "links": [
            "c0c28364952dec04"
        ],
        "x": 885,
        "y": 1180,
        "wires": []
    },
    {
        "id": "0e775ee78efd07c4",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Alexa Warmwasser ",
        "links": [
            "53936a862e9e6c08"
        ],
        "x": 125,
        "y": 1180,
        "wires": [
            [
                "2310086e281e17df"
            ]
        ]
    },
    {
        "id": "2310086e281e17df",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 33",
        "func": "return { payload: { powerState: msg.payload}};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 1180,
        "wires": [
            [
                "f7969a04832b9de0"
            ]
        ]
    },
    {
        "id": "81ae9e3cf87ff918",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Tolomeo ",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "DIMMABLE_LIGHT_BULB",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 420,
        "y": 360,
        "wires": [
            [
                "599cf42073808434"
            ]
        ]
    },
    {
        "id": "cf216420654a94ca",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Tolomeo ",
        "mode": "link",
        "links": [
            "10b5f2f821fb2314",
            "4e9bb1836b5f6237"
        ],
        "x": 885,
        "y": 360,
        "wires": []
    },
    {
        "id": "599cf42073808434",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 35",
        "func": "return {\n    payload: {\n        state: msg.payload.powerState,\n        brightness: msg.payload.brightness / 100.0 * 255.0\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 360,
        "wires": [
            [
                "cf216420654a94ca"
            ]
        ]
    },
    {
        "id": "5f2e9f30beed284b",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Tolomeo ",
        "links": [
            "8bbdb296a860acab",
            "3c21fff88820ba30"
        ],
        "x": 125,
        "y": 360,
        "wires": [
            [
                "32de37f24c07ec7a"
            ]
        ]
    },
    {
        "id": "32de37f24c07ec7a",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 36",
        "func": "const payload = {};\nif (msg.payload.state) {\n    payload.powerState = msg.payload.state;\n};\nif (msg.payload.brightness) {\n    payload.brightness = parseInt(msg.payload.brightness / 255.0 * 100);\n};\nreturn { payload };\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 360,
        "wires": [
            [
                "81ae9e3cf87ff918"
            ]
        ]
    },
    {
        "id": "5e24b6f05b806f22",
        "type": "vsh-virtual-device",
        "z": "039a8ad4ab697fb3",
        "name": "Tizio Standsäule",
        "topic": "",
        "metadata": "",
        "connection": "b425927fca74a6a7",
        "template": "SWITCH",
        "retrievable": true,
        "passthrough": false,
        "diff": false,
        "filter": false,
        "filterTopic": false,
        "plan": "free",
        "x": 580,
        "y": 160,
        "wires": [
            [
                "11882b3ded06f3ae"
            ]
        ]
    },
    {
        "id": "0ef6939b6651ce92",
        "type": "link out",
        "z": "039a8ad4ab697fb3",
        "name": "Tizio",
        "mode": "link",
        "links": [
            "6f44eabb6a272d2b",
            "805d0f02d8ec8802"
        ],
        "x": 885,
        "y": 160,
        "wires": []
    },
    {
        "id": "11882b3ded06f3ae",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 37",
        "func": "return {payload: msg.payload.powerState == `ON` ? `on` : `off`};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 160,
        "wires": [
            [
                "0ef6939b6651ce92"
            ]
        ]
    },
    {
        "id": "d9e6f3ca8e9fc365",
        "type": "link in",
        "z": "039a8ad4ab697fb3",
        "name": "Tizio ",
        "links": [
            "88a124d82c1bfa92",
            "f0f190e5c22765b6"
        ],
        "x": 125,
        "y": 160,
        "wires": [
            [
                "dbd0181e7019cb34"
            ]
        ]
    },
    {
        "id": "dbd0181e7019cb34",
        "type": "function",
        "z": "039a8ad4ab697fb3",
        "name": "function 38",
        "func": "return { payload: { powerState: msg.payload.output ? 'ON' : 'OFF' }};\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 160,
        "wires": [
            [
                "5cbc84c0d02568de"
            ]
        ]
    },
    {
        "id": "5cbc84c0d02568de",
        "type": "rbe",
        "z": "039a8ad4ab697fb3",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "5e24b6f05b806f22"
            ]
        ]
    },
    {
        "id": "ced8ff353af4a0c0",
        "type": "fritz-thermostat",
        "z": "68fa2cc37e97fc23",
        "connection": "c2e6322e.33404",
        "name": "setTempTarget AVM 302 Büro DG",
        "action": "setTempTarget",
        "x": 840,
        "y": 280,
        "wires": [
            [
                "eded24bb1027f7b4"
            ]
        ]
    },
    {
        "id": "a785e5a92f4c9787",
        "type": "ui_dropdown",
        "z": "68fa2cc37e97fc23",
        "name": "Thermostat",
        "label": "Thermostat",
        "tooltip": "",
        "place": "Select option",
        "group": "2a035fef893e8cd2",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "multiple": false,
        "options": [
            {
                "label": "aus",
                "value": "off",
                "type": "str"
            },
            {
                "label": "14,0° C",
                "value": 14,
                "type": "num"
            },
            {
                "label": "16,0° C",
                "value": 16,
                "type": "num"
            },
            {
                "label": "18,0° C",
                "value": 18,
                "type": "num"
            },
            {
                "label": "20,0° C",
                "value": 20,
                "type": "num"
            },
            {
                "label": "20,5° C",
                "value": "20.5",
                "type": "str"
            },
            {
                "label": "21,0° C",
                "value": "21",
                "type": "str"
            },
            {
                "label": "21,5° C",
                "value": "21.5",
                "type": "str"
            },
            {
                "label": "22,0 ° C",
                "value": "22",
                "type": "str"
            },
            {
                "label": "24,5 °C",
                "value": "24,5",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "4df1b9f51433920e"
            ]
        ]
    },
    {
        "id": "60a8d3a1dcdf72cc",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "AIN and new Temp",
        "rules": [
            {
                "t": "set",
                "p": "Temperatur",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "ain",
                "pt": "msg",
                "to": "139790924291",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 280,
        "wires": [
            [
                "ced8ff353af4a0c0"
            ]
        ]
    },
    {
        "id": "a3c903e257f12248",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "label": "Mo.",
        "tooltip": "",
        "group": "2a035fef893e8cd2",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 380,
        "wires": [
            [
                "3b9abc6380ef3910"
            ]
        ]
    },
    {
        "id": "3b9abc6380ef3910",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Montag",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "7c5bfbbfc70d4418",
        "type": "thingzi-timer",
        "z": "68fa2cc37e97fc23",
        "name": "00:00-18:00",
        "lat": "50.882",
        "lon": "6.6949",
        "timerType": "onoff",
        "startupMessage": false,
        "ontype": "tod",
        "ontimesun": "dusk",
        "ontimetod": "04:00",
        "onpropertytype": "msg",
        "onproperty": "payload",
        "onvaluetype": "date",
        "onvalue": "",
        "onoffset": "",
        "onrandomoffset": false,
        "offtype": "tod",
        "offtimesun": "dawn",
        "offtimetod": "17:00",
        "offpropertytype": "msg",
        "offproperty": "payload",
        "offvaluetype": "bool",
        "offvalue": "false",
        "offoffset": "",
        "offrandomoffset": false,
        "mon": true,
        "tue": true,
        "wed": true,
        "thu": true,
        "fri": true,
        "sat": true,
        "sun": true,
        "x": 150,
        "y": 260,
        "wires": [
            [
                "afd265e74d5e2016"
            ]
        ]
    },
    {
        "id": "afd265e74d5e2016",
        "type": "function",
        "z": "68fa2cc37e97fc23",
        "name": "function 39",
        "func": "const timestamp = msg.payload;\nif (timestamp) {\n    const date = new Date(timestamp);\n    const day_of_week_number = date.getDay();\n    const weekdays = [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Sonnabend\"];\n    const day_of_week = weekdays[day_of_week_number];\n    const buerotag = flow.get(day_of_week);\n\n    if (buerotag) {\n        return {payload: 21};\n    }\n}\nreturn { payload: \"off\" };\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 260,
        "wires": [
            [
                "4df1b9f51433920e"
            ]
        ]
    },
    {
        "id": "a7516bd04903328e",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "label": "Di.",
        "tooltip": "",
        "group": "2a035fef893e8cd2",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 420,
        "wires": [
            [
                "d55ed9e3862c0e07"
            ]
        ]
    },
    {
        "id": "d55ed9e3862c0e07",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Dienstag",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "afd2f06838322fa3",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "label": "Mi.",
        "tooltip": "",
        "group": "2a035fef893e8cd2",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 460,
        "wires": [
            [
                "b86c6f0642eb4180"
            ]
        ]
    },
    {
        "id": "b86c6f0642eb4180",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Mittwoch",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "2829345e1ce0934a",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "label": "Do.",
        "tooltip": "",
        "group": "2a035fef893e8cd2",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 500,
        "wires": [
            [
                "8098a63741da6da9"
            ]
        ]
    },
    {
        "id": "8098a63741da6da9",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Donnerstag",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "1278ace3c7fc8b1a",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "label": "Fr.",
        "tooltip": "",
        "group": "2a035fef893e8cd2",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 540,
        "wires": [
            [
                "4b640947fefa371f"
            ]
        ]
    },
    {
        "id": "4b640947fefa371f",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Freitag",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "99682679d929804d",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "label": "Sa.",
        "tooltip": "",
        "group": "2a035fef893e8cd2",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 580,
        "wires": [
            [
                "506e018d06399e9f"
            ]
        ]
    },
    {
        "id": "506e018d06399e9f",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Sonnabend",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "80a864f9b65a6b05",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "label": "So.",
        "tooltip": "",
        "group": "2a035fef893e8cd2",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 530,
        "y": 620,
        "wires": [
            [
                "ad6a51ce171ac8bf"
            ]
        ]
    },
    {
        "id": "ad6a51ce171ac8bf",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "Sonntag",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "84ab5a22037b3f5d",
        "type": "inject",
        "z": "68fa2cc37e97fc23",
        "name": "Boot",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "6538b49e7f341b28",
                "0a854737a7a864fa",
                "34a740e3943c3931",
                "bd3c43b4230d5784",
                "2b031eee6e0adb99",
                "5b3107b181d72a8c",
                "3aededb277467e1d",
                "b0bb85f8cfb08f5c"
            ]
        ]
    },
    {
        "id": "0a854737a7a864fa",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Montag",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 380,
        "wires": [
            [
                "a3c903e257f12248"
            ]
        ]
    },
    {
        "id": "b0bb85f8cfb08f5c",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sonntag",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 620,
        "wires": [
            [
                "80a864f9b65a6b05"
            ]
        ]
    },
    {
        "id": "34a740e3943c3931",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Dienstag",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 420,
        "wires": [
            [
                "a7516bd04903328e"
            ]
        ]
    },
    {
        "id": "bd3c43b4230d5784",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Mittwoch",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "afd2f06838322fa3"
            ]
        ]
    },
    {
        "id": "2b031eee6e0adb99",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Donnerstag",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 500,
        "wires": [
            [
                "2829345e1ce0934a"
            ]
        ]
    },
    {
        "id": "5b3107b181d72a8c",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Freitag",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 540,
        "wires": [
            [
                "1278ace3c7fc8b1a"
            ]
        ]
    },
    {
        "id": "3aededb277467e1d",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Sonnabend",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 580,
        "wires": [
            [
                "99682679d929804d"
            ]
        ]
    },
    {
        "id": "6538b49e7f341b28",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Temperatur",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 300,
        "wires": [
            [
                "4df1b9f51433920e"
            ]
        ]
    },
    {
        "id": "db0969ce5a22edce",
        "type": "ui_text",
        "z": "68fa2cc37e97fc23",
        "group": "2a035fef893e8cd2",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "Heiztage",
        "label": "",
        "format": "Heiztage",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 540,
        "y": 340,
        "wires": []
    },
    {
        "id": "eded24bb1027f7b4",
        "type": "function",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "func": "const status = (msg.payload === \"off\") ? \"off\" : \"on\";\nconst temp = (msg.payload === \"off\" ? 0 : msg.payload);\n\nreturn {\n    topic: \"fritzbox/buero_dg_heizung\",\n    payload: {\n        status: status,\n        target_temperature: temp\n    }\n};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1080,
        "y": 280,
        "wires": [
            [
                "c267a86a9b913165"
            ]
        ]
    },
    {
        "id": "049e69a6ae98e094",
        "type": "fritz-thermostat",
        "z": "68fa2cc37e97fc23",
        "connection": "c2e6322e.33404",
        "name": "getTempTarget AVM 302 Büro DG",
        "action": "getTempTarget",
        "x": 560,
        "y": 180,
        "wires": [
            [
                "a785e5a92f4c9787"
            ]
        ]
    },
    {
        "id": "eeeda847f25ae413",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "AIN",
        "rules": [
            {
                "t": "set",
                "p": "ain",
                "pt": "msg",
                "to": "139790924291",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 180,
        "wires": [
            [
                "049e69a6ae98e094"
            ]
        ]
    },
    {
        "id": "c01ede2fe24c26f2",
        "type": "inject",
        "z": "68fa2cc37e97fc23",
        "name": "each 1 minute",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "60",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "eeeda847f25ae413"
            ]
        ]
    },
    {
        "id": "b0c2185455845eab",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "label": "IR-Heizung",
        "tooltip": "",
        "group": "0c6a4630d4ea781b",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "on",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "off",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 490,
        "y": 740,
        "wires": [
            [
                "da4a469d8344edbb",
                "531910955e8efef5",
                "fb3ddf83da531e33"
            ]
        ]
    },
    {
        "id": "fb3ddf83da531e33",
        "type": "mqtt out",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "topic": "shellies/shellyplug-s-D9D98A/relay/0/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 800,
        "y": 740,
        "wires": []
    },
    {
        "id": "643ce35e172881c8",
        "type": "mqtt in",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "topic": "shellies/shellyplug-s-D9D98A/relay/0",
        "qos": "2",
        "datatype": "auto",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 240,
        "y": 740,
        "wires": [
            [
                "b0c2185455845eab"
            ]
        ]
    },
    {
        "id": "da4a469d8344edbb",
        "type": "function",
        "z": "68fa2cc37e97fc23",
        "name": "filter on",
        "func": "if (msg.payload === \"on\")\n    return {payload: \"on\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 780,
        "wires": [
            [
                "7a5699533a2b6543"
            ]
        ]
    },
    {
        "id": "7a5699533a2b6543",
        "type": "trigger",
        "z": "68fa2cc37e97fc23",
        "name": "Treppenhausautomat 1h",
        "op1": "",
        "op2": "off",
        "op1type": "nul",
        "op2type": "str",
        "duration": "1",
        "extend": false,
        "overrideDelay": false,
        "units": "hr",
        "reset": "",
        "bytopic": "all",
        "topic": "topic",
        "outputs": 1,
        "x": 890,
        "y": 780,
        "wires": [
            [
                "b0c2185455845eab"
            ]
        ]
    },
    {
        "id": "9a609221ad91e84e",
        "type": "change",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "reset",
                "pt": "msg",
                "to": "reset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 860,
        "y": 820,
        "wires": [
            [
                "7a5699533a2b6543"
            ]
        ]
    },
    {
        "id": "531910955e8efef5",
        "type": "function",
        "z": "68fa2cc37e97fc23",
        "name": "filter off",
        "func": "if (msg.payload === \"off\")\n    return {payload: \"off\"}\nelse\n    return undefined;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 820,
        "wires": [
            [
                "9a609221ad91e84e"
            ]
        ]
    },
    {
        "id": "e51fc2733ce2d3f1",
        "type": "mqtt out",
        "z": "68fa2cc37e97fc23",
        "name": "Schreibtischlampe",
        "topic": "zigbee2mqtt/schreibtischlampe_büro_dg/set",
        "qos": "1",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1010,
        "y": 900,
        "wires": []
    },
    {
        "id": "698086a655731764",
        "type": "mqtt in",
        "z": "68fa2cc37e97fc23",
        "name": "Schreibtischlampe",
        "topic": "zigbee2mqtt/schreibtischlampe_büro_dg",
        "qos": "2",
        "datatype": "json",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 130,
        "y": 900,
        "wires": [
            [
                "7fb932d08adf577e",
                "3eb9ed5f264296e4"
            ]
        ]
    },
    {
        "id": "fbb0dddc70dfc84a",
        "type": "ui_switch",
        "z": "68fa2cc37e97fc23",
        "name": "An/Aus",
        "label": "An/Aus",
        "tooltip": "",
        "group": "67d83082d4b43190",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": "true",
        "topic": "",
        "topicType": "str",
        "style": "",
        "onvalue": "{\"state\": \"ON\"}",
        "onvalueType": "json",
        "onicon": "",
        "oncolor": "",
        "offvalue": "{\"state\": \"OFF\"}",
        "offvalueType": "json",
        "officon": "",
        "offcolor": "",
        "animate": true,
        "className": "",
        "x": 500,
        "y": 880,
        "wires": [
            [
                "ab80bfbe92fac945"
            ]
        ]
    },
    {
        "id": "418bb92d0b2c9f87",
        "type": "ui_slider",
        "z": "68fa2cc37e97fc23",
        "name": "Helligkeit",
        "label": "Helligkeit",
        "tooltip": "",
        "group": "67d83082d4b43190",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "outs": "all",
        "topic": "",
        "topicType": "str",
        "min": "4",
        "max": "254",
        "step": "10",
        "className": "",
        "x": 500,
        "y": 920,
        "wires": [
            [
                "0c93e31c66381df1"
            ]
        ]
    },
    {
        "id": "0c93e31c66381df1",
        "type": "function",
        "z": "68fa2cc37e97fc23",
        "name": "brightness",
        "func": "msg.payload = {\"brightness\": msg.payload};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 920,
        "wires": [
            [
                "e51fc2733ce2d3f1"
            ]
        ]
    },
    {
        "id": "7fb932d08adf577e",
        "type": "function",
        "z": "68fa2cc37e97fc23",
        "name": "state",
        "func": "msg.payload = {\"state\": msg.payload.state};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 880,
        "wires": [
            [
                "fbb0dddc70dfc84a"
            ]
        ]
    },
    {
        "id": "3eb9ed5f264296e4",
        "type": "function",
        "z": "68fa2cc37e97fc23",
        "name": "brightness",
        "func": "msg.payload = msg.payload.brightness;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 920,
        "wires": [
            [
                "418bb92d0b2c9f87"
            ]
        ]
    },
    {
        "id": "c267a86a9b913165",
        "type": "link out",
        "z": "68fa2cc37e97fc23",
        "name": "",
        "links": [
            "4708a180.a07a"
        ],
        "x": 1195,
        "y": 280,
        "wires": []
    },
    {
        "id": "6f9b259b00b18baa",
        "type": "debug",
        "z": "68fa2cc37e97fc23",
        "name": "debug 33",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 240,
        "wires": []
    },
    {
        "id": "40f0a03.02d426",
        "type": "function",
        "z": "186ee9b7.78e426",
        "name": "Subscription Manager",
        "func": "let pushSubscriptions = flow.get('pushSubscriptions') || []\n  \nlet result = ''\nlet foundSubscriptionItems = [];\n\n// Determine on which subscriptions the action should be executed\nif (msg.payload.action === 'reset') {\n    // Reset has impact on all subscriptions\n    foundSubscriptionItems = pushSubscriptions;\n}\nelse {\n    // Find all subscriptions for the specified endpoint\n    foundSubscriptionItems = pushSubscriptions.filter( subscriptionItem => {\n        return subscriptionItem.endpoint == msg.payload.endpoint;\n    })\n}\n\nlet totalSubscriptionLength = pushSubscriptions.length;\n  \nswitch (msg.topic) {\n    case 'subscription_new':\n    case 'subscription_existing':\n        var subscription = msg.payload;\n        if (foundSubscriptionItems.length === 0) {\n            pushSubscriptions.push(subscription);\n            result = 'Subscription registered: ' + subscription.endpoint\n        } else {\n            result = 'Subscription was already registered: ' + subscription.endpoint\n        }\n\n        msg.statusCode = 200;\n        break;\n    \n    case 'unsubscription':\n        var unsubscription = msg.payload;\n        if(foundSubscriptionItems.length === 0) {\n            result = 'Subscription was not found: ' + unsubscription.endpoint\n        } else {\n            pushSubscriptions = pushSubscriptions.filter(subscriptionItem => {\n                return subscriptionItem.endpoint !== unsubscription.endpoint\n            })\n            result = 'Subscription unregistered: ' + unsubscription.endpoint\n        }\n    \n        msg.statusCode = 200;\n        break;\n    case 'reset':\n        // All push subscriptions will be removed!!!!!!!!!\n        // Make sure you know what you are doing, because you cannot send notifications to these endpoints anymore!!!!!!!!!\n        pushSubscriptions = [];\n        break;\n    default:\n        result = 'Unsupported action';\n        msg.statusCode = 400;\n}\n\nmsg.payload = { result: result }\n\n// Show the evolution in number of subscriptions\nnode.status({fill:\"green\",shape:\"dot\",text: pushSubscriptions.length + \" subscription (previously \" + totalSubscriptionLength + \")\"});\n\n// Make sure this flow variable in stored in a file, because we still need the subscriptions \n// after a flow restart (otherwise there is no way anymore to push notifications to those clients!!)\nflow.set('pushSubscriptions', pushSubscriptions)\n  \nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "78eccaf6.6f3504",
        "type": "ui_web_push_client",
        "z": "186ee9b7.78e426",
        "group": "b714005ba4818fc0",
        "order": 1,
        "width": 0,
        "height": 0,
        "webPushConfig": "8dc58e15e89f6392",
        "sendSubscription": true,
        "disableButton": false,
        "showTooltip": false,
        "subscribeLabel": "Abbonieren",
        "unsubscribeLabel": "Abbestellen",
        "name": "",
        "x": 240,
        "y": 220,
        "wires": [
            [
                "224ae0be.2ff16"
            ]
        ]
    },
    {
        "id": "224ae0be.2ff16",
        "type": "switch",
        "z": "186ee9b7.78e426",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "subscription_new",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "subscription_existing",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unsubscription",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 410,
        "y": 220,
        "wires": [
            [
                "db2d5103.3b7ed"
            ],
            [
                "40f0a03.02d426",
                "b81732c1.c64cf"
            ],
            [
                "40f0a03.02d426"
            ],
            [
                "40f0a03.02d426",
                "891acbb7.fead88"
            ]
        ],
        "outputLabels": [
            "error",
            "subscription_new",
            "subscription_existing",
            "unsubscription"
        ]
    },
    {
        "id": "db2d5103.3b7ed",
        "type": "ui_toast",
        "z": "186ee9b7.78e426",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Internal problem",
        "name": "Show error popup",
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "36ba1f5.156dee",
        "type": "ui_toast",
        "z": "186ee9b7.78e426",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Info",
        "name": "Show subscription confirmation popup",
        "x": 950,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "51b2a714.96c4d8",
        "type": "ui_toast",
        "z": "186ee9b7.78e426",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": false,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "topic": "Info",
        "name": "Show unsubscription confirmation popup",
        "x": 960,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "891acbb7.fead88",
        "type": "change",
        "z": "186ee9b7.78e426",
        "name": "Set popup body",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Succesfully unsubscribed from receiving Node-RED notifications",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 280,
        "wires": [
            [
                "51b2a714.96c4d8"
            ]
        ]
    },
    {
        "id": "b81732c1.c64cf",
        "type": "change",
        "z": "186ee9b7.78e426",
        "name": "Set popup body",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "Succesfully subscribed for receiving Node-RED notifications",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 240,
        "wires": [
            [
                "36ba1f5.156dee"
            ]
        ]
    },
    {
        "id": "cb8eb1f8.b0135",
        "type": "function",
        "z": "186ee9b7.78e426",
        "name": "Get subscriptions",
        "func": "// Use the flow variable that has been set in Demo Web Push Manager API (\"storeInFile\" context)\nmsg.subscriptions = flow.get('pushSubscriptions') || []\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 420,
        "wires": [
            [
                "b976fed6.9d7f5"
            ]
        ]
    },
    {
        "id": "b976fed6.9d7f5",
        "type": "web-push",
        "z": "186ee9b7.78e426",
        "name": "Send notification to the subscribers",
        "vapidConfiguration": "8dc58e15e89f6392",
        "x": 1040,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "3d761c9f.df5fa4",
        "type": "web-push-notification",
        "z": "186ee9b7.78e426",
        "name": "web push notification",
        "title": "Hello Node-RED user!!!",
        "body": "Click me to open your dashboard",
        "sound": "default",
        "payload": "[{\"key\":\"icon\",\"value\":\"https://nodered.org/about/resources/media/node-red-icon-2.png\",\"type\":\"str\"}]",
        "x": 500,
        "y": 420,
        "wires": [
            [
                "cb8eb1f8.b0135"
            ]
        ]
    },
    {
        "id": "412be38b.155bac",
        "type": "inject",
        "z": "186ee9b7.78e426",
        "name": "Send predefined notification",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 260,
        "y": 420,
        "wires": [
            [
                "3d761c9f.df5fa4"
            ]
        ]
    },
    {
        "id": "8b685850.ce1428",
        "type": "function",
        "z": "186ee9b7.78e426",
        "name": "Get subscriptions",
        "func": "// Use the flow variable that has been set in Demo Web Push Manager API (\"storeInFile\" context)\nmsg.subscriptions = flow.get('pushSubscriptions') || []\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 480,
        "wires": [
            [
                "e45925bf.a85bb8"
            ]
        ]
    },
    {
        "id": "e45925bf.a85bb8",
        "type": "web-push",
        "z": "186ee9b7.78e426",
        "name": "Send notification to the subscribers",
        "vapidConfiguration": "8dc58e15e89f6392",
        "x": 1040,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "362b4b30.09d254",
        "type": "inject",
        "z": "186ee9b7.78e426",
        "name": "Send custom notifcation",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"notification\":{\"title\":\"Hello Node-RED user!\",\"body\":\"Click me to open your dashboard\"},\"data\":{\"silent\":true,\"requireInteraction \":true,\"icon\":\"https://nodered.org/about/resources/media/node-red-icon-2.png\",\"image\":\"https://user-images.githubusercontent.com/14224149/73395580-19bac700-42e0-11ea-90c2-71cb4f496637.png\"}}",
        "payloadType": "json",
        "x": 250,
        "y": 480,
        "wires": [
            [
                "180914ab.2b6e8b"
            ]
        ]
    },
    {
        "id": "180914ab.2b6e8b",
        "type": "change",
        "z": "186ee9b7.78e426",
        "name": "payload => notification",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "notification",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 480,
        "wires": [
            [
                "8b685850.ce1428"
            ]
        ]
    },
    {
        "id": "39984194.b6179e",
        "type": "inject",
        "z": "186ee9b7.78e426",
        "name": "Reload service worker",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "reload_service_worker",
        "payloadType": "str",
        "x": 220,
        "y": 180,
        "wires": [
            [
                "78eccaf6.6f3504"
            ]
        ]
    },
    {
        "id": "1cd036385c85d54d",
        "type": "link in",
        "z": "186ee9b7.78e426",
        "name": "Push",
        "links": [
            "acda66fdb9be0812",
            "9a73800936b6d966",
            "daa30e9d291ddc4e",
            "4ecb4949f900dca4",
            "8f033d351dfceb3c",
            "cd3194d00047dffa",
            "8c611b1cbe7f1ba4",
            "4ccfd8e25ba474a1",
            "342eebe9491c875a",
            "15e2744d23e684e0"
        ],
        "x": 595,
        "y": 560,
        "wires": [
            [
                "8b685850.ce1428",
                "599b38aea5c2631c"
            ]
        ]
    },
    {
        "id": "599b38aea5c2631c",
        "type": "debug",
        "z": "186ee9b7.78e426",
        "name": "debug 32",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 560,
        "wires": []
    },
    {
        "id": "7f807fd8588ea7ce",
        "type": "http in",
        "z": "fc93ef5a2502b341",
        "name": "",
        "url": "/ui/kamera-balkon-img",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 660,
        "wires": [
            [
                "97a7a986daf2b9df"
            ]
        ]
    },
    {
        "id": "71cb69634e2af22f",
        "type": "http response",
        "z": "fc93ef5a2502b341",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Type": "image/jpeg",
            "Content-Disposition": "inline"
        },
        "x": 630,
        "y": 660,
        "wires": []
    },
    {
        "id": "97a7a986daf2b9df",
        "type": "change",
        "z": "fc93ef5a2502b341",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "kamera-balkon",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 660,
        "wires": [
            [
                "71cb69634e2af22f"
            ]
        ]
    },
    {
        "id": "d90fde07c98e6555",
        "type": "http in",
        "z": "fc93ef5a2502b341",
        "name": "",
        "url": "/ui/kamera-kellertuer-img",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 620,
        "wires": [
            [
                "633149d23f7b2e78"
            ]
        ]
    },
    {
        "id": "7ffee3775dd668e3",
        "type": "http response",
        "z": "fc93ef5a2502b341",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Type": "image/jpeg",
            "Content-Disposition": "inline"
        },
        "x": 630,
        "y": 620,
        "wires": []
    },
    {
        "id": "633149d23f7b2e78",
        "type": "change",
        "z": "fc93ef5a2502b341",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "kamera-kellertuer",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 620,
        "wires": [
            [
                "7ffee3775dd668e3"
            ]
        ]
    },
    {
        "id": "5405bbc47910f8ec",
        "type": "http in",
        "z": "fc93ef5a2502b341",
        "name": "",
        "url": "/ui/kamera-haustuer-img",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 580,
        "wires": [
            [
                "31f96fa7073319ca"
            ]
        ]
    },
    {
        "id": "0fb5633e535d1adb",
        "type": "http response",
        "z": "fc93ef5a2502b341",
        "name": "",
        "statusCode": "",
        "headers": {
            "Content-Type": "image/jpeg",
            "Content-Disposition": "inline",
            "Cache-Control": "no-cache"
        },
        "x": 630,
        "y": 580,
        "wires": []
    },
    {
        "id": "09cbf53394928908",
        "type": "function",
        "z": "fc93ef5a2502b341",
        "name": "Person detected at",
        "func": "let timestamp = new Date();\nlet time = timestamp.toLocaleTimeString('de-DE', { timeStyle: 'short' });\nreturn [\n    {payload: time},\n    {payload: timestamp.valueOf()}\n];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 120,
        "wires": [
            [
                "9dc10f33bc28aa10"
            ],
            [
                "3a9115c6aff8a3a9"
            ]
        ]
    },
    {
        "id": "adbdd2ef941f50af",
        "type": "function",
        "z": "fc93ef5a2502b341",
        "name": "Push Notification",
        "func": "let image_base64 = msg.payload;\nlet image_url = \"https://home.dipe.de/ui/kamera-haustuer-img\";\n\nreturn {\n    notification: {\n        notification: { \n            title: \"Kamera Haustür\", \n            body: \"Person erkannt\" \n        }, \n        data: { \n            requireInteraction: true, \n            icon: \"https://nodered.org/about/resources/media/node-red-icon-2.png\",\n            image: image_url\n        }\n    }\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 160,
        "wires": [
            [
                "8f033d351dfceb3c"
            ]
        ]
    },
    {
        "id": "e2f015a4de4af10b",
        "type": "change",
        "z": "fc93ef5a2502b341",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kamera-haustuer",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "adbdd2ef941f50af"
            ]
        ]
    },
    {
        "id": "9dc10f33bc28aa10",
        "type": "ui_text",
        "z": "fc93ef5a2502b341",
        "group": "6ed7382c947a98d9",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Haustür – Person erkannt um",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 660,
        "y": 80,
        "wires": []
    },
    {
        "id": "3a9115c6aff8a3a9",
        "type": "ui_template",
        "z": "fc93ef5a2502b341",
        "group": "6ed7382c947a98d9",
        "name": "Schnappschuss",
        "order": 2,
        "width": 9,
        "height": 9,
        "format": "<img src=\"/ui/kamera-haustuer-img?ts={{msg.payload}}\" style=\"transform:rotate(90deg);margin-top:100px; height: 277px\">",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "8f033d351dfceb3c",
        "type": "link out",
        "z": "fc93ef5a2502b341",
        "name": "Person an Kellertür erkannt",
        "mode": "link",
        "links": [
            "1cd036385c85d54d"
        ],
        "x": 765,
        "y": 160,
        "wires": []
    },
    {
        "id": "f19e72af47339cf8",
        "type": "function",
        "z": "fc93ef5a2502b341",
        "name": "Person detected at",
        "func": "let timestamp = new Date();\nlet time = timestamp.toLocaleTimeString('de-DE', { timeStyle: 'short' });\nreturn [\n    {payload: time},\n    {payload: timestamp.valueOf()}\n];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 280,
        "wires": [
            [
                "664ba5ea762ea9aa"
            ],
            [
                "9a48784e5e86db26"
            ]
        ]
    },
    {
        "id": "6b2c44686b589a9b",
        "type": "function",
        "z": "fc93ef5a2502b341",
        "name": "Push Notification",
        "func": "let image_base64 = msg.payload;\nlet image_url = \"https://home.dipe.de/ui/kamera-kellertuer-img\";\n\nreturn {\n    notification: {\n        notification: { \n            title: \"Kamera Kellertür\", \n            body: \"Person erkannt\" \n        }, \n        data: { \n            requireInteraction: true, \n            icon: \"https://nodered.org/about/resources/media/node-red-icon-2.png\",\n            image: image_url\n        }\n    }\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 320,
        "wires": [
            [
                "4ccfd8e25ba474a1"
            ]
        ]
    },
    {
        "id": "409f37a2ef9abb46",
        "type": "change",
        "z": "fc93ef5a2502b341",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kamera-kellertuer",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 320,
        "wires": [
            [
                "6b2c44686b589a9b"
            ]
        ]
    },
    {
        "id": "664ba5ea762ea9aa",
        "type": "ui_text",
        "z": "fc93ef5a2502b341",
        "group": "bebc2a08.8975f8",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Kellertür – Person erkannt um",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 670,
        "y": 240,
        "wires": []
    },
    {
        "id": "9a48784e5e86db26",
        "type": "ui_template",
        "z": "fc93ef5a2502b341",
        "group": "bebc2a08.8975f8",
        "name": "Schnappschuss",
        "order": 2,
        "width": 9,
        "height": "5",
        "format": "<img src=\"/ui/kamera-kellertuer-img?ts={{msg.payload}}\" style=\"height: 264px\">",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4ccfd8e25ba474a1",
        "type": "link out",
        "z": "fc93ef5a2502b341",
        "name": "Person an Kellertür erkannt",
        "mode": "link",
        "links": [
            "1cd036385c85d54d",
            "3bbcf05fba67d89a"
        ],
        "x": 765,
        "y": 320,
        "wires": []
    },
    {
        "id": "68f1e056b5ac9262",
        "type": "function",
        "z": "fc93ef5a2502b341",
        "name": "Person detected at",
        "func": "let timestamp = new Date();\nlet time = timestamp.toLocaleTimeString('de-DE', { timeStyle: 'short' });\nreturn [\n    {payload: time},\n    {payload: timestamp.valueOf()}\n];",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 440,
        "wires": [
            [
                "359defd5b7fb9042"
            ],
            [
                "7777344c3077307f"
            ]
        ]
    },
    {
        "id": "93e21039c660d889",
        "type": "function",
        "z": "fc93ef5a2502b341",
        "name": "Push Notification",
        "func": "let image_base64 = msg.payload;\nlet image_url = \"https://home.dipe.de/ui/kamera-balkon-img\";\n\nreturn {\n    notification: {\n        notification: { \n            title: \"Kamera Balkon\", \n            body: \"Person erkannt\" \n        }, \n        data: { \n            requireInteraction: true, \n            icon: \"https://nodered.org/about/resources/media/node-red-icon-2.png\",\n            image: image_url\n        }\n    }\n};\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 480,
        "wires": [
            [
                "15e2744d23e684e0"
            ]
        ]
    },
    {
        "id": "94f4b7425b382622",
        "type": "change",
        "z": "fc93ef5a2502b341",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "kamera-balkon",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 480,
        "wires": [
            [
                "93e21039c660d889"
            ]
        ]
    },
    {
        "id": "359defd5b7fb9042",
        "type": "ui_text",
        "z": "fc93ef5a2502b341",
        "group": "09752717148dff64",
        "order": 1,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Balkon – Person erkannt um",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": "",
        "color": "#000000",
        "x": 660,
        "y": 400,
        "wires": []
    },
    {
        "id": "7777344c3077307f",
        "type": "ui_template",
        "z": "fc93ef5a2502b341",
        "group": "09752717148dff64",
        "name": "Schnappschuss",
        "order": 2,
        "width": 9,
        "height": "5",
        "format": "<img src=\"/ui/kamera-balkon-img?ts={{msg.payload}}\"style=\"height: 264px\">",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "15e2744d23e684e0",
        "type": "link out",
        "z": "fc93ef5a2502b341",
        "name": "Person an Kellertür erkannt",
        "mode": "link",
        "links": [
            "1cd036385c85d54d"
        ],
        "x": 765,
        "y": 480,
        "wires": []
    },
    {
        "id": "31f96fa7073319ca",
        "type": "change",
        "z": "fc93ef5a2502b341",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "kamera-haustuer",
                "tot": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 580,
        "wires": [
            [
                "0fb5633e535d1adb"
            ]
        ]
    },
    {
        "id": "652ddcc9a8144c81",
        "type": "subflow:f5d8e11fee9a1e7c",
        "z": "fc93ef5a2502b341",
        "name": "Kamera Haustür",
        "env": [
            {
                "name": "username",
                "value": "admin",
                "type": "str"
            },
            {
                "name": "password",
                "type": "cred"
            },
            {
                "name": "hostname",
                "value": "kamera-haustuer",
                "type": "str"
            }
        ],
        "x": 160,
        "y": 140,
        "wires": [
            [
                "09cbf53394928908"
            ],
            [
                "e2f015a4de4af10b"
            ]
        ]
    },
    {
        "id": "281f8d4326a675f1",
        "type": "subflow:f5d8e11fee9a1e7c",
        "z": "fc93ef5a2502b341",
        "name": "Kamera Kellertür",
        "env": [
            {
                "name": "username",
                "value": "admin",
                "type": "str"
            },
            {
                "name": "password",
                "type": "cred"
            },
            {
                "name": "hostname",
                "value": "kamera-kellertuer",
                "type": "str"
            }
        ],
        "x": 160,
        "y": 300,
        "wires": [
            [
                "f19e72af47339cf8"
            ],
            [
                "409f37a2ef9abb46"
            ]
        ]
    },
    {
        "id": "9ff914a13475df69",
        "type": "subflow:f5d8e11fee9a1e7c",
        "z": "fc93ef5a2502b341",
        "name": "Kamera Balkon",
        "env": [
            {
                "name": "username",
                "value": "admin",
                "type": "str"
            },
            {
                "name": "password",
                "type": "cred"
            },
            {
                "name": "hostname",
                "value": "kamera-balkon",
                "type": "str"
            }
        ],
        "x": 160,
        "y": 460,
        "wires": [
            [
                "68f1e056b5ac9262"
            ],
            [
                "94f4b7425b382622"
            ]
        ]
    },
    {
        "id": "6691d6080f35a57f",
        "type": "mqtt out",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "topic": "ir-remote/send",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 1000,
        "y": 420,
        "wires": []
    },
    {
        "id": "3853dc54ae0c63b8",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Info",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0045 0043 0045 0021 0022 0021 0023 0021 0023 0021 0023 0021 0023 0021 0023 0043 0023 0021 0022 0021 0023 0021 0023 0181",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 280,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "ac4d26e57b84d3b4",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Zurück",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000D 0000 0023 0021 0023 0021 0045 0021 0023 0021 0023 0021 0023 0021 0023 0044 0022 0021 0023 0021 0023 0021 0023 0021 0023 0021 0023 0181",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 520,
        "y": 200,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "5c2db22b12c777f7",
        "type": "change",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload",
                "pt": "msg",
                "to": "payload.data",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 420,
        "wires": [
            [
                "6691d6080f35a57f",
                "1f801f03b7590a88"
            ]
        ]
    },
    {
        "id": "1f801f03b7590a88",
        "type": "debug",
        "z": "c2a5330f97fa7c16",
        "name": "debug 34",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 380,
        "wires": []
    },
    {
        "id": "dcc5863019b27848",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Menü",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0023 0021 0045 0021 0023 0021 0024 0020 0023 0021 0023 0021 0023 0021 0022 0022 0022 0043 0045 0043 0023 0021 0023 0181 0000 006D 000C 0000 0023 0021 0045 0021 0023 0020 0023 0021 0024 0020 0024 0020 0023 0021 0023 0021 0024 0042 0045 0043 0023 0021 0024 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 280,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "8831cd968614e3af",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "1",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000D 0000 0023 0020 0023 0021 0045 0021 0023 0021 0023 0021 0022 0021 0022 0021 0022 0021 0022 0021 0023 0021 0022 0022 0022 0043 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 340,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "93929501b1283c12",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "2",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0024 0020 0046 0020 0022 0021 0023 0021 0022 0021 0023 0021 0023 0021 0023 0021 0022 0022 0022 0021 0023 0043 0046 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "82ac2853a6ccaba6",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "3",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": " 0000 006D 000D 0000 0024 0020 0046 0020 0024 0020 0023 0021 0024 0020 0024 0020 0024 0020 0024 0020 0024 0020 0024 0020 0023 0043 0022 0021 0023 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 340,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "0c522b6069740792",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "4",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0022 0022 0023 0021 0045 0021 0022 0022 0022 0022 0022 0022 0022 0021 0022 0022 0022 0022 0022 0043 0045 0022 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 380,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "285a6f6b5db41481",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "5",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0024 0020 0045 0021 0022 0021 0023 0021 0023 0021 0023 0021 0022 0021 0022 0021 0023 0021 0022 0043 0046 0041 0024 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 380,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "7f9a82fd4bd81703",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "6",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0022 0021 0023 0021 0045 0021 0023 0021 0023 0021 0023 0021 0024 0020 0022 0021 0023 0021 0022 0043 0023 0021 0045 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 380,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "f5a7c3f2ca4a8bba",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "7",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000D 0000 0023 0021 0045 0021 0022 0021 0022 0021 0022 0022 0022 0021 0022 0022 0022 0022 0022 0021 0022 0043 0022 0021 0022 0022 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "c0137d00f0b51865",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "8",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0022 0021 0023 0021 0045 0021 0022 0021 0022 0022 0022 0022 0022 0022 0022 0022 0022 0043 0045 0021 0022 0022 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "0888fe6f1ec6264a",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "9",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0022 0021 0045 0022 0022 0021 0022 0021 0022 0021 0022 0022 0022 0021 0023 0021 0022 0043 0045 0021 0022 0043 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 420,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "fe1e31949702d5fb",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "0",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000D 0000 0024 0020 0023 0021 0045 0021 0023 0021 0022 0022 0022 0021 0023 0021 0023 0021 0023 0021 0023 0021 0024 0020 0023 0021 0023 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "d38d9e21c9bfb68a",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Home",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0020 0024 0042 0024 0020 0025 0020 0025 001E 0025 001E 0025 001F 0048 001D 0026 0041 0025 001E 0025 001F 0046 0020 0181",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 280,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "0a31988d4b79aebb",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "EPG",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0047 0021 0024 0020 0024 0020 0023 0020 0025 001F 0023 0021 0023 0020 0023 0020 0024 0041 0025 0021 0023 0020 0046 0181 0000 006D 000D 0000 0048 001F 0024 0020 0024 0020 0023 0021 0023 0020 0023 0020 0024 0020 0024 001F 0023 003F 0027 0020 0024 0020 0047 0020 0015 0181 0000 006D 000D 0000 0047 0020 0023 0021 0023 0021 0023 0021 0023 0021 0024 0020 0024 0020 0023 0020 0023 0036 002F 0021 0023 0021 0046 002D 0011 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "fec8460791901d25",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "TV",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000B 0000 0024 0020 0045 0021 0023 0021 0022 0021 0022 0021 0023 0021 0022 0021 0023 0043 0046 0041 0023 0021 0045 0181 0000 006D 000B 0000 0023 0021 0045 0021 0023 0021 0023 0021 0023 0021 0022 0021 0022 0021 0023 0043 0046 0042 0023 0021 0045 0181 0000 006D 000B 0000 0023 0021 0045 0021 0023 0021 0022 0021 0022 0021 0023 0021 0022 0021 0023 0043 0046 0042 0023 0021 0045 0181 000 006D 0022 0000 015B 00AD 0016 0014 0016 0014 0016 0014 0016 003F 0016 003F 0016 003F 0016 003F 0016 0014 0017 003F 0016 003F 0016 003F 0017 0014 0016 0014 0016 0014 0016 0014 0016 003F 0016 0014 0017 003F 0017 003F 0017 003F 0016 003F 0017 003F 0016 003F 0017 0014 0016 003F 0016 0014 0016 0014 0016 0014 0016 0014 0016 0014 0016 0014 0016 003F 0016 0181 0000 006D 0002 0000 015B 0055 0016 0181 0000 006D 0002 0000 015B 0055 0017 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "d5fe1975191b1f67",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Rot",
        "tooltip": "",
        "color": "red",
        "bgcolor": "red",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0024 0021 0023 0021 0046 0021 0023 0021 0023 0021 0024 0020 0024 001D 0027 0014 0051 0017 004D 0042 0024 0021 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 660,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "3c8aa5e1d1411339",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Grün",
        "tooltip": "",
        "color": "green",
        "bgcolor": "green",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0024 0021 0024 0020 0047 0020 0023 0021 0023 0021 0023 0021 0023 0021 0024 003D 0028 0021 0046 0038 0050 0038 0009 0181 0000 006D 000C 0000 0024 0021 0023 0021 0046 0021 0023 0021 0024 0020 0023 0021 0023 0021 0024 0035 002F 0021 0047 002D 005B 002E 000B 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 660,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "275349b9c956b911",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Gelb",
        "tooltip": "",
        "color": "yellow",
        "bgcolor": "yellow",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000B 0000 0022 0021 0023 0021 0045 0021 0024 0021 0020 0024 0023 0021 0023 0041 0046 0042 0046 0044 0020 001F 0027 0181 0000 006D 000B 0000 0022 0021 0022 0021 0045 0021 0022 0021 0022 0022 0022 0021 0022 0044 0044 0043 0044 0043 0022 0021 0024 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 740,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "f456439174493d34",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Blau",
        "tooltip": "",
        "color": "blue",
        "bgcolor": "blue",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000B 0000 0024 0021 0046 0021 0023 0021 0023 0021 0024 0020 0024 0020 0024 0040 0047 003F 0049 0020 0025 001F 0023 0181 0000 006D 000D 0000 0025 0020 0046 0021 0023 0021 0023 0021 0023 0021 0024 0020 0023 0039 004E 003B 004D 0021 0023 0021 0024 0026 0009 0005 000A 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 660,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "aec476181ed6ba38",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "<<",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000A 0000 0022 0021 0022 0021 0045 0022 0022 0044 0022 0022 0045 0044 0022 0021 0045 0021 0023 0043 0044 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 700,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "265eb06a59519ef2",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": ">",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000A 0000 0024 0021 0023 0021 0046 0021 0023 003F 0026 0021 0046 0041 0025 0021 0046 003D 004B 0041 0024 0181 0000 006D 000A 0000 0024 0021 0024 0020 0046 0021 0023 003F 0027 0021 0046 0041 0025 0020 0047 0040 0047 0040 0025 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 700,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "074c7e3e55d8b06e",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "||",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000A 0000 0025 0020 0023 0021 0047 001F 0023 0041 0025 0020 0046 0041 0047 003F 0049 0021 0023 0040 0025 0181",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 740,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "d705cbb1144caf0b",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": ">>",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000A 0000 0023 0021 0045 0021 0023 0021 0023 0043 0023 0021 0046 0042 0023 0021 0046 0041 0045 0021 0024 0181 0000 006D 000A 0000 0025 0021 0046 0021 0024 0020 0023 003F 0026 0020 0047 003C 002A 0020 0046 003E 0049 0021 0023 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 700,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "77b397d04a92244a",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "+",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 0022 0000 015B 00AD 0016 0014 0016 0014 0016 0014 0016 003F 0016 003F 0016 003F 0016 003F 0016 0014 0016 003F 0016 003F 0016 003F 0016 0014 0016 0014 0016 0014 0016 0014 0016 003F 0015 0015 0016 003F 0016 003F 0016 003F 0016 003F 0016 0014 0016 0014 0016 0014 0016 003F 0016 0014 0016 0014 0015 0015 0016 0014 0016 003F 0015 0040 0016 003F 0016 0181 0000 006D 0002 0000 015B 0055 0015 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 520,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "7268a1524391073c",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "-",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 0022 0000 015A 00AE 0016 0014 0016 0014 0016 0014 0016 003F 0016 003F 0016 003F 0016 003F 0016 0014 0016 003F 0016 003F 0015 0040 0015 0015 0016 0014 0016 0014 0016 0014 0016 003F 0016 003F 0015 0040 0015 0040 0015 0040 0015 0040 0016 0014 0015 0015 0015 0015 0015 0015 0016 0014 0015 0015 0015 0016 0015 0015 0015 0041 0014 0041 0014 0041 0014 0181 0000 006D 0002 0000 0159 0057 0014 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 600,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "788ddf186d82392b",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "P+",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0025 001F 0023 0021 0044 0022 0022 0022 0021 0023 0021 0023 0021 0023 0022 0043 0021 0024 0043 0023 0021 0023 0022 0181 0000 006D 000D 0000 0022 0023 0027 0006 0003 0012 0045 0021 0023 0020 0024 0021 0023 0021 0023 0021 0023 0043 0023 0021 0045 0021 0024 0020 0023 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 520,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "b5a3433dbc312a52",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "P-",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0022 0021 0023 0021 0045 0021 0023 0021 0023 0021 0022 0021 0024 0020 0023 0043 0044 0043 0022 0021 0023 0021 0023 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 600,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "40a785a734bc9dc0",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "<",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0022 0022 0022 0022 0045 0021 0022 0021 0022 0021 0022 0021 0023 0021 0022 0043 0045 0021 0022 0021 0022 0043 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 560,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "e35fe934314c4833",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "^",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0024 0021 0044 0022 0022 0022 0022 0022 0021 0023 0021 0023 0022 0043 0044 0023 0021 0023 0022 0022 0021 0023 0022 0181",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 520,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "9be31e91e785be10",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "v",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0022 0021 0024 0020 0045 0021 0022 0021 0023 0021 0022 0021 0023 0043 0044 0022 0022 0021 0022 0021 0022 0044 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 600,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "c86f34e0dcb51565",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": ">",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0022 0021 0045 0021 0022 0021 0022 0022 0022 0022 0022 0022 0022 0022 0022 0043 0045 0021 0022 0022 0022 0022 0022 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 560,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "0411ac7d9962e0f3",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "OK",
        "tooltip": "",
        "color": "",
        "bgcolor": "#cccccc",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000C 0000 0024 0021 0047 0020 0023 0021 0024 0020 0023 0021 0023 0021 0023 003F 0048 0021 0023 003C 0029 0021 0046 0030 0004 0181 0000 006D 000B 0000 0022 0021 0046 0021 0023 0021 0023 0021 0022 0021 0023 0021 0023 0043 0045 0021 0022 0043 0022 0022 0045 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 560,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "597845a575892a0e",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Aufn.",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "000 006D 000E 0000 0024 0021 0023 0021 0046 0021 0024 003C 0028 0021 0047 0025 0040 0019 004D 0011 0002 000C 0008 0005 000B 0007 0027 001F 0025 0021 0023 0181",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 740,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "0583ae608f2bb666",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Mute",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 0022 0000 015B 00AC 0017 0014 0016 0014 0016 0014 0017 003F 0016 003F 0016 003F 0016 003F 0016 0014 0016 003F 0016 003F 0017 003F 0016 0014 0017 0014 0016 0014 0016 0014 0016 003F 0016 0014 0016 0014 0016 003F 0016 003F 0016 003F 0016 0014 0017 0014 0016 003F 0016 003F 0017 003F 0016 0014 0016 0014 0017 0014 0016 003F 0016 003F 0017 0014 0016 0181 0000 006D 0002 0000 015B 0055 0016 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 460,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "4a7a20d84370ba75",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "293408e2cb7bb9c0",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "#303030",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 510,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "989e9ecc2e57077c",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "#303030",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "2fb0104dcced5af2",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "deb41d0cb1067945",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Aus",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000D 0000 0024 0021 0024 0020 0045 0021 0023 0021 0023 0021 0023 0021 0024 0020 0023 0021 0023 003D 0029 0020 0046 0021 0023 002F 000D 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 370,
        "y": 200,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "8c5002d91a1447d6",
        "type": "mqtt out",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "topic": "ir-remote/switch/receiver/command",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "c349b9ff.9dc4c8",
        "x": 800,
        "y": 820,
        "wires": []
    },
    {
        "id": "f02c56da187f6d4d",
        "type": "ui_switch",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "label": "IR-Empfang",
        "tooltip": "",
        "group": "2359d0317a8e5efd",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "ON",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "OFF",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 550,
        "y": 820,
        "wires": [
            [
                "8c5002d91a1447d6"
            ]
        ]
    },
    {
        "id": "6b6838a8ab8f0576",
        "type": "ui_button",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "group": "f52f860f97388f73",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "DR+",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "0000 006D 000B 0000 0046 0042 0045 0021 0022 0021 0022 0021 0022 0021 0023 0021 0022 0043 0023 0021 0044 0044 0023 0021 0023 0181 0000 006D 000B 0000 0046 0042 0045 0021 0023 0021 0023 0021 0022 0022 0023 0021 0022 0043 0023 0021 0045 0043 0023 0021 0024 0181 ",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "5c2db22b12c777f7"
            ]
        ]
    },
    {
        "id": "a165b96bd31a0e52",
        "type": "mqtt in",
        "z": "c2a5330f97fa7c16",
        "name": "",
        "topic": "ir-remote/switch/receiver/state",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "c349b9ff.9dc4c8",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 310,
        "y": 820,
        "wires": [
            [
                "f02c56da187f6d4d"
            ]
        ]
    }
]